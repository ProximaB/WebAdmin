// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using MSDev.DB;
using System;

namespace WebAdmin.Migrations.Community
{
    [DbContext(typeof(CommunityContext))]
    [Migration("20171121085729_CommunityBlog")]
    partial class CommunityBlog
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452");

            modelBuilder.Entity("MSDev.DB.Community.Blog", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<Guid>("AuthorId");

                    b.Property<string>("AuthorName")
                        .HasMaxLength(64);

                    b.Property<string>("CatalogName")
                        .HasMaxLength(32);

                    b.Property<string>("Content");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Description")
                        .HasMaxLength(500);

                    b.Property<bool>("IsRecommend");

                    b.Property<Guid>("SeriesId");

                    b.Property<string>("SourceUrl")
                        .HasMaxLength(256);

                    b.Property<string>("Status")
                        .HasMaxLength(32);

                    b.Property<string>("Tags")
                        .HasMaxLength(256);

                    b.Property<string>("Title")
                        .HasMaxLength(128);

                    b.Property<string>("Type");

                    b.Property<DateTime>("UpdatedTime");

                    b.HasKey("Id");

                    b.HasIndex("CatalogName");

                    b.HasIndex("SeriesId");

                    b.HasIndex("UpdatedTime");

                    b.ToTable("Blog");
                });

            modelBuilder.Entity("MSDev.DB.Community.LikeAnalysis", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("AgreeNumber");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<long>("LikeNumber");

                    b.Property<Guid>("ObjectId");

                    b.Property<string>("ObjectType");

                    b.Property<string>("Status")
                        .HasMaxLength(32);

                    b.Property<long>("UnLinkeNumber");

                    b.Property<DateTime>("UpdatedTime");

                    b.Property<long>("ViewNumber");

                    b.HasKey("Id");

                    b.HasIndex("ObjectId");

                    b.HasIndex("ObjectType");

                    b.HasIndex("UpdatedTime");

                    b.ToTable("LikeAnalysis");
                });

            modelBuilder.Entity("MSDev.DB.Community.Series", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("CatalogName");

                    b.Property<DateTime>("CreatedTime");

                    b.Property<string>("Name")
                        .HasMaxLength(100);

                    b.Property<string>("Status")
                        .HasMaxLength(32);

                    b.Property<DateTime>("UpdatedTime");

                    b.Property<string>("Value")
                        .HasMaxLength(500);

                    b.HasKey("Id");

                    b.ToTable("Series");
                });

            modelBuilder.Entity("MSDev.DB.Community.Blog", b =>
                {
                    b.HasOne("MSDev.DB.Community.Series", "Series")
                        .WithMany("Blogs")
                        .HasForeignKey("SeriesId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
