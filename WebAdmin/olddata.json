[{"Id":98,"Author":"Andrew Pardoe [MSFT]","Categories":"Visual C++ Team Blog","CreateTime":"2017-09-12T09:28:11","Description":"<p><em>This post written by Tanveer Gani, Stephan T. Lavavej, Andrew Marino, Gabriel Dos Reis, and Andrew Pardoe</em></p>\n<p>&ldquo;Two-phase name lookup&rdquo; is an informal term that refers to a set of rules governing the resolution of names used in a template declaration. <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">These rules were formalized</a> more than two decades ago in an attempt to reconcile two opposing compilation models for templates: the inclusion model (what most developers know of templates today), and the separation model (the basis of the original design for templates). You can find the genesis of dependent names in the foundational paper <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1992/N0209.pdf\">Proposed Revisions to the Template Specification</a>, firmly grounded in the One Definition Rule principle. If you&rsquo;re interested in diving into the glorious details, you can find these rules in modern terms in section 17.6&nbsp;(stable name [temp.res]) of the <a href=\"https://wg21.link/N4659\">C++17 draft standard</a>. In the last few months the MSVC compiler has come from having no support for two-phase name lookup to being usable on most code. We&rsquo;ll finish complete support for this feature in a future Visual Studio 2017 update.</p>\n<p>You&rsquo;ll need to use the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><code>/permissive-</code> conformance switch</a> to enable two-phase lookup in the MSVC compiler included with Visual Studio 2017 &ldquo;15.3&rdquo;. Two-phase name lookup drastically changes the meaning of some code so the feature is not enabled by default in the current version of MSVC.</p>\n<p>This post examines exactly what two-phase name lookup entails, what&rsquo;s currently implemented in MSVC, and how to make effective use of MSVC&rsquo;s partial but substantial support for two-phase name lookup. We&rsquo;ll also tell you how to opt-out of two-phase lookup, even if you want the rest of your code to strictly conform to the Standard. Lastly, we&rsquo;ll explain a bit about why it took us so long to get here&mdash;these rules are at least 25 years old!</p>\n<h3>What is &ldquo;two-phase name lookup&rdquo;?</h3>\n<p>The original design of templates for C++ meant to do exactly what the term &ldquo;template&rdquo; implied: a template would stamp out families of classes and functions. It allowed and encouraged, but did not require, early checking of non-dependent names. Consequently, identifiers didn&rsquo;t need to be looked up during parsing of the template definition. Instead, compilers were allowed to delay name lookup until the template was instantiated. Similarly, the syntax of a template didn&rsquo;t need to be validated until instantiation. Essentially, the meaning of a name used in a template was not determined until the template was instantiated.</p>\n<p>In accordance with these original rules, previous versions of MSVC did very limited template parsing. &nbsp;In particular, function template bodies were not parsed at all until instantiation. The compiler recorded the body of a template as a stream of tokens that was replayed when it was needed during instantiation of a template where it might be a candidate.</p>\n<p>Let&rsquo;s consider what this means by looking at a piece of code. Links are provided to online compilers so you can play with the code as you read through this post.</p>\n<pre>\n#include &lt;cstdio&gt;\n\nvoid func(void*) { std::puts(\"The call resolves to void*\") ;}\n\ntemplate&lt;typename T&gt; void g(T x)\n{\n    func(0);\n}\n\nvoid func(int) { std::puts(\"The call resolves to int\"); }\n\nint main() \n{\n    g(3.14);\n}\n</pre>\n<p>To which of these overloads does the call on line 7 resolve? The <code>void*</code> overload was already declared at the point the template was written on line 5. The function <code>void func(int)</code> didn&rsquo;t exist when the template was written. Therefore, the call on line 14 to the function template <code>void g(T x)</code> on line 5 should resolve to function <code>void func(void*)</code> on line 3.</p>\n<p>When compiled with a compiler that conforms to the standard, this program prints &ldquo;<code>The call resolves to void*</code>&ldquo;. You can <a href=\"http://rextester.com/YCHV46514\">see this behavior in GCC</a> using the Rextester online compiler. <a href=\"http://rextester.com/JAO93001\">Using the MSVC from Visual Studio 2015</a>, without support for two-phase name lookup, the program prints &ldquo;The call resolves to int&rdquo;.</p>\n<p>Why did MSVC get this wrong? The mechanics we used to parse templates worked when templates were simple, but limited what the compiler could do when two-phase name lookup came into play. MSVC previously recorded the body of the template as a stream of tokens and stored that stream away to be replayed at instantiation time. The behavior of MSVC&rsquo;s template substitution from a recorded token stream somewhat resembled the behavior of macro substitution in that limited analysis was done of a template&rsquo;s body.</p>\n<p>In this example, MSVC stored a token stream for the function template <code>void g(T x)</code>. If the compiler had analyzed the function call at the point where it was encountered, only the declaration for <code>void func(void*)</code> would have been in the overload set. (Note that is a valid match for the call <code>func(0)</code> because C++ allows <code>0</code> to represent a <a href=\"http://en.cppreference.com/w/cpp/language/implicit_conversion\">null pointer constant that can be converted to any pointer type</a>.)</p>\n<p>The function overload <code>void func(int)</code> would also be a match for the call <code>func(0)</code> except that it should not be in the overload set at the point the function template <code>void g(T x)</code> was evaluated. But MSVC didn&rsquo;t evaluate the body of the template until the point of instantiation&mdash;after the declaration for <code>void func(int)</code> had been added to the overload set. At that point, the compiler picked the better match for an integer argument: <code>int</code> rather than <code>void*</code>.</p>\n<p>You can see both of the compilers in action in <a href=\"https://godbolt.org/g/PP71ed\">this code sample on the online Compiler Explorer</a>. GCC refuses to compile the code sample when line 3 is commented out, whereas MSVC happily matches a function that wasn&rsquo;t even defined at the point the template was written. It would be recognized as illegal code if it were not a template, but our broken template substitution mechanics allowed the compiler to accept this code.</p>\n<p>The C++ standards committee realized that code written in templates should not be subtly affected by the surrounding context, while also upholding the ODR. They <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">introduced the notion of <em>dependent</em> and <em>non-dependent</em> names</a> in the rules for name-binding in templates because it would be surprising behavior to have the function written on line 10 change the meaning of the code above it.</p>\n<p>The rules in the [temp.res] section of the standard list three kinds of names:</p>\n<ol><li>The name of the template and names declared in the template</li>\n<li>Names that depend upon a template&rsquo;s parameter</li>\n<li>Names from scopes that are visible inside the template&rsquo;s definition</li>\n</ol><p>The first and third categories are non-dependent names. They&rsquo;re bound at the point of the template&rsquo;s definition and stay bound in every instantiation of that template. They are never looked up when a template is instantiated. (See &sect;17.6 [temp.res]/10 and &sect;17.6.3 [temp.nondep] in the <a href=\"https://wg21.link/N4659\">Draft Standard</a> for details.)</p>\n<p>The second category are dependent names. Dependent names are not bound at the point of the template&rsquo;s definition. Instead, these names are looked up when the template is instantiated. For function calls with a dependent function name, the name is bound to the set of functions that are visible at the point of the call in the template&rsquo;s definition. Additional overloads from argument-dependent lookup are added at both the point of the template definition and the point of where the template is instantiated. (See &sect;17.6.2 [temp.dep], &sect;17.6.4 [temp.dep.res], and &sect;17.6.4.2 [temp.dep.candidate] in the <a href=\"https://wg21.link/N4659\">Draft Standard</a> for details.)</p>\n<p>It&rsquo;s important to note that overloads declared after the point of the template&rsquo;s definition but before the point of the template&rsquo;s instantiation are only considered if they are found through argument-dependent lookup. MSVC previously didn&rsquo;t do argument-dependent lookup separately from ordinary, unqualified lookup so this change in behavior may be surprising.</p>\n<p>Consider this code sample, which is also <a href=\"https://wandbox.org/permlink/7AbIQS19ZItMMRkb\">available on the Wandbox online compiler</a>:</p>\n<pre>\n#include &lt;cstdio&gt; \n\nvoid func(long) { std::puts(\"func(long)\"); }\n\ntemplate &lt;typename T&gt; void meow(T t) {\n    func(t);\n}\n\nvoid func(int) { std::puts(\"func(int)\"); }\n\nnamespace Kitty {\n    struct Peppermint {};\n    void func(Peppermint) { std::puts(\"Kitty::func(Kitty::Peppermint)\"); }\n}\n\nint main() {\n    meow(1729);\n    Kitty::Peppermint pepper;\n    meow(pepper);\n}\n</pre>\n<p>The call <code>meow(1729)</code> resolves to the <code>void func(long)</code> overload, not <code>void func(int)</code> overload, because the unqualified <code>func(int)</code> is declared after the definition of the template and not found through argument-dependent lookup. But <code>void func(Peppermint)</code> does participate in argument-dependent lookup, so it is added to the overload set for the call <code>meow(pepper)</code>.</p>\n<p>From the above examples, you can see that the two phases of &ldquo;two-phase lookup&rdquo; are the lookup for non-dependent names at the time of template definition and lookup for dependent names at the time of template instantiation.</p>\n<p><a></a></p>\n<h3>MSVC behavior prior to Visual Studio 2017 &ldquo;15.3&rdquo;</h3>\n<p>Historically, when a template was encountered, the MSVC compiler took the following steps:</p>\n<ul><li>When parsing a class template, MSVC previously parsed only the template declaration, the class head, and the base class list. The template body was captured as a token stream. No function bodies, initializers, default arguments, or <code>noexcept</code> arguments were parsed. The class template was pseudo-instantiated on a &ldquo;tentative&rdquo; type to validate that the declarations in the class template were correct.Take for example this class template: <code>template &lt;typename T&gt; class Derived : public Base&lt;T&gt; { ... }</code>. The template declaration, <code>template &lt;typename T&gt;</code>, the class head, <code>class Derived</code>, and the base-class list, <code>public Base&lt;T&gt;</code> are parsed but the template body, <code>{ ... }</code>, is captured as a token stream.</li>\n<li>When parsing a function template, MSVC previously parsed only the function signature. The function body was never parsed&mdash;it was captured as a token stream. Consequently, if the template body had syntax errors and the template was never instantiated the errors were never diagnosed.</li>\n</ul><p>An example of how this behavior caused incorrect parsing can be seen with how MSVC did not require the keywords <code>template</code> and <code>typename</code> everywhere they C++ Standard requires them. These keywords are needed in some positions to disambiguate how compilers should parse a dependent name during the first phase of lookup. For example, consider this line of code:</p>\n<pre>\nT::Foo&lt;a || b&gt;(c); \n</pre>\n<p>Is this code a call to a function template with an argument of <code>a || b</code>? Or is this a logical-or expression with <code>T::foo &lt;</code> a as the left operand and <code>b &gt; (c)</code> as the right operand?</p>\n<p>A conforming compiler will parse Foo as a variable in the scope of T, meaning this code is an or operation between two comparisons. If you meant to use <code>Foo</code> as a function template, you must indicate that this is a template by adding the template keyword, e.g.,</p>\n<pre>\nT::template Foo&lt;a || b&gt;(c); \n</pre>\n<p>Prior to Visual Studio 2017 &ldquo;15.3&rdquo;, MSVC allowed this code <em>without</em> the template keyword because it parsed templates in a very limited fashion. The code above would not have been parsed at all in the first phase. During the second phase there&rsquo;s enough context to tell that <code>T::Foo</code> is a template rather than a variable so MSVC did not enforce use of the keyword.</p>\n<p>This behavior can also be seen by eliminating the keyword <code>typename</code> before names in function template bodies, initializers, default arguments, and <code>noexcept</code> arguments. Consider this code:</p>\n<pre>\ntemplate&lt;typename T&gt;\ntypename T::TYPE func(typename T::TYPE*)\n{\n    typename T::TYPE i;\n}\n</pre>\n<p>If you remove the keyword <code>typename</code> in the function body on line 4, MSVC would have still compiled this code whereas a conforming compiler would reject the code. You need the <code>typename</code> keyword to indicate that the <code>TYPE</code> is dependent. Because MSVC previously didn&rsquo;t parse the body it didn&rsquo;t require the keyword. <a href=\"https://godbolt.org/g/PZNK6B\">You can see this example in the online Compiler Explorer</a>. Since compiling such code under the MSVC conformance mode, (<code>/permissive-</code>), will result in errors, as you move forward to MSVC versions 19.11 and beyond, make sure to look for places like this where the <code>typename</code> keyword is missing.</p>\n<p>Similarly, in this code sample:</p>\n<pre>\ntemplate&lt;typename T&gt;\ntypename T::template X&lt;T&gt;::TYPE func(typename T::TYPE)\n{\n    typename T::template X&lt;T&gt;::TYPE i;\n}\n</pre>\n<p>MSVC previously only required the <code>template</code> keyword on line 2. A conforming compiler requires the <code>template</code> keyword on line 4 as well to indicate that <code>T::X&lt;T&gt;</code> is a template. Uncomment the keyword in <a href=\"https://godbolt.org/g/yMazjQ\">this example on the Compiler Explorer</a> to see the error in action. Again, keep this missing keyword in mind as you move your code forward.</p>\n<h3>Two Phase Name Lookup in Visual Studio 2017 &ldquo;15.3&rdquo;</h3>\n<p>We introduced a &ldquo;conformance mode&rdquo; switch with Visual Studio 2017. In the v141 compiler toolset released with VS2017 you can use the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><span>/permissive-<span> switch</span></span></a> to turn on this conformance mode. (In the next major compiler revision, conformance mode will be on by default. At that point you&rsquo;ll be able to use the /permissive switch to request the conformance mode (without the <code>-</code>) much like the <code>-fpermissive</code> switch in other compilers.) One of the big features missing when we introduced the <code>/permissive-</code> switch was two-phase name lookup, which has now been partially implemented in the compiler that ships with VS2017 &ldquo;15.3&rdquo;.</p>\n<p>There are a few missing parts to our two-phase name lookup support&mdash;see the section <a href=\"https://blogs.msdn.microsoft.com/vcblog#What's%20coming%20next\">&ldquo;What&rsquo;s coming next&rdquo;</a> below for details. But the MSVC compiler now parses correctly and enforces syntax rules strictly for:</p>\n<ul><li>Class templates</li>\n<li>Bodies of function templates and member functions of class templates</li>\n<li>initializers, including member initializers</li>\n<li>default arguments</li>\n<li><code>noexcept</code> arguments</li>\n</ul><p>Additionally, the MSVC implementation of the STL is fully two-phase clean (validated by <code>/permissive-</code> in MSVC as well as Clang&rsquo;s <code>-fno-ms-compatibility -fno-delayed-template-parsing</code>). We&rsquo;ve recently gotten ATL to be two-phase clean; if you find any lingering bugs please be sure to let us know!</p>\n<p>But what do you do for your legacy code that may rely on the old, incorrect MSVC behavior? You can still use <code>/permissive-</code> for the rest of the conformance improvements even if your code isn&rsquo;t quite yet ready to have template bodies parsed and dependent names bound correctly. Just throw the <code>/Zc:twoPhase-</code> switch to turn off template parsing and dependent name binding. Using this switch will cause the MSVC compiler to use the old behavior with non-standard semantics, giving you a chance to fix your code to compile correctly with a conforming MSVC compiler.</p>\n<p>If you are using the Windows RedStone2 (&ldquo;Creators Update&rdquo;) SDK with the <code>/permissive-</code> switch, you&rsquo;ll need to temporarily disable two-phase name lookup by using the <code>/Zc:twoPhase-</code> switch until the Windows RedStone 3 (&ldquo;Fall Creators Update&rdquo;) SDK is available. This is because the Windows team has been working with the MSVC team to make the SDK headers work properly with two-phase name lookup. Their changes will not be available until the RedStone3 Windows SDK is released, nor will the changes for two-phase name lookup be ported back to the RedStone2 Windows SDK.</p>\n<p><a></a></p>\n<h3>What&rsquo;s coming next</h3>\n<p>MSVC&rsquo;s support for two-phase name lookup is a work in progress. Here&rsquo;s a list of what&rsquo;s left to come in future updates to MSVC in Visual Studio 2017. Remember that you need to use the <code>/permissive-</code> switch with these examples to enable two-phase lookup.</p>\n<ol><li>Undeclared identifiers in templates are not diagnosed. E.g.\n<pre>\ntemplate&lt;class T&gt;\nvoid f()\n{\n    i = 1; // Missing error: `i` not declared in this scope\n}\n</pre>\n<p>MSVC does not emit an error that <code>`i`</code> is not declared and the code compiles successfully. Adding an instantiation of <code>f</code> causes the correct errors to be generated:</p>\n<pre>\ntemplate&lt;class T&gt;\nvoid f()\n{\n    i = 1; // Missing error: `i` not declared in this scope\n}\n\nvoid instantiate()\n{\n    f&lt;int&gt;();\n}\n</pre>\n<pre>\nC:tmp&gt; cl /c /permissive- /diagnostics:caret one.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\none.cpp\nc:tmpone.cpp(4,5): error C2065: 'i': undeclared identifier\n    i = 1;\n    ^\nc:tmpone.cpp(9): note: see reference to function template instantiation 'void f&lt;int&gt;(void)' being compiled\n    f&lt;int&gt;();\n</pre>\n</li>\n<li>The MSVC compiler with VS 2017 &ldquo;15.3&rdquo; will generate an error for missing <code>template</code> and <code>typename</code> keywords but will not suggest adding these keywords. Newer compiler builds give more informative diagnostics.\n<pre>\ntemplate &lt;class T&gt;\nvoid f() {\n   T::Foo&lt;int&gt;();\n}\n</pre>\n<p>The MSVC compiler shipped with VS 2017 &ldquo;15.3&rdquo; gives this error:</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret two.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25506 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\ntwo.cpp\ntwo.cpp(3,16): error C2187: syntax error: ')' was unexpected here\n   T::Foo&lt;int&gt;();\n               ^\n</pre>\n<p>Builds of the compiler that will ship with future updates of VS 2017 give a more informative error:</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret two.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\ntwo.cpp\ntwo.cpp(3,7): error C7510: 'Foo': use of dependent template name must be prefixed with 'template'\n   T::Foo&lt;int&gt;();\n      ^\ntwo.cpp(3,4): error C2760: syntax error: unexpected token 'identifier', expected 'id-expression'\n   T::Foo&lt;int&gt;();\n   ^\n</pre>\n</li>\n<li><!-- THREE -->The compiler is not properly looking up functions during argument-dependent lookup. This can result in the wrong function being called at runtime.\n<pre>\n#include &lt;cstdio&gt;\n\nnamespace N\n{\n    struct X {};\n    struct Y : X {};\n    void f(X&amp;) \n    { \n        std::puts(\"X&amp;\"); \n    }\n}\n\ntemplate&lt;typename T&gt;\nvoid g()\n{\n    N::Y y;\n    f(y); // This is non-dependent but it is not found during argument-dependent lookup so it is left unbound.\n}\n\nvoid f(N::Y&amp;)\n{\n    std::puts(\"Y&amp;\");\n}\n\nint main()\n{\n    g&lt;int&gt;();\n}\n</pre>\n<p>The output from running this program is the above is <code>Y&amp;</code> when it should be <code>X&amp;</code>.</p>\n<pre>\nC:tmp&gt;cl /permissive- /diagnostics:caret three.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25506 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nthree.cpp\nMicrosoft (R) Incremental Linker Version 14.11.25506.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n/out:three.exe\nthree.obj\n\nC:tmp&gt;three\nY&amp;\n</pre>\n</li>\n<li>Non-type dependent expressions involving local declarations aren&rsquo;t analyzed correctly. The MSVC compiler currently parses the type as dependent causing an incorrect error.\n<pre>\ntemplate&lt;int&gt; struct X \n{ \n    using TYPE = int; \n};\n\ntemplate&lt;typename&gt;\nvoid f()\n{\n    constexpr int i = 0;\n    X&lt;i&gt;::TYPE j;\n}\n</pre>\n<p>A syntax error is issued because the <code>i</code> is not properly analyzed to be a non-value dependent expression when the value of the expression on line 9 is not type-dependent.</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret four.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nfour.cpp\nfour.cpp(10,16): error C2760: syntax error: unexpected token 'identifier', expected ';'\n    X&lt;i&gt;::TYPE j;\n               ^\nfour.cpp(10,5): error C7510: 'TYPE': use of dependent type name must be prefixed with 'typename'\n    X&lt;i&gt;::TYPE j;\n    ^\n</pre>\n</li>\n<li>Neither redeclaration of template parameters and redefinition of template function arguments as local names are reported as errors.\n<pre>\ntemplate&lt;class T&gt;\nvoid f(int i)\n{\n    double T = 0.0; // Missing error: Declaration of `T` shadows template parameter\n    float i = 0;    // Missing error: Redefinition of `i` with a different type\n}\n</pre>\n</li>\n<li><!-- SIX -->The MSVC compiler misidentifies the current instantiation in some cases. Using the keyword <code>typename</code> is legal and helps the compiler to correctly identify the current instantiation.\n<pre>\ntemplate&lt;class T&gt; struct A {\n    typedef int TYPE;\n    A::TYPE c1 = 0;    // Incorrectly fails to compile\n    A&lt;T&gt;::TYPE c2 = 0; // Incorrectly fails to compile\n};\n</pre>\n<p>Adding the keyword <code>typename</code> before each instance of <code>A</code> allows this code to compile:</p>\n<pre>\ntemplate&lt;class T&gt; \nstruct A \n{\n    typedef int TYPE;\n    typename A::TYPE c1 = 0;\n    typename A&lt;T&gt;::TYPE c2 = 0;\n};\n</pre>\n</li>\n<li>Undeclared default arguments are not diagnosed. This example demonstrates a case where the MSVC compiler is still doing one-phase lookup. It is using the declaration of <code>SIZE</code> found after the template declaration as if it were declared before the template.\n<pre>\ntemplate&lt;int N = SIZE&gt; // Missing diagnostic: Use of undeclared identifier `SIZE`\nstruct X\n{\n    int a[N];\n};\n\nconstexpr int SIZE = 42;\n\nX&lt;&gt; x;\n</pre>\n</li>\n</ol><p>All of the above issues are planned to be fixed in the next major update of MSVC in Visual Studio 2017.</p>\n<h3>Why did it take so long?</h3>\n<p>Other compilers have had two-phase name lookup implemented for quite some time. Why is MSVC just now getting it right?</p>\n<p>Implementing two-phase name lookup required fundamental changes in MSVC&rsquo;s architecture. The biggest change was to <a href=\"https://aka.ms/CompilerRejuvenation\">write a new recursive descent parser to replace the YACC-based parser</a> that we&rsquo;ve used for over 35 years.</p>\n<p>We decided early on to follow an incremental path rather than rewriting the compiler from scratch. Evolving the aged MSVC code base into a more modern code base instead of &ldquo;going dark&rdquo; on a big rewrite allowed us to make huge changes without introducing subtle bugs and breaking changes when compiling your existing code. Our &ldquo;compiler rejuvenation&rdquo; work required carefully bridging the old code and the new code, making sure all the time that large test suites of existing code continued to compile exactly the same (except where we intentionally wanted to make a change to introduce conforming behavior.) It took a bit longer to do the work in this fashion but that allowed us to deliver incremental value to developers. And we have been able to make major changes without unexpectedly breaking your existing code.</p>\n<h3>In closing</h3>\n<p>We&rsquo;re excited to finally have support for two-phase name lookup in MSVC. We know that the compiler still won&rsquo;t compile some template code correctly&mdash;if you find a case not mentioned in this post, please reach out to us so that we can fix the bug!</p>\n<p>All of the code samples in this post now compile (or fail to compile, when appropriate) correctly according to the Standard. You&rsquo;ll see this new behavior with Visual Studio 2017 &ldquo;15.3&rdquo;, or you can try it out right now <a href=\"https://aka.ms/dailymsvc\">using a daily build of the MSVC compiler</a>.</p>\n<p>Now is a good time to start using the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><code>/permissive-</code> switch</a> to move your code forward. Remember when you run into template parsing errors that adding the keywords <code>template</code> and <code>typename</code> that MSVC did not previously require (<a href=\"https://blogs.msdn.microsoft.com/vcblog#MSVC%20behavior%20prior%20to%20Visual%20Studio%202017%2015.3\">see above</a>) might fix the error.</p>\n<p>If you have any feedback or suggestions for us, let us know. We can be reached via the comments below, via email (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) and you can provide feedback via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Help &gt; Report A Problem in the product</a>, or via <a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">Developer Community</a>. You can also find us on Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) and Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>).</p>","LastUpdateTime":"2017-09-12T09:28:11","Link":"https://blogs.msdn.microsoft.com/vcblog/2017/09/11/two-phase-name-lookup-support-comes-to-msvc/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Two-phase name lookup support comes to MSVC","Type":1,"TitleCn":"两相名称查找支持来到 MSVC","Content":"<p><em>这篇文章写的坦维尔简一、 篇幅、 安德鲁 · 马里诺，加布里埃 Dos Reis，和安德鲁 Pardoe</em></p>\n<p>\"两相名称查找\"是一个非正式的术语，指的是一套规则的模板声明中使用的名称解析。<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">这些规则被正式确定</a>两个以上几十年前在试图调和两个对立模板编译模型: （大多数开发人员知道模板的今天），包含模型和分离模型 （原始设计的依据为模板）。你可以找到从属名称成因本文基础<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1992/N0209.pdf\">模板规范提出修订</a>，牢固地植根于一个定义规则原则。如果你有兴趣在深入光荣的细节，你可以在部分 17.6 （稳定名称 [temp.res]） 的<a href=\"https://wg21.link/N4659\">C + + 17 草案标准</a>在现代术语找到这些规则。在过去几个月 MSVC 编译器来自具有两相的名称查找到被大多数代码可用于不支持。我们会完成完整的支持，为此在未来的视觉工作室 2017年更新的功能。</p>\n<p>您需要使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"> <code>/permissive-</code> 一致性开关</a>，使两相 MSVC 编译器附带视觉工作室 2017\"15.3\"中的查找。两相名称查找彻底改变一些代码的含义，所以 MSVC 的当前版本默认情况下不启用功能。</p>\n<p>这篇文章探讨到底什么两相名称查找需要什么目前实施 MSVC，以及如何善用 MSVC 的部分，但大量支持两相名称查找。我们会告诉你如何选择退出的两相查找，即使你想其余的您的代码以严格符合标准。最后，我们会解释一下，为什么我们花了这么长时间来这儿 — — 这些规则都至少 25 岁 ！</p>\n<h3>\"两相名称查找\"是什么？</h3>\n<p>C + + 模板的原始设计意味着要做\"模板\"一词意味着什么： 一个模板将杜绝家庭的类和函数。它允许和鼓励，但不是要求，早期的非依赖名称检查。因此，标识符不需要在模板定义的分析过程中抬头。相反，编译器被允许延迟名称查找，直到模板被实例化。同样，模板的语法不需要实例化之前验证。基本上，在模板中使用的名称的含义不是确定直到模板被实例化。</p>\n<p>根据这些原始的规则，以前版本的 MSVC 了非常有限的模板解析。 尤其是，函数模板机构都不被解析所有直到实例化。编译器作为标记流是重播期间实例化模板在需要的时候它可能存在的候选记录模板的身体。</p>\n<p>让我们考虑一下这意味着什么，看一段代码。所以你可以玩的代码，当你读完这篇文章，对在线编译器提供链接。</p>\n<pre>\n#include &lt; cstdio &gt;\n\n无效 func(void*) {std::puts （\"调用解析为 void *\"）;}\n\n&lt; typename T &gt; 模板无效 g(T x)\n{\n    func(0);\n}\n\n空 func(int) {std::puts （\"调用解析为 int\"）;}\n\nmain （) int \n{\n    g(3.14);\n}\n</pre>\n<p>在第 7 行调用，这些重载解决？<code>void*</code>过载已经宣布在模板写在 5 号线的点。函数 <code>void func(int)</code> 编写模板时并不存在。因此，调用函数模板到第 14 行 <code>void g(T x)</code> 线上 5 应解决功能 <code>void func(void*)</code> 第 3 行。</p>\n<p>符合标准的编译器在编译时该程序打印\" <code>The call resolves to void*</code> \"。你可以<a href=\"http://rextester.com/YCHV46514\">看到这种行为在 GCC</a>使用 Rextester 在线编译器。<a href=\"http://rextester.com/JAO93001\">使用 MSVC 从 Visual Studio 2015 年</a>，没有支持的两相的名称查找该程序打印\"是调用解析到 int\"。</p>\n<p>MSVC 为什么这错了？我们用来解析模板力学工作时模板简单，但有限的编译器两相名称查找来玩的时候能做些什么。MSVC 以前记录模板的身体作为一个标号流，并存储该流走了，在实例化时重播。从记录的标记流 MSVC 的模板替换的行为有点类似宏替换的行为在这的模板正文进行有限的分析。</p>\n<p>在此示例中，MSVC 存储为函数模板的标记流 <code>void g(T x)</code> 。如果编译器分析了函数调用它遇到点只有宣言 》 为 <code>void func(void*)</code> 将已经重载中套。(请注意，是有效的匹配项调用 <code>func(0)</code> 因为 c + + 允许 <code>0</code> 来表示一个<a href=\"http://en.cppreference.com/w/cpp/language/implicit_conversion\">空指针常量，可以转换为任何指针类型</a>.)</p>\n<p>函数重载 <code>void func(int)</code> 也将调用匹配 <code>func(0)</code> 在点设置的除外，它不应该在重载函数模板 <code>void g(T x)</code> 进行了评价。但 MSVC 没有实例化之前评估模板的身体 — — 后宣言 》 <code>void func(int)</code> 也加入了重载集。此时，编译器拿一个整型参数的更好匹配： <code>int</code> 而不是 <code>void*</code> 。</p>\n<p>你可以看到两个编译器在<a href=\"https://godbolt.org/g/PP71ed\">此项上在线编译器资源管理器中的示例代码</a>中的行动。海合会拒绝编译代码示例，当第 3 行注释掉了，而 MSVC 愉快地匹配甚至不在点定义一个函数模板写。它将被视为非法的代码如果不是一个模板，但我们破碎的模板替换力学允许编译器接受此代码。</p>\n<p>C + + 标准委员会意识到，在模板中编写的代码应该不会巧妙地受到周围的环境，同时还要维护 ODR。他们<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">的<em>依赖性</em>和<em>非依赖性</em>名称概念</a>中模板的名称绑定规则中因为它会令人惊讶行为要写在第 10 行的函数更改它上面代码的含义。</p>\n<p>规则的标准 [temp.res] 节中列出三种名称：</p>\n<ol><li>在模板中声明的名称的模板和名称</li>\n<li>依赖于模板参数的名称</li>\n<li>从可见里面的模板定义的作用域的名称</li>\n</ol><p>第一和第三类是非依赖名称。他们注定在模板的定义和留的约束，在每个实例化该模板。实例化模板时，他们永远不会看着。（见 §17.6 [temp.res]/10，§17.6.3 [temp.nondep] 在<a href=\"https://wg21.link/N4659\">草案标准</a>的详细信息）</p>\n<p>第二类是从属名称。从属名称不在模板定义绑定。相反，抬头这些名称实例化模板时。对于具有关联函数名称的函数调用，绑定到可见的模板定义中调用的函数集的名称。在模板定义的点和点的实例化模板时添加其他重载从参数相关的查找。（见 §17.6.2 [temp.dep]、 [temp.dep.res]，§17.6.4 和 §17.6.4.2 [temp.dep.candidate] 在<a href=\"https://wg21.link/N4659\">草案标准</a>的详细信息）。</p>\n<p>它是定义的重要的是定义的注意点的模板，但点之前的模板实例化后宣布的重载是否他们定义的通过参数相关的查找找到只会被视为。MSVC 以前没做参数相关的查找分别从普通、 不合格的查找所以此行为变化可能令人惊讶。</p>\n<p>这也是<a href=\"https://wandbox.org/permlink/7AbIQS19ZItMMRkb\">上 Wandbox 在线编译器可用</a>的代码示例，请考虑：</p>\n<pre>\n#include &lt; cstdio &gt; \n\n无效 func(long) {std::puts(\"func(long)\")};\n\n&lt; typename T &gt; 模板无效喵 (T t) {\n    func(t);\n}\n\n空 func(int) {std::puts(\"func(int)\")};\n\n命名空间的小猫 {\n    结构薄荷 {};\n    空 func(Peppermint) {std::puts(\"Kitty::func(Kitty::Peppermint)\")};\n}\n\nint main （) {\n    meow(1729);\n    Kitty::Peppermint 胡椒;\n    meow(pepper);\n}\n</pre>\n<p>调用 <code>meow(1729)</code> 将解析为 <code>void func(long)</code> 过载，不 <code>void func(int)</code> 重载，因为不合格 <code>func(int)</code> 声明后模板的定义并不通过参数相关的查找找到。但是 <code>void func(Peppermint)</code> 并参与参数相关的查找，因此它添加到设置为调用的重载 <code>meow(pepper)</code> 。</p>\n<p>从上面的例子，你可以看到\"两相查找\"这两个阶段是对非依赖名称时的模板定义的查找和查找从属名称在模板实例化的时候。</p>\n<p><a></a></p>\n<h3>视觉工作室 2017\"15.3\"前 MSVC 行为</h3>\n<p>从历史上看，当遇到一个模板，MSVC 编译器采取了以下步骤：</p>\n<ul><li>当解析一个类模板，MSVC 以前解析只有模板声明、 类的头和基类列表。模板正文被俘作为令牌流。没有函数体，初始值设定项，默认参数，或 <code>noexcept</code> 参数都被解析。类模板是伪实例化要验证中的类模板的声明是正确的\"暂定\"类型。例如采取此类模板： <code>template &lt;typename T&gt; class Derived : public Base&lt;T&gt; { ... }</code> 。模板声明， <code>template &lt;typename T&gt;</code> ，类的头， <code>class Derived</code> ，和基底类别列表中， <code>public Base&lt;T&gt;</code> 模板正文，但解析 <code>{ ... }</code> ，作为令牌流捕获。</li>\n<li>当解析函数模板，MSVC 以前解析只有函数签名。函数体永远不会解析 — — 它被捕获作为令牌流。因此，如果模板正文有语法错误和模板永远不会实例化错误从来没有确诊。</li>\n</ul><p>怎么这种行为引起的不正确解析的示例可以看到如何 MSVC 不需要关键字 <code>template</code> 和 <code>typename</code> 无处不在他们 c + + 标准要求他们。这些关键字在一些职位需要消除歧义如何编译器查找第一阶段就应解析依赖的名称。例如，考虑下面这行代码：</p>\n<pre>\nT::Foo &lt; | |b &gt; (c); \n</pre>\n<p>这个代码是函数模板的参数调用 <code>a || b</code> 吗？或这是一种逻辑-或表达与 <code>T::foo &lt;</code> 的左操作数和 <code>b &gt; (c)</code> 为右操作数？</p>\n<p>符合的编译器将解析 Foo 中的 T，意思这段代码范围的变量或两个比较操作。如果你打算使用 <code>Foo</code> 作为一个函数模板，您必须指示这是一个模板，通过添加模板关键字，例如，</p>\n<pre>\nT::template 美孚 &lt; | |b &gt; (c); \n</pre>\n<p>在 Visual Studio 2017 年\"15.3\"之前, MSVC 允许此代码<em>没有</em>模板关键字因为它解析模板在非常有限的时尚。上面的代码会没有分析在所有第一阶段。在第二阶段还有足够的上下文说 <code>T::Foo</code> 是一个模板，而不是一个变量，所以 MSVC 不执行使用的关键字。</p>\n<p>这种行为还可以被消除的关键字 <code>typename</code> 之前在函数模板体，初始值设定项，默认参数名称和 <code>noexcept</code> 参数。请考虑此代码：</p>\n<pre>\n模板 &lt; typename T &gt;\ntypename T::TYPE func (typename T::TYPE *)\n{\n    typename T::TYPE;\n}\n</pre>\n<p>如果你移除相应的关键字 <code>typename</code> 4 号线在函数体内，MSVC 会有仍然编译此代码而符合的编译器会拒绝代码。你需要 <code>typename</code> 关键字来表明， <code>TYPE</code> 是依赖。因为 MSVC 以前没有解析人体不需要的关键字。<a href=\"https://godbolt.org/g/PZNK6B\">您可以看到此在线编译器资源管理器中的示例</a>。自编译 MSVC 一致性模式下，此类代码 ( <code>/permissive-</code> )，将导致错误，因为你向前移动到 MSVC 版本 19.11 和超越，一定要找地方这哪里像 <code>typename</code> 关键字是缺掉的。</p>\n<p>同样地，在此代码示例：</p>\n<pre>\n模板 &lt; typename T &gt;\ntypename T::template X &lt; T &gt;:: 类型 func (typename T::TYPE)\n{\n    typename T::template X &lt; T &gt;:: 第一类;\n}\n</pre>\n<p>此前仅要求 MSVC <code>template</code> 关键字上第 2 行。符合标准的编译器需要 <code>template</code> 以及表明，4 号线上的关键字 <code>T::X&lt;T&gt;</code> 是一个模板。取消注释<a href=\"https://godbolt.org/g/yMazjQ\">此示例对编译器资源管理器</a>来查看操作中的错误中的关键字。再次，牢记此缺少关键字你向前移动您的代码。</p>\n<h3>两相在 Visual Studio 2017 年\"15.3\"名称查找</h3>\n<p>我们介绍了视觉工作室 2017年\"一致性模式\"开关。在释放与 VS2017 v141 编译器工具集，您可以使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><span>/ 许可-<span>切换</span></span></a>打开这个一致性模式。（在接下来的主要编译器修订中，一致性模式会在默认情况下。At that point，你将能够使用 / 许可开关要求一致性模式 (没有 <code>-</code> ) 喜欢 <code>-fpermissive</code> 开关在其他编译器。)失踪时我们介绍的大功能之一 <code>/permissive-</code> 开关是两相名称查找，现在已部分执行船舶与 VS2017 的编译器中\"15.3\"。</p>\n<p>有几个缺少对我们两相名称查找支持的部分 — — 请参阅下面的<a href=\"https://blogs.msdn.microsoft.com/vcblog#What's%20coming%20next\">\"下一个什么\"</a>的详细信息。但 MSVC 编译器现在正确地解析和强制执行严格的语法规则：</p>\n<ul><li>类模板</li>\n<li>函数模板和类模板的成员函数的尸体</li>\n<li>初始值设定项，包括成员初始值设定项</li>\n<li>默认参数</li>\n<li><code>noexcept</code>参数</li>\n</ul><p>此外，STL MSVC 实施清洁是完全两相 (通过验证 <code>/permissive-</code> MSVC 一样铿锵的 <code>-fno-ms-compatibility -fno-delayed-template-parsing</code> )。我们最近得到了 ATL 是两相清洁;如果您发现任何挥之不去的错误请务必让我们知道 ！</p>\n<p>但你做什么你可能依赖于旧的、 不正确 MSVC 行为的遗留代码吗？您仍然可以使用 <code>/permissive-</code> 余生的一致性改进，即使您的代码还没完全准备好了模板机构解析和从属名称正确绑定。只是扔 <code>/Zc:twoPhase-</code> 开关关闭模板解析和从属名称绑定。使用此开关将导致 MSVC 编译器使用的旧的行为与非标的语义，给你一个机会来解决您的代码以使用符合的 MSVC 编译器编译正确。</p>\n<p>如果您使用的 Windows RedStone2 （\"创作者更新\"） SDK 与 <code>/permissive-</code> 开关，您需要暂时禁用两相名称查找通过使用 <code>/Zc:twoPhase-</code> 开关直到 Windows 红石 3 （\"秋天创作者更新\"） SDK 是可用。这是因为 Windows 团队一直与 MSVC 团队作出的 SDK 头与两相名称查找一起正常工作。他们的更改将不可用，直到 RedStone3 Windows SDK 释放，也不会回到 RedStone2 Windows SDK 移植两相名称查找所做的更改。</p>\n<p><a></a></p>\n<h3>下一个什么</h3>\n<p>两相名称查找 MSVC 的支持是进行中的工作。这里是一个列表的什么留下来在未来更新 MSVC 视觉工作室 2017 年。请记住，您需要使用 <code>/permissive-</code> 开关使用这些示例，以使两相的查找。</p>\n<ol><li>在模板中的未申报的标识符才得到确诊。例如<pre>\n&lt; T 类 &gt; 模板\n无效 f （）\n{\n    我 = 1; / / 缺少错误: '我' 不在此范围内声明\n}\n</pre>\n<p>MSVC 不会发出错误， <code>`i`</code> 不声明和代码编译成功。添加实例化 <code>f</code> 导致生成正确的错误：</p>\n<pre>\n&lt; T 类 &gt; 模板\n无效 f （）\n{\n    我 = 1; / / 缺少错误: '我' 不在此范围内声明\n}\n\n无效 instantiate()\n{\n    &lt; int &gt; f （);\n}\n</pre>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret one.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\none.cpp\nc:tmpone.cpp(4,5)： 错误 C2065: '我': 未声明的标识符\n    我 = 1;\n    ^\nc:tmpone.cpp(9)： 注： 请参阅参考，函数模板实例化 '无效 f &lt; int &gt; (void) 正在编译\n    &lt; int &gt; f （);\n</pre>\n</li>\n<li>与 VS 2017\"15.3\"MSVC 编译器将生成一个错误找不到 <code>template</code> 和 <code>typename</code> 关键字，但不是会建议添加这些关键字。较新的编译器生成给更多的信息诊断。<pre>\n&lt; T 类 &gt; 模板\n无效 f （） {\n   T::Foo &lt; int &gt; （);\n}\n</pre>\n<p>MSVC 编译器附带 VS 2017\"15.3\"给出了此错误：</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret two.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25506 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\ntwo.cpp\ntwo.cpp(3,16): C2187 错误： 语法错误: ')' 在这里出乎意料\n   T::Foo &lt; int &gt; （);\n               ^\n</pre>\n<p>生成的编译器，将船舶的 VS 2017 给未来更新更详细的错误：</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret two.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\ntwo.cpp\ntwo.cpp(3,7)： 错误 C7510: Foo： 使用依赖的模板名称必须与模板为前缀\n   T::Foo &lt; int &gt; （);\n      ^\ntwo.cpp(3,4): C2760 错误： 语法错误： 意外的令牌标识符，预期的 'id 表达'\n   T::Foo &lt; int &gt; （);\n   ^\n</pre>\n</li>\n<li><!-- THREE -->编译器不正确查找功能期间参数相关的查找。这可能导致错误的函数在运行时被调用。<pre>\n#include &lt; cstdio &gt;\n\n命名空间 N\n{\n    结构 X {};\n    结构 Y: X {};\n    无效的 f(X&amp;) \n    { \n        std::puts (\"X &amp;\"); \n    }\n}\n\n模板 &lt; typename T &gt;\n无效 g()\n{\n    N::Y y;\n    f(y);这是非依赖但它找不到在参数相关的查找过程中所以就是未绑定。\n}\n\n无效的 f(N::Y&amp;)\n{\n    std::puts (\"Y &amp;\");\n}\n\nmain （) int\n{\n    g &lt; int &gt; （);\n}\n</pre>\n<p>运行此程序的输出是以上就是 <code>Y&amp;</code> 时，它应该是 <code>X&amp;</code> 。</p>\n<pre>\nC:tmp &gt; cl / 许可-/diagnostics:caret three.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25506 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\nthree.cpp\nMicrosoft （R） 增量链接器版本 14.11.25506.0\n版权所有 （C) Microsoft Corporation。  版权所有。\n\n/out:three.exe\nthree.obj\n\nC:tmp &gt; 三\nY &amp;\n</pre>\n</li>\n<li>非类型取决于表达式涉及局部声明不正确分析。MSVC 编译器目前分析作为依赖导致不正确的错误类型。<pre>\n&lt; int &gt; 模板结构 X \n{ \n    使用类型 = int; \n};\n\n模板 &lt; typename &gt;\n无效 f （）\n{\n    constexpr int 我 = 0;\n    X &lt; i &gt;:: 类型 j;\n}\n</pre>\n<p>语法错误发出因为 <code>i</code> 没有正确分析要非值取决于表达式时在第 9 行的表达式的值不是类型相关。</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret four.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\nfour.cpp\nfour.cpp(10,16): C2760 错误： 语法错误： 意外的标记 '标识符' 预期 ';'\n    X &lt; i &gt;:: 类型 j;\n               ^\nfour.cpp(10,5)： 错误 C7510: TYPE： 使用依赖类型名称必须以 typename 为前缀\n    X &lt; i &gt;:: 类型 j;\n    ^\n</pre>\n</li>\n<li>既不重定义的模板参数和重新定义的模板函数参数作为本地名称都报告为错误。<pre>\n&lt; T 类 &gt; 模板\n无效 f(int i)\n{\n    双 T = 0.0; / / 缺少错误: 宣言 》 不 ' 阴影模板参数\n    浮我 = 0;    缺少错误： 重新界定与不同类型的 ' 我'\n}\n</pre>\n</li>\n<li><!-- SIX -->MSVC 编译器错在某些情况下的当前实例。使用关键字 <code>typename</code> 是合法的可以帮助编译器正确识别当前实例化。<pre>\n&lt; T 类 &gt; 模板结构 A {\n    typedef int 类型;\n    A::TYPE c1 = 0;    不正确地编译失败\n    &lt; T &gt;:: 类型 c2 = 0; / / 不正确编译失败\n};\n</pre>\n<p>添加关键字 <code>typename</code> 之前的每个实例 <code>A</code> 允许编译此代码：</p>\n<pre>\n&lt; T 类 &gt; 模板 \n结构 A \n{\n    typedef int 类型;\n    typename A::TYPE c1 = 0;\n    typename &lt; T &gt;:: 类型 c2 = 0;\n};\n</pre>\n</li>\n<li>未申报的默认参数才得到确诊。此示例演示在哪 MSVC 编译器仍然做一个阶段查找案件。它利用宣言 》 的 <code>SIZE</code> 模板声明之后发现，好像它被宣布之前的模板。<pre>\n模板 &lt; int N = 大小 &gt; / / 缺少诊断： 使用未声明的标识符 '大小'\n结构 X\n{\n    int [N];\n};\n\nconstexpr int 大小 = 42;\n\nX&lt;&gt; x;\n</pre>\n</li>\n</ol><p>所有上述问题计划在 MSVC 视觉工作室 2017 年的下一个重大更新中予以解决。</p>\n<h3>为什么花这么长时间？</h3>\n<p>其他编译器有两相名称查找实施相当一段时间。为什么 MSVC 刚才得到它正确？</p>\n<p>实施两相名称查找所需 MSVC 的体系结构的根本变化。最大的变化是<a href=\"https://aka.ms/CompilerRejuvenation\">写新的递归下降分析器，以取代基于 YACC 分析器</a>，我们已经使用超过 35 年。</p>\n<p>我们早就决定遵循增量的路径，而不是重写编译器从零开始。老年的 MSVC 代码库演变成一个更加现代的代码库而不是\"走出黑暗\"大重写允许我们自己没有引入微妙的 bug 和重大更改，您的现有代码进行编译时做出重大改变。我们需要仔细地弥合旧代码和新代码，以确保大型测试套件的现有代码继续编译完全一样的 （除了在哪里我们故意想要做一个改变，引入的所有时间的\"编译器复兴\"工作符合标准的行为）。花了更长时间去做这项工作以这种方式，但能让我们向开发商交付增量价值。我们已经能够做出重大更改，而不会意外破坏现有的代码。</p>\n<h3>在闭幕</h3>\n<p>我们都很兴奋终于在 MSVC 有两相名称查找支持。我们知道，编译器仍然不会编译一些模板代码正确 — — 如果你发现在这篇文章中没有提到一个案例，请向我们伸出，我们可以修复这个 bug ！</p>\n<p>所有的代码样本在这篇文章现在编译 （或不能编译，适当的时候） 正确的标准。你会看到这一新行为与视觉工作室 2017\"15.3\"，或者你可以试试现在<a href=\"https://aka.ms/dailymsvc\">使用 MSVC 编译器每日构建</a>。</p>\n<p>现在是好的时候，要开始使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"> <code>/permissive-</code> 切换</a>前进您的代码。记得当你遇到模板解析错误，添加关键字 <code>template</code> 和 <code>typename</code> ，MSVC 以前不要求 （<a href=\"https://blogs.msdn.microsoft.com/vcblog#MSVC%20behavior%20prior%20to%20Visual%20Studio%202017%2015.3\">见上文</a>） 可能会修复此错误。</p>\n<p>如果您有任何反馈或建议，让我们，让我们知道。我们可以通过下面，通过电子邮件 (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) 的评论，你可以提供反馈通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">帮助 &gt; 报告一个问题在产品</a>，或通过<a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">开发者社区</a>。你也可以找到我们在 Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) 和 Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>) 上。</p>"},{"Id":97,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-12T02:35:22","Description":"<p>The XAML designers in Visual Studio and Blend have been powerful tools for developers and designers alike to build beautiful user experiences for Windows applications. Initially designed for WPF development in 2007, we have made significant changes to support a wide variety of XAML platforms over the last decade. We&rsquo;ve also added new features along the way to increase developer productivity. Unfortunately, with all these changes, the performance and reliability of the designer have become less than ideal. We&rsquo;ve heard the community <a href=\"https://visualstudio.uservoice.com/forums/121579-visual-studio-ide/suggestions/2204137-improve-the-xaml-designer-performance\">loud and clear</a> and we are working hard to fix that.</p>\n<p>Read below to find out what&rsquo;s new, and try out the updates to the XAML Designer by building UWP applications targeting the upcoming Windows 10 Fall Creators Update in the latest <a href=\"https://www.visualstudio.com/vs/preview/\">Visual Studio Preview release</a>! If you want to see all the details, check out the <a href=\"https://www.visualstudio.com/news/releasenotes/vs2017-preview-relnotes\">release notes</a>.</p>\n<h2>Important note about this release</h2>\n<p>This release of the updated XAML designer is a very early preview of what&rsquo;s to come and might be rough around the edges. The drastic nature of the changes has resulted in us disabling some of the features that previously existed in the XAML designer, as well as shipping with known issues (called out in the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">release notes</a>). As a result, we are only releasing the updated designer for a small subset of XAML scenarios &ndash; specifically, for developers building UWP applications that target the Fall Creators Update. If you were building a WPF application or a UWP application targeting the existing Windows 10 Creators Update or earlier, your experience will remain unchanged.</p>\n<h2>Design considerations</h2>\n<p>We have received a lot of community feedback on the XAML designer, and based on the feedback, we&rsquo;ve prioritized the below design consideration:</p>\n<ol><li>Improve the designer performance in a significantly visible way (I can&rsquo;t reiterate enough how much we are emphasizing performance)</li>\n<li>Highest possible fidelity of the designer surface &ndash; especially focused on rendering artifacts introduced by the new <a href=\"https://fluent.microsoft.com/\">Windows Fluent Design System</a></li>\n<li>Fewer designer exceptions to keep you as productive in the design surface as possible</li>\n<li>While we rapidly iterate on this new experience, do not break or change existing XAML development in Visual Studio and Blend</li>\n<li>Last but not the least, create the tools that help you be more productive building Windows experiences</li>\n</ol><p>We believe we have made significant progress to achieve these goals and are excited to share our first iteration for you to try and provide feedback. Our ultimate goal is to make the designer load as fast as your app, and offer tooling experiences for your page to render the contents of any of your controls at design time.</p>\n<h3>Performance</h3>\n<p>Much of our efforts have been directed at making the design surface process as thin and lightweight as possible. Effectively a wrapper around your UI code, the XAML Designer will now load nearly as fast as your app itself.</p>\n<p>You can see this in action below. On the left, we have a project targeting the Fall Creators Update (therefore, leveraging the changes we have made to the designer). On the right, we have an identical project targeting the Creators Update (therefore, using the XAML design experience that you would see today). After reopening the solution, you can tell the XAML designer changes we have made result in an exponentially faster loading time. The designer on the right may look like it is stuck, but if you look closely you can see the loading bar at the top of the designer. Be patient and you&rsquo;ll see it load eventually!</p>\n<p><strong><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\" rel=\"noopener noreferrer\"><img width=\"1774\" height=\"1097\" title=\"XAML Designer PerformanceXAML Designer Performance - side by side comparison\" alt=\"XAML Designer Performance - side by side comparison\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\"></a></strong></p>\n<h3>Fidelity</h3>\n<p>At the Build 2017 event back in May, Microsoft announced the new UI design system known as <a href=\"https://fluent.microsoft.com/\">Fluent</a>. With the Fall Creators Update, we are beginning to introduce new controls built on this new universal design language. Fluent places heavy emphasis on the core building blocks: light, depth, motion, material, and scale. To achieve these UI effects, heavy use of composition is necessary.</p>\n<p>The existing XAML designer does not execute code in the design process that leverages composition APIs and therefore cannot render many of these new experiences. A clearly visible example is demonstrated below, with the new Fall Creators Update &lsquo;AcrylicBrush&rsquo; resource. The left shows the XAML designer in this preview and the right shows the XAML designer as you would have experienced it in a previous release.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\" rel=\"noopener noreferrer\"><img width=\"1773\" height=\"975\" title=\"XAML Designer\" alt=\"XAML Designer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\"></a></p>\n<h3>Reliability</h3>\n<p>Previously, the XAML designer always executed against the desktop .NET Framework. Since UWP is built on top of .NET Core, this would sometimes result in reliability issues as the design process had problems with .NET Core types (e.g. <a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>). Going forward, the XAML Designer will always execute against the .NET runtime environment used by your application, so type forwarding issues are mitigated and general reliability of the designer should be improved.</p>\n<p>The XAML designer has been successful at providing a meaningful design-time preview of your UI because we try to execute your code as close as possible to the runtime environment of your app. One side effect of this is that misbehaved code doesn&rsquo;t work well, something that you can continue to protect with <a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">design mode APIs</a>.</p>\n<p>With that in mind, there are still cases where code in development may cause exceptions and crash the designer. By investing in making the designer load in just a couple of seconds, we believe it will be much easier to iterate more quickly on your work-in-progress code.</p>\n<h2>Built from the Ground Up</h2>\n<p>For us to be able to make a big impact on our top priorities, the XAML Designer needed to undergo a drastic architectural change. In addition, we wanted to provide investments that would improve all XAML development experiences, including XAML Edit &amp; Continue. With that in mind, we decided to use the same technology that powers XAML Edit &amp; Continue to power the future of the XAML Designer.</p>\n<p>Let&rsquo;s take a deeper look at some of the other big changes that warrant a reinvestment. This next section is for those of you interested in knowing the nitty-gritty details of the changes we are making to the XAML designer.</p>\n<h3>Architecture Changes</h3>\n<p>At a high-level, the architecture change consists of a redesign of the designer surface process (UwpSurface.exe) to be as lightweight and small as possible. The xdesproc.exe process, used by the existing XAML designer, did a lot &ndash; it contained the code to all the XAML editor and design features (in WPF), it would load in type metadata for your app and the developer&rsquo;s ViewModels, and it also executed actual design process to show the preview in the XAML designer. If any one of those had a problem, the design process would crash. Restarting the designer (or opening a new page) would take too long because the process itself would be doing so much work every time you load a new page.</p>\n<p>With this XAML designer update, we are making the design surface process (UwpSurface.exe) as thin and lightweight as possible. It is effectively a wrapper around your app&rsquo;s UI code (this is where the technology that enables XAML Edit &amp; Continue comes in). Since the process itself is doing so little, loading the XAML designer should be as fast as launching your application when we are all done with the effort.</p>\n<p>Since UwpSurface.exe will still run your controls, you need to be careful with your code behind to not crash the designer &ndash; for instance, you must still not dereference your application object at design time. With the redesign, UwpSurface.exe offers additional rendering capability so we have introduced a new design mode API: Windows.ComponentModel.DesignMode.IsDesignMode2Enabled. This allows you to control runtime code execution for the new designer surface process, and continue to offer checks when the same code executes in the existing designer. Our expectation is that you will be able to relax many of the design time checks you might have added in the past. Check out the <a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">docs</a> for more information.</p>\n<p>In addition, xdesproc.exe had a significant dependency on the desktop .NET runtime. For UWP applications, this hasn&rsquo;t had a large impact in the past. Much of the .NET API surface area for UWP was just a subset of the desktop .NET Framework, but xdesproc.exe still had problem instantiating types that did not existing in the desktop .NET Framework (like <a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>).</p>\n<p>With the introduction of the Fall Creators Update and <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\">.NET Standard 2.0</a>, this problem becomes worse and needs to be a fundamental design principle. If you were trying to leverage a new .NET API available in .NET Standard 2.0 that wasn&rsquo;t available in the desktop .NET Framework (e.g. Span&lt;T&gt;), the design surface would have crashed. With this preview of the XAML designer, we are executing your code against the runtime that matches your app &ndash; so a UWP application will execute against the .NET runtime environment for UWP.</p>\n<h3>Feature Impact</h3>\n<p>It is worth calling out again that this is a very early preview of the XAML Designer, primarily designed to get feedback around your reliability and performance, in addition to helping us identify the tools you rely on most for productivity. The set of functionality that we enabled in this preview was identified as the tools and features that you currently use the most.</p>\n<p>The XAML designer <i>does not </i>support the below features:</p>\n<ul><li>Edit Current Style</li>\n<li>Device preview settings that allow testing for high contrast, themes, etc&hellip;</li>\n<li>Visual State Management tools</li>\n<li>Animation tooling</li>\n<li>Sample data, but designer instance is supported</li>\n<li>Ordering commands</li>\n<li>Alignment commands</li>\n<li>Group into commands</li>\n<li>Combine commands</li>\n<li>Path commands</li>\n<li>Make Into Control</li>\n<li>Text edit tool</li>\n<li>Resource panels in Blend</li>\n<li>Data panels in Blend</li>\n<li>Design time resource dictionary</li>\n<li>Some of the tools in Blend tool pane</li>\n<li>Editing inside of a template</li>\n<li>Designer extensions</li>\n<li>Behaviors tooling in Blend</li>\n</ul><h3>Known Issues with this Release</h3>\n<p>As we called out earlier, this is a <b>very </b>early preview of what&rsquo;s to come. In order to get customer input as early as possible, we had to make some hard engineering decisions. With that in mind, we are aware of several issues with the new XAML Designer that are called out in the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes#known-issues\">release notes</a>.</p>\n<h2>Roadmap</h2>\n<p>As we continue to acquire feedback from our early preview releases of the XAML designer, we will continue to prioritize reimplementing the top requested tools. We will continue to improve the XAML designer with heavy emphasis on our design considerations. When we have confidence that the designer provides more productivity than the existing designer and does not break any existing workflows, we will deliver these benefits by default for an increasing number of XAML scenarios.</p>\n<p>In addition, we will be collaborating with top designer extension developers as we reimplement the XAML designer extensibility model in support of their goals.</p>\n<p>We look forward to building the best XAML designer for developers by engaging with the community early and heavily prioritizing our investments around their feedback.</p>\n<h2>Conclusion</h2>\n<p>We&rsquo;ve made a lot of progress with our updates to the XAML designer, but there is still a lot of work to be done in reimplementing the tools you have known and love. For us to provide the most meaningful design-time tooling for all XAML developers, we need your feedback!</p>\n<p>If you&rsquo;d like to help us shape the future of the XAML designer, go ahead and give it a try by creating a UWP project that targets the Fall Creators Update. If you encounter any unexpected behavior, or find that tools that you rely on are missing, please let us know by using the <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Visual Studio Report-a-Problem tool</a>. In addition, we would love to talk to you about your experience or help you with any blocking issues. Feel free to reach out to us via email at <a>xamldesignerfeedback@microsoft.com</a>. We&rsquo;re eager to hear what you think!</p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/03/daniel.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>Daniel Jacobson, </b>Program Manager for Visual Studio<br><a target=\"_blank\" href=\"https://twitter.com/pmatmic\" rel=\"noopener noreferrer\">@pmatmic</a>\n<p>Daniel is a Program Manager on Visual Studio focused on tools for Universal Windows Platform developers and NuGet. He found his passion in software development after graduating with an M.S. in Mechanical Engineering from Case Western Reserve University in 2014.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-12T02:35:22","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/09/11/a-significant-update-to-the-xaml-designer/","MobileContent":null,"PublishId":0,"Status":1,"Title":"A significant update to the XAML Designer","Type":1,"TitleCn":"一个重大更新到 XAML 设计器","Content":"<p>XAML 设计器在 Visual Studio 和混合一直对于开发人员和设计者来说，打造美丽的用户体验对于 Windows 应用程序的强大工具。最初设计用于 WPF 开发 2007 年，我们取得了重大的变化，过去十年支持各种各样的 XAML 平台。我们已经添加了一路走来提高开发人员工作效率的新功能。不幸的是，所有这些变化，性能和可靠性的设计器，已成为不甚理想。我们听说过的社区<a href=\"https://visualstudio.uservoice.com/forums/121579-visual-studio-ide/suggestions/2204137-improve-the-xaml-designer-performance\">响亮而清晰</a>，我们正在努力解决这个问题。</p>\n<p>继续阅读以下内容，以找出什么是新的并通过建立针对即将 Windows 10 秋季创作者更新在<a href=\"https://www.visualstudio.com/vs/preview/\">Visual Studio 预览发布</a>最新的 UWP 应用程序尝试对 XAML 设计器的更新 ！如果你想要看到所有的细节，查阅<a href=\"https://www.visualstudio.com/news/releasenotes/vs2017-preview-relnotes\">发行说明</a>。</p>\n<h2>有关此版本的重要说明</h2>\n<p>此版本的更新的 XAML 设计器是一个非常早期的预演，是什么来，可能是粗糙的边缘。急剧变化的性质使得我们禁用一些特性以前存在的 XAML 设计器，以及航运 （称为中的<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">发行说明</a>） 的已知问题。因此，我们只发布更新设计器对于 XAML 方案一小部分 — — 具体而言，为开发人员构建 UWP 应用程序这一指标下降创作者更新。如果你要建造一个 WPF 应用程序或应用程序针对现有 Windows 10 创作者更新或更早版本的 UWP，你的经验将保持不变。</p>\n<h2>设计考虑事项</h2>\n<p>我们收到很多社区，XAML 设计器上的反馈和基于反馈，我们优先考虑以下设计审议：</p>\n<ol><li>改进的设计器的性能明显可见的方式 （不能重申够多少我们都在强调性能）</li>\n<li>最可能的高保真度的设计器图面 — — 尤其被集中在呈现项目由新<a href=\"https://fluent.microsoft.com/\">Windows 流利设计系统</a>介绍</li>\n<li>更少的设计师异常，让您尽可能设计图面中的丰硕成果</li>\n<li>虽然我们迅速循环这种新的经验，不要打破或更改现有 XAML 开发 Visual Studio 和混合</li>\n<li>最后但并非最不重要的是，创建工具，帮助您会更有成效构建 Windows 体验</li>\n</ol><p>我们相信我们已取得重大进展，为实现这些目标，很高兴能够分享我们第一次迭代为您尝试并提供反馈。我们的最终目标是要尽快在您的应用程序，使设计器加载和提供模具经验为您的页面在设计时呈现任何您的控件的内容。</p>\n<h3>性能</h3>\n<p>很多我们的努力一直在针对工序的设计表面薄以及尽可能地轻量。有效地在 UI 代码周围的包装，XAML 设计器，将现在几乎快作为您自己的应用程序的加载。</p>\n<p>你可以看到这在下面的行动。在左边，我们有一个针对秋天创作者更新项目 （因此，利用到设计器的更改）。在右边，我们有相同的项目，针对创作者更新 （因此，使用 XAML 设计你会看到今天的经验）。重新打开解决方案，你可以告诉 XAML 设计器更改我们取得结果指数更快的加载时间。在右边设计师可能看起来像它卡住了，但如果你仔细看你可以看到顶部的设计器加载栏。耐心点，你会看到它加载最终 ！</p>\n<p><strong><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\" rel=\"noopener noreferrer\"><img width=\"1774\" height=\"1097\" title=\"XAML Designer PerformanceXAML Designer Performance - side by side comparison\" alt=\"XAML Designer Performance - side by side comparison\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\"></a></strong></p>\n<h3>富达</h3>\n<p>在生成 2017年事件早在今年五月份，微软宣布新的 UI 设计系统称为<a href=\"https://fluent.microsoft.com/\">流利</a>。与秋天创作者更新，我们开始介绍对这种新的通用设计语言中内置的新控件。流利的地方重重点核心构造块： 光、 深度、 运动、 材料和规模。为了实现这些用户界面效果，组成重使用是必要的。</p>\n<p>现有的 XAML 设计器不会执行代码，在设计过程中，利用组成的 Api，因此无法呈现很多这些新的经验。一个明显的例子示，新的秋天创作者更新 'AcrylicBrush' 资源。左边显示的 XAML 设计器在此预览和权显示 XAML 设计器作为你会经历它在以前的版本中。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\" rel=\"noopener noreferrer\"><img width=\"1773\" height=\"975\" title=\"XAML Designer\" alt=\"XAML Designer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\"></a></p>\n<h3>可靠性</h3>\n<p>以前，XAML 设计器总是针对桌面.NET 框架执行。由于 UWP 建立在.NET 核心，这有时会造成在可靠性问题，作为设计过程有.NET 核心类型 (例如<a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>) 的问题。展望未来，XAML 设计器将始终执行针对.NET 运行时环境使用您的应用程序，所以类型转发问题减轻和应提高一般可靠性的设计器。</p>\n<p>XAML 设计器已成功在提供有意义的设计时预览的 UI，因为我们试着去执行你的代码到您的应用程序的运行时环境尽可能接近。这的一个副作用是，行为不检点的代码不太好使，你可以继续保护与<a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">设计模式 Api</a>的东西。</p>\n<p>考虑到这一点，仍有的情况下发展中的代码可能会导致异常崩溃设计器。通过投资于设计器加载在仅仅几秒钟，我们相信它将循环更快地在工作中进步代码上要容易得多。</p>\n<h2>从地面建立</h2>\n<p>我们要能够在我们最高优先事项上取得很大的影响，XAML 设计器需要进行建筑的剧变。此外，我们想要提供将提高所有 XAML 的发展经验，包括 XAML 编辑和继续投资。考虑到这一点，我们决定那力量 XAML 编辑和继续使用相同的技术来驱动未来的 XAML 设计器。</p>\n<p>让我们更深层次看一些其他值得再投资的大变化。这下一节是给那些对你有兴趣知道我们到 XAML 设计器所做的更改的细节。</p>\n<h3>体系结构更改</h3>\n<p>在高级别，体系结构更改包括流程重新设计的设计器表面 (UwpSurface.exe) 是作为轻量级和尽可能小。Xdesproc.exe 的过程中，利用现有的 XAML 设计器中，做了很多 — — 它所载的所有 XAML 编辑器和设计功能 （在 WPF) 代码，它会在您的应用程序和开发人员的 Viewmodel 类型元数据加载和它也执行到实际设计过程在 XAML 设计器中显示预览。如果其中的任何一个有问题，会崩溃的设计过程。重新启动设计器 （或打开新的一页） 要花费很长的因为这个过程本身会做这么多工作，每次你加载新的一页。</p>\n<p>此 XAML 设计器的更新，我们正在设计表面过程 (UwpSurface.exe) 作为薄，尽可能地轻量。它实际上是您的应用程序的 UI 代码 （这是技术，使 XAML 编辑 &amp; 继续进来的地方） 的包装。由于这个过程本身做那么少，加载 XAML 设计器应尽快启动您的应用程序，当我们正在做的努力。</p>\n<p>因为 UwpSurface.exe 仍将运行您的控件，您需要小心你背后的代码不能崩溃设计器 — — 例如，你必须仍然不取消引用您的应用程序对象在设计时。与重新设计，UwpSurface.exe 提供额外的渲染能力，所以我们已经引入了一种新的设计模式 API: Windows.ComponentModel.DesignMode.IsDesignMode2Enabled。这允许您控制运行时代码执行的新的设计器表面过程中，并继续提供检查时，在现有的设计器中执行相同的代码。我们的期望是，你将能够放宽了许多过去添加设计时检查。签出<a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">文档</a>的详细信息。</p>\n<p>此外，xdesproc.exe 桌面.NET 运行库的有关有显著的相关性。对于 UWP 应用程序，这并没有在过去了很大影响。很多.NET API 表面积为 UWP 感到只是一个子集桌面.NET 框架，但 xdesproc.exe 仍有问题实例化类型，没有现有的桌面.NET 框架 （如<a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>) 中。</p>\n<p>与秋天创作者更新和<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\">.NET 标准 2.0</a>的介绍，这个问题变得更糟糕的是，需要有一个基本的设计原则。如果你想要利用新的.NET API 在.NET 不是桌面.NET 框架中提供的标准 2.0 中可用 (例如跨度 &lt; T &gt;)，设计图面就坠毁了。与 XAML 设计器这个预览，我们在执行对匹配您的应用程序 — — 所以为 UWP UWP 应用程序将执行针对.NET 运行时环境的运行时代码。</p>\n<h3>功能的影响</h3>\n<p>它值得再次呼唤，这是一个非常早期的 XAML 设计器预览，主要目的是获取反馈周围的可靠性和性能，以及帮助我们找出你依赖最大的生产力的工具。我们在此预览中启用的功能集被认定为的工具和你目前使用最多的功能。</p>\n<p>XAML 设计器<i>不</i>支持以下功能：</p>\n<ul><li>编辑当前样式</li>\n<li>允许为高对比度、 主题等测试的设备预览设置...</li>\n<li>可视状态管理工具</li>\n<li>动画工具</li>\n<li>示例数据，但设计器实例被支持</li>\n<li>排序命令</li>\n<li>对齐命令</li>\n<li>分组到命令</li>\n<li>组合命令</li>\n<li>路径命令</li>\n<li>使成为控制</li>\n<li>文本编辑工具</li>\n<li>共混物中的资源面板</li>\n<li>共混物中的数据面板</li>\n<li>设计时间资源字典</li>\n<li>一些在混合工具窗格中的工具</li>\n<li>在模板编辑</li>\n<li>设计器扩展</li>\n<li>模具在共混物的行为</li>\n</ul><h3>此版本的已知的问题</h3>\n<p>我们早些时候叫，这是一个<b>非常</b>的早期预览是什么来。为了得到客户的输入作为尽早，我们不得不做出一些努力工程的决定。这一点，我们所知的与新的 XAML 设计器叫出的<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes#known-issues\">发行说明</a>中的几个问题。</p>\n<h2>路线图</h2>\n<p>随着我们继续获得反馈我们早期的预览版本的 XAML 设计器中，我们将继续优先考虑重新实现顶级请求的工具。我们将继续提高我们设计考虑重的 XAML 设计器。当我们有信心设计器提供了更多的生产力，比现有的设计师并不会中断任何现有的工作流程时，我们将默认情况下，越来越多的 XAML 方案提供这些好处。</p>\n<p>此外，我们将合作与顶尖的设计器扩展开发人员为我们重新实现 XAML 设计器扩展性模型以支持他们的目标。</p>\n<p>我们期待建立最佳的 XAML 设计器开发商与社区早期和严重优先我们投资在他们的反馈意见进行。</p>\n<h2>结论</h2>\n<p>我们已经很大的进步与我们更新到 XAML 设计器，但仍有大量工作要做在重新实现的工具你已经知道和爱。为我们提供了最有意义的设计时间为所有 XAML 开发人员工具，我们需要您的反馈 ！</p>\n<p>如果你想要帮助我们塑造未来的 XAML 设计器，往前走，给它一个尝试通过创建 UWP 项目秋季创作者更新为目标。如果你遇到任何意外的行为，或者发现丢失了你依赖的工具，请让我们知道通过使用<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Visual Studio 报告一个问题的工具</a>。此外，我们很乐意跟你谈谈你的经验或帮助您解决任何阻塞的问题。请随时通过电子邮件在<a>xamldesignerfeedback@microsoft.com</a>向我们伸出。我们急切地想听到你的想法 ！</p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/03/daniel.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>丹尼尔 · 雅各布森</b>Visual studio 项目经理<br><a target=\"_blank\" href=\"https://twitter.com/pmatmic\" rel=\"noopener noreferrer\">@pmatmic</a>\n<p>丹尼尔是 Visual Studio 专注工具为通用 Windows 平台开发人员和 NuGet 程序经理。他在软件开发中在 2014 年从凯斯西储大学的机械工程硕士毕业后，发现他的激情。</p></td>\n</tr></tbody></table>"},{"Id":96,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-12T00:00:23","Description":"<p>Join me <b>on Thursday, September 21 at 9 am PT / 12 pm ET / 4 pm UTC for my &ldquo;Exploring UrhoSharp 3D with Xamarin Workbooks&rdquo; webinar</b>, where I&rsquo;ll combine my love of graphics programming with my passion for helping developers build better apps. Whether you&rsquo;re just getting started or an experienced developer, you&rsquo;ll learn how to use your .NET and C# skills to create native mobile apps, complete with 3D graphics.</p>\n<h5 align=\"center\"><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">[REGISTER]</a></h5>\n<p><a target=\"_blank\" href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\" rel=\"noopener noreferrer\"><img align=\"center\" width=\"300\" height=\"187\" title=\"Xamarin University Logo\" alt=\"Xamarin University Logo\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Xamarin-University-Logo-M.png\"></a></p>\n<p>Lately, I&rsquo;ve been exploring UrhoSharp, Xamarin&rsquo;s C# and .NET wrapper of Urho3D. Urho3D is a sophisticated, powerful open-source 3D game engine written in C++ &mdash; and it allows developers to build 3D visualization and augmented reality applications. You can easily integrate UrhoSharp code into your Windows .NET and Xamarin apps, including Android, iOS, Mac, and more.</p>\n<p>Part of the reason I&rsquo;m excited about UrhoSharp: I love how graphics programming allows you to visualize something in your mind, then see it on the computer screen. About 10 years ago, I was heavy into 3D programming in the Windows Presentation Foundation, and I imagined a little two-lane highway in the form of a M&ouml;bius strip, with cars driving on the top, bottom, and sides. It looked great in theory, but I never found the time to code it.</p>\n<p>As I became more familiar with UrhoSharp, the M&ouml;bius mental image came back, and I was determined to make it real.</p>\n<p>I knew the math would be tricky, so I needed an immediate and interactive programming environment &ndash; and, with UrhoSharp and Xamarin Workbooks, my vision and my code came together. Xamarin Workbooks &ndash; an interactive blend of code and documentation that integrates C# code blocks into step-by-step guides &ndash; simplify learning mobile development, but it&rsquo;s also great for coding and testing out new ideas. As you add C# code blocks, you&rsquo;ll immediately see it executed on the screen, helping you learn as you go and make rapid changes to your apps&rsquo; appearance.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\" rel=\"noopener noreferrer\"><img title=\"Urho Sharp\" alt=\"Urho Sharp\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\"></a></p>\n<p>I&rsquo;ll dig into the code for this project, share my advice for getting started, and I &ndash; plus other Xamarin University instructors and mobile experts &ndash; will be on hand to answer your questions.</p>\n<p><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">Register now</a> and join me on <b>Thursday, September 21, at 9 am PT / 12 pm ET / 4 pm UTC </b>for a M&ouml;biusly graphical 3D experience.</p>\n<p><i>We encourage all registrants to attend the webinar live, as we will be answering questions throughout the event. However, we will share recordings with registrants after the session, so sign up even if you&rsquo;re unable to join us at the scheduled time. You can view an assortment of past sessions</i><i> </i><a href=\"https://aka.ms/xam-u-webinar-recordings\"><u>here</u></a><i>. </i></p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Charles-Petzold.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>Charles Petzold, </b>Senior Content Developer, Xamarin University, Microsoft\n<p>Charles Petzold has been working with the documentation team at Xamarin since 2014, focusing primarily on Xamarin.Forms and writing the free downloadable book Creating Mobile Apps with Xamarin.Forms. Prior to joining Xamarin, Charles wrote several books on Windows programming, as well as two unique explorations of computer concepts and technology: Code: The Hidden Language of Computer Hardware and Software and The Annotated Turing: A Guided Tour through Alan Turing&rsquo;s Historic Paper on Computability and the Turing Machine. He often spends his weekends working on a book about the origins of analog computing. Web site: charlespetzold.com</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-12T00:00:23","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/09/11/new-xamarin-university-webinar-exploring-urhosharp-3d-with-xamarin-workbooks/","MobileContent":null,"PublishId":0,"Status":1,"Title":"New Xamarin University Webinar: Exploring UrhoSharp 3D with Xamarin Workbooks","Type":1,"TitleCn":"新的 Xamarin 大学网络研讨会： 探索 UrhoSharp 3D 与 Xamarin 工作簿","Content":"<p>加入我<b>在 9 月 21 日，星期四在 9 am PT / 12 下午 ET / 4 下午 UTC 表示我\"探索 UrhoSharp 3D 与 Xamarin 工作簿\"网络研讨会的</b>，在那里会将图形编程我爱结合成我的热情，帮助开发人员构建更好的应用程序。无论您是刚开始还是有经验的开发人员，您将学习如何使用您的.NET 和 C# 技能创建本机移动应用程序，完整的 3D 图形。</p>\n<h5 align=\"center\"><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">[注册]</a></h5>\n<p><a target=\"_blank\" href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\" rel=\"noopener noreferrer\"><img align=\"center\" width=\"300\" height=\"187\" title=\"Xamarin University Logo\" alt=\"Xamarin University Logo\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Xamarin-University-Logo-M.png\"></a></p>\n<p>最近，我一直一直在探索 UrhoSharp、 Xamarin 的 C# 和.NET 包装的 Urho3D。Urho3D 是一个复杂、 功能强大的开源 3D 游戏引擎 c + + 编写 — — 它允许开发人员构建三维可视化和增强现实应用程序。你很容易可以融入您 Windows.NET 和 Xamarin 的应用程序，包括 Android、 iOS、 Mac 和更多的 UrhoSharp 代码。</p>\n<p>我兴奋 UrhoSharp 的原因的一部分： 我爱如何图形编程允许您想象中的东西在你的头脑，然后在电脑屏幕上看到它。大约 10 年前，我是重入 3D 编程在 Windows 演示文稿基础上，和我想象小小的双车道公路的莫比乌斯带，形式与在顶部、 底部和面上行驶的汽车。它看起来很好的理论，但我永远不会发现它的代码的时间。</p>\n<p>当我变得更加熟悉 UrhoSharp，莫比乌斯的心理图像回来了，和我决心要使它变为现实。</p>\n<p>我知道数学会非常棘手，所以我需要一种即时的和互动的编程环境 — — 与 UrhoSharp 和 Xamarin 工作簿，我的视野和我的代码来在一起。Xamarin 工作簿 — — 一个交互式的融合代码和 C# 代码块集成的分步指南的文档 — — 简化学习移动开发，但它也是伟大的编码和测试一些新的想法。C# 代码块添加时，您会立即看到它执行在屏幕上，帮助你学习作为你去和快速更改您的应用程序的外观。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\" rel=\"noopener noreferrer\"><img title=\"Urho Sharp\" alt=\"Urho Sharp\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\"></a></p>\n<p>我会挖到此项目的代码，分享我的忠告的入门知识，和我 — — 再加上其他 Xamarin 大学教员和移动专家 — — 将手头要回答你的问题。</p>\n<p><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">现在注册</a>并同我一起上<b>9 月 21 日，星期四，在 9 am PT / 12 下午 ET / 4 下午 UTC </b>Möbiusly 图形的 3D 体验。</p>\n<p><i>我们鼓励所有登记参加网络研讨会现场，因为我们将回答在整个事件的问题。然而，我们会会议结束后与注册人分享录音，所以签约，即使你不能和我们一起在预定的时间。您可以查看过去的会话分类</i><i> </i><a href=\"https://aka.ms/xam-u-webinar-recordings\"><u>在这里</u></a><i>.</i></p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Charles-Petzold.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>查尔斯 Petzold</b>高级内容开发人员，Xamarin 大学，微软<p>Charles Petzold 一直与文档团队在 Xamarin 自 2014 年，主要集中于 Xamarin.Forms 和编写免费下载的书籍创建移动应用程序与 Xamarin.Forms。加盟 Xamarin，查尔斯写了几本书在 Windows 编程，以及计算机的概念和技术的两个独特探索： 代码： 隐藏语言的计算机软硬件及注明图灵： 导游通过艾伦图灵在可计算性和图灵机的历史论文。他经常过周末他在写一本书关于起源的模拟计算。网站： charlespetzold.com</p></td>\n</tr></tbody></table>"},{"Id":95,"Author":"Bing Team","Categories":"Bing blogs","CreateTime":"2017-09-07T00:37:15","Description":"<p>GeoJSON is a common file format used for storing spatial data as a JSON object and is easy to import and export in Bing Maps V8 using the GeoJSON module. This file format tends to be more compact then its XML equivalents. This results in a much smaller file size, making it ideal for transferring spatial data to web and mobile applications. These files typically use a <b>.js</b> or <b>.json </b>file extensions, however occasionally you may come across some files that use <b>.geojson</b>. The following is an example of a GeoJSON file containing the location of New York.</p>\n\n<pre>\n{\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n      {\n          \"type\": \"Feature\",\n          \"geometry\": {\n              \"type\": \"Point\",\n              \"coordinates\": [-74.006393, 40.714172]\n          },\n          \"properties\": {\n              \"name\": \"New York\",\n              \"description\": \"New York\"\n          }\n      }\n    ]\n}\n</pre>\n\n<p>Additional information on this file format specification can be found <a href=\"http://geojson.org/geojson-spec.html\">here</a>.</p>\n\n<h3>Drag and Drop a GeoJSON file</h3>\n\n<p>From time to time I come across an interesting data set in GeoJSON format that I want to quickly view in Bing Maps. The Bing Maps API&rsquo;s make it easily read these files, but if I just want to quickly view the data I don&rsquo;t really want to write an app each time I want to view a GeoJSON file. With this in mind we will take a look at how to create a reusable app where we can simply drag and drop GeoJSON files onto the map and have them load.</p>\n\n<p>To accomplish this, the HTML5 FileReader and Drag &amp; Drop API&rsquo;s will be used. Good documentation on how to use these API&rsquo;s together can be found <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/#toc-selecting-files-dnd\">here</a>. Our application will first need to load the map then the GeoJSON module. From there we will attach drag and drop events to the maps main DOM element. When one or more files are dropped onto the map we will loop through each of them, attempt to read them as a GeoJSON file and then add the data to the map.</p>\n\n<pre>\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;script type='text/javascript'&gt;\n    var map;\n\n    function GetMap() {\n        map = new Microsoft.Maps.Map('#myMap', {\n            credentials: 'Your Bing Maps Key',\n            zoom: 1\n        });\n\n        //Load the GeoJSON module.\n        Microsoft.Maps.loadModule('Microsoft.Maps.GeoJson', function () {\n\n            //Setup the drag &amp; drop listeners on the map.\n            var dropZone = document.getElementById('myMap');\n            dropZone.addEventListener('dragover', handleDragOver, false);\n            dropZone.addEventListener('drop', handleFileSelect, false);\n        });\n    }\n\n    function handleDragOver(evt) {\n        //Stop the browser from performing its default behavior when a file is dragged and dropped.\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = 'copy';\n    }\n\n    function handleFileSelect(evt) {\n        //Stop the browser from performing its default behavior when a file is dragged and dropped.\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        //Remove any existing data from the map.\n        map.entities.clear();\n\n        //The list of files that have been dragged and dropped onto the map.\n        var files = evt.dataTransfer.files; \n\n        //Keep track of the bounding box of all the data from all files dropped into the map.\n        var dataBounds = null;\n\n        //Loop through and attempt to read each file. \n        for (var i = 0; i &lt; files.length; i++) {\n            var reader = new FileReader();\n\n            reader.onload = function (e) {\n                try {\n                    var geoJsonText = e.target.result;\n\n                    //Attempt to parse the file as GeoJSON and add the shapes to the map.\n                    var shapes = Microsoft.Maps.GeoJson.read(geoJsonText);\n                    map.entities.push(shapes);\n                    \n                    //Calculate the bounding box of the data in the single file. \n                    var bounds = Microsoft.Maps.LocationRect.fromShapes(shapes);\n\n                    //If data is already loaded from another GeoJSON file, merge the bounding boxes together.\n                    if (dataBounds) {\n                        dataBounds = Microsoft.Maps.LocationRect.merge(dataBounds, bounds);\n                    } else {\n                        dataBounds = bounds;\n                    }\n\n                    //Update the map view to show the data.\n                    map.setView({ bounds: dataBounds, padding: 50 });\n                } catch (e) {\n                    alert('Unable to read file as GeoJSON.');\n                }\n            };\n\n            //Read the file as text.\n            reader.readAsText(files[i]);\n        }\n    }\n    &lt;/script&gt;\n    &lt;script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap' async defer&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"myMap\" style=\"position:relative;width:800px;height:600px;\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>The following image shows the neighborhood boundaries of Los Angeles that came from a GeoJSON file that was downloaded from the <a href=\"http://boundaries.latimes.com/sets/\">Los Angeles Times Boundary API</a>.</p>\n\n<p><img alt=\"\" src=\"https://blogs.bing.com/BingBlogs/media/MapsBlog/2016/03/LATimesGeoJSON.png\"></p>\n\n<p align=\"center\"><a href=\"http://bingmapsv8samples.azurewebsites.net/#GeoJson%20Drag%20and%20Drop\">Try it now</a></p>\n\n<h3>Additional Resources</h3>\n\n<ul><li><a href=\"http://bingmapsv8samples.azurewebsites.net/\">Bing Maps V8 Code Samples</a></li>\n\t<li><a href=\"http://www.bing.com/api/maps/sdkrelease/mapcontrol/isdk\">Bing Maps V8 Interactive SDK</a></li>\n\t<li><a href=\"https://msdn.microsoft.com/en-us/library/mt712542.aspx\">Bing Maps V8 Documentation</a></li>\n</ul>","LastUpdateTime":"2017-09-07T00:37:15","Link":"https://blogs.bing.com/maps/2017-09/Drag-and-Drop-GeoJSON-files-onto-Bing-Maps-V8","MobileContent":null,"PublishId":0,"Status":1,"Title":"Drag and Drop GeoJSON files onto Bing Maps V8","Type":1,"TitleCn":"拖动和删除 GeoJSON 文件到 Bing 地图 V8","Content":"<p>GeoJSON 是一种常见的文件格式用于存储空间数据作为一个 JSON 对象，很容易导入和导出在 Bing 地图 V8 中使用 GeoJSON 模块。这种文件格式趋于更加紧凑然后 XML 的同类。这会导致很多较小文件大小，使它成为理想的将空间数据传输到 web 和移动应用程序。这些文件通常使用<b>.js</b>或<b>.json</b>的文件扩展名，但是偶尔你可能碰到一些使用<b>.geojson</b>的文件。以下是包含位置信息的纽约的 GeoJSON 文件的一个示例。</p>\n\n<pre>\n{\n    \"类型\":\"FeatureCollection\"\n    \"功能\": [\n      {\n          \"类型\":\"功能\"，\n          \"几何形状\": {\n              \"类型\":\"点\"\n              \"坐标\": [-74.006393，40.714172]\n          }，\n          \"属性\": {\n              \"名称\":\"纽约\"，\n              \"描述\":\"纽约\"\n          }\n      }\n    ]\n}\n</pre>\n\n<p>此文件格式规范的其他信息可以发现<a href=\"http://geojson.org/geojson-spec.html\">在这里</a>。</p>\n\n<h3>拖放式 GeoJSON 文件</h3>\n\n<p>次又一次我遇到一个有趣的数据集，在我想要快速查看在 Bing Maps 的 GeoJSON 格式。Bing 地图 API 使它很容易读取这些文件，但如果我只是想要快速查看数据我真的不想写一个应用程序每的次要查看 GeoJSON 文件。我们将看看如何创建一个可重用的应用程序，在那里我们可以简单地拖放到地图上的 GeoJSON 文件，让他们铭记这加载。</p>\n\n<p>要实现此目的，将使用 HTML5 FileReader 和拖放 API。可以找到好的文档关于如何使用这些 API 一起<a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/#toc-selecting-files-dnd\">在这里</a>。首先，我们的应用程序将需要加载地图然后 GeoJSON 模块。从那里我们将附加拖和放到地图主要 DOM 元素事件。当一个或多个文件拖到我们将遍历每个地图时，尝试读他们作为一个 GeoJSON 文件，然后将数据添加到地图。</p>\n\n<pre>\n&lt; ！DOCTYPE html &gt;\n&lt; html &gt;\n&lt; 头 &gt;\n    &lt; 标题 &gt;&lt; / 标题 &gt;\n    &lt; meta charset =\"utf-8\"/ &gt;\n    &lt; 脚本类型 =' 文本/javascript ' &gt;\n    var 地图;\n\n    功能 GetMap() {\n        地图 = 新 Microsoft.Maps.Map ('#myMap'，{\n            凭据: ' 你必应地图的钥匙 '，\n            放大： 1\n        });\n\n        GeoJSON 模块加载。\n        Microsoft.Maps.loadModule ('Microsoft.Maps.GeoJson'，函数 （） {\n\n            //Setup 拖和放在地图上的监听器。\n            var dropZone = document.getElementById('myMap');\n            dropZone.addEventListener （'dragover'，handleDragOver，false）;\n            dropZone.addEventListener （'放下'，handleFileSelect，false）;\n        });\n    }\n\n    功能 handleDragOver(evt) {\n        //Stop 浏览器从执行它的默认行为，当一个文件拖放式。\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = '复制';\n    }\n\n    功能 handleFileSelect(evt) {\n        //Stop 浏览器从执行它的默认行为，当一个文件拖放式。\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        从映射中移除任何现有的数据。\n        map.entities.clear();\n\n        已拖动和放置到地图上的文件的列表。\n        var 文件 = evt.dataTransfer.files; \n\n        跟踪的定界框的跌入到映射中的所有文件的所有数据。\n        var dataBounds = null;\n\n        循环遍历，并尝试读取每个文件。 \n        为 (var 我 = 0; 我 &lt; files.length; i + +) {\n            var 读者 = 新 FileReader();\n\n            reader.onload = 函数 (e) {\n                试 {\n                    var geoJsonText = e.target.result;\n\n                    尝试解析为 GeoJSON 文件，并将形状添加到地图。\n                    var 形状 = Microsoft.Maps.GeoJson.read(geoJsonText);\n                    map.entities.push(shapes);\n                    \n                    计算单文件中的数据的边界框。 \n                    var 界限 = Microsoft.Maps.LocationRect.fromShapes(shapes);\n\n                    如果从另一个 GeoJSON 文件已经加载数据，则将合并在一起的外框。\n                    如果 (dataBounds) {\n                        dataBounds = Microsoft.Maps.LocationRect.merge （dataBounds，界限）;\n                    } 其他 {\n                        dataBounds = 界限;\n                    }\n\n                    更新地图视图来显示数据。\n                    map.setView ({界限： dataBounds，填充： 50});\n                }赶上 (e) {\n                    警报 (' 无法读取文件作为 GeoJSON.');\n                }\n            };\n\n            读文件作为文本。\n            reader.readAsText(files[i]);\n        }\n    }\n    &lt; / 脚本 &gt;\n    &lt; 脚本类型 =' 文本/javascript ' src = 'https://www.bing.com/api/maps/mapcontrol?callback=GetMap' 异步推迟 &gt;&lt; / 脚本 &gt;\n&lt; / 头 &gt;\n&lt; 身体 &gt;\n    &lt; div id =\"网\"风格 =\"位置：相对; 宽度： 800px; 高度： 600px;\"&gt;&lt; / div &gt;\n&lt; / 身体 &gt;\n&lt; / html &gt;\n</pre>\n\n<p>下图显示了来自 GeoJSON 下载文件，从<a href=\"http://boundaries.latimes.com/sets/\">洛杉矶时报边界 API</a>的洛杉矶的邻域边界。</p>\n\n<p><img alt=\"\" src=\"https://blogs.bing.com/BingBlogs/media/MapsBlog/2016/03/LATimesGeoJSON.png\"></p>\n\n<p align=\"center\"><a href=\"http://bingmapsv8samples.azurewebsites.net/#GeoJson%20Drag%20and%20Drop\">现在试一试</a></p>\n\n<h3>更多的资源</h3>\n\n<ul><li><a href=\"http://bingmapsv8samples.azurewebsites.net/\">必应地图 v8 引擎代码示例</a></li>\n\t<li><a href=\"http://www.bing.com/api/maps/sdkrelease/mapcontrol/isdk\">必应地图 V8 交互式 SDK</a></li>\n\t<li><a href=\"https://msdn.microsoft.com/en-us/library/mt712542.aspx\">必应地图的 v8 引擎的文档</a></li>\n</ul>"},{"Id":94,"Author":"Shashank Bansal [MSFT]1","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-09-04T16:01:02","Description":"When you are configuring continuous deployment pipelines for your team, it becomes essential to keep the team members informed about the progress of releases and the related action items. We had started preview of the release notifications feature that integrates the configuration of release related notifications with the default notification settings experience in Visual Studio... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/\"> Read More</a>","LastUpdateTime":"2017-09-04T16:01:02","Link":"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Managing Release Notifications","Type":1,"TitleCn":"管理发布通知","Content":"当你正在为你的团队配置连续部署管道时，就必须在保持团队成员了解发布和相关的行动项目的进展。我们已开始释放通知功能，整合的发布配置预览相关通知与在 Visual Studio 中的默认通知设置经验......<a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/\">阅读更多</a>"},{"Id":93,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-09-01T20:55:24","Description":"MSTest V2 has crossed 1 Million downloads. Congratulations! Hats off to the community! MSTest V2 is seeing robust usage. We ourselves use it heavily. If you are still using an earlier version of the MSTest framework, we encourage you to upgrade. We have looked at the uptake of MSTest V2 from the perspective of two... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/\"> Read More</a>","LastUpdateTime":"2017-09-01T20:55:24","Link":"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Upgrade to MSTest V2!","Type":1,"TitleCn":"升级到 MSTest V2 ！","Content":"MSTest V2 已经越过了 100 万的下载。祝贺你 ！向社区脱帽致敬 ！MSTest V2 看到鲁棒的用法。我们大量使用了它。如果你还在使用早期版本的 MSTest 框架，我们鼓励您进行升级。我们有从两个角度来看 MSTest V2 的吸收......<a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/\">阅读更多</a>"},{"Id":92,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-01T00:00:43","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%20for%20Mac%20version%207.2%20beta%20preview%2C%20and%20hands-on%20with%20containers%20and%20serverless\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>This week we released the second alpha of Visual Studio for Mac version 7.2, as well as some hands-on labs to try out some of the new features.</p>\n<h2>Visual Studio for Mac 7.2 Alpha</h2>\n<p>The alpha version of our next Visual Studio for Mac release includes new features such as:</p>\n<ul><li><b>Docker Containers</b> &ndash; Join the microservices revolution, by testing and deploying your ASP.NET Core web apps to Docker containers. Visual Studio for Mac&rsquo;s Docker support lets you easily deploy to a container as well as debug projects across multiple containers. Check out the hands-on-lab below to get started!</li>\n<li><b>Xamarin Live Player</b> &ndash; Get started building Xamarin mobile applications in minutes! Visit <a href=\"https://xamarin.com/live\">xamarin.com/live</a> to learn how easy it is to try out mobile app development with your existing iOS or Android device and Visual Studio for Mac.</li>\n<li><b>Azure Functions</b> &ndash; Build and deploy serverless code in the cloud. Functions can be accessed by mobile or server apps, scheduled or triggered, and you only pay for the time they run. Follow the hands-on-lab below to write your first Azure Function.</li>\n<li><b>IoT projects</b> &ndash; Build, test, and deploy apps for Internet of Things devices. You can write IoT apps using C#, and deploy them to a Raspberry Pi, following our <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/IoT/Getting-Started\">simple instructions</a>.</li>\n</ul><p>To try out these features, <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">download Visual Studio for Mac</a> and switch to the <a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">alpha channel</a> in the IDE.</p>\n<h2>More Hands-On Labs</h2>\n<p>Our latest hands-on labs for <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio for Mac</a> will help you get started with new features available in the 7.2 alpha. Visit the <a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac labs GitHub repo</a> for past weeks&rsquo; projects using the Unity 3D game engine, Internet of Things devices, ASP.NET Core web sites, and Xamarin for mobile app development.</p>\n<p>Today we&rsquo;ve published two additional labs using: Docker Container support and Azure Functions projects.</p>\n<h2>Lab 5: Deploying ASP.NET Core to a Docker Container</h2>\n<p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Web/Getting-Started\">Lab 3</a> demonstrated how to build, test, and debug an ASP.NET Core website on your Mac. This lab will show you how to run and debug an ASP.NET web site and web API in Docker containers, by completing these 4 tasks:</p>\n<ol><li>Create a Docker-enabled ASP.NET Core web site</li>\n<li>Create a Docker-enabled ASP.NET Core web API</li>\n<li>Integrate two container apps</li>\n<li>Debug multi-container solutions</li>\n</ol><p>Follow the <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Docker/Getting-Started\">complete instructions</a> to set up the two ASP.NET Core projects, make them work together, and debug them simultaneously.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" rel=\"noopener noreferrer\"><img title=\"Deploying ASP.NET Core to a Docker Container\" alt=\"Deploying ASP.NET Core to a Docker Container\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" width=\"700\" height=\"522\"></a></p>\n<h2>Lab 6: Serverless computing with Azure Functions</h2>\n<p>&ldquo;Serverless computing&rdquo; is a new type of cloud feature where you can host a &ldquo;function&rdquo; without having to worry about setting up a server, or even an application, to run it in. Simply build and deploy your Azure Function, and it will be automatically hosted and scaled as required. You only pay for the time the function is running, it can respond to application requests, you can set up triggers, and it can access many different Azure services.</p>\n<p>To build your first Azure Function and get started with serverless computing, follow these 5 steps:</p>\n<ol><li>Create an Azure Functions project</li>\n<li>Create an Azure Storage account</li>\n<li>Create and Debug an Azure Function</li>\n<li>Work with function.json</li>\n<li>Work with Azure Tables</li>\n</ol><p>The <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Azure-Functions/Getting-Started\">hands-on-lab instructions</a> will walk you through creating the Azure Functions project in Visual Studio for Mac, deploying it to Azure, and persisting data with Azure Tables. This feature is so new it is only available in the <a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">Alpha channel</a> release of Visual Studio for Mac. You&rsquo;ll need to install an extension for Azure Functions, which the instructions will help you with.</p>\n<h2>Get Started</h2>\n<p><a href=\"https://www.visualstudio.com/downloads/\">Download Visual Studio for Mac</a> today, and visit the <a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac labs repo on GitHub</a>. Both this week&rsquo;s labs just scratch the surface of the capabilities being demonstrated: Docker support enables new testing and deployment options, and Azure Functions opens up a new, easier way to interact with powerful Azure services.</p>\n<p>With the Visual Studio Community edition it is easy and free to get started. <a href=\"https://docs.microsoft.com/visualstudio/mac/\">Check out the docs</a> for more in-depth information on Visual Studio for Mac, and leave a comment below to suggest additional hands-on-labs you&rsquo;d like to see.</p>\n<table width=\"600\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td valign=\"top\"><img width=\"299\" height=\"301\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Craig-Dunn.jpg\"></td>\n<td valign=\"top\"><strong>Craig Dunn</strong>, Principal Program Manager<br><a target=\"_blank\" href=\"http://@conceptdev/\" rel=\"noopener noreferrer\">@conceptdev</a>\n<p>Craig works on the Mobile Developer Tools documentation team, where he enjoys writing cross-platform code for iOS, Android, Mac, and Windows platforms with Visual Studio and Xamarin.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-01T00:00:43","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/31/hands-on-with-visual-studio-for-mac-containers-serverless-code-in-the-cloud/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Getting hands on with Visual Studio for Mac, containers, and serverless code in the cloud","Type":1,"TitleCn":"让手与 Visual Studio 为 Mac、 容器和无服务器代码在云中","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%20for%20Mac%20version%207.2%20beta%20preview%2C%20and%20hands-on%20with%20containers%20and%20serverless\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>本周我们发布 Visual Studio 为 Mac 版本 7.2，第二个字母，以及一些动手实验来尝试了一些新的功能。</p>\n<h2>视觉工作室为 Mac 7.2 阿尔法的</h2>\n<p>我们下一个 Visual Studio 为 Mac 版本的 alpha 版本包含以下新功能：</p>\n<ul><li><b>码头集装箱</b>— — 联接 microservices 革命，通过测试和将 ASP.NET 核心 web 应用程序部署到码头集装箱。Mac 的码头工人支持 visual Studio 可以让你轻松地部署到容器以及调试项目跨多个容器。查阅实操-上-实验室下面即可开始 ！</li>\n<li><b>Xamarin 活玩家</b>— — 开始在几分钟内生成 Xamarin 移动应用程序 ！访问<a href=\"https://xamarin.com/live\">xamarin.com/live</a>了解到它是多么容易尝试与您现有的 iOS 或 Android 设备和 Visual Studio mac 的移动应用程序开发</li>\n<li><b>Azure 功能</b>— — 构建和部署在云无服务器代码。函数可以通过手机或服务器应用程序访问、 预定或触发，和你只付他们运行的时间。按照掌握-上-实验室下面写你第一次的 Azure 函数。</li>\n<li><b>物联网项目</b>— — 构建、 测试和部署应用程序对于物联网的设备。你可以写物联网应用程序在使用 C# 中，并将它们部署到树莓派，我们<a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/IoT/Getting-Started\">简单的指令</a>。</li>\n</ul><p>尝试这些功能， <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio 为 Mac 下载</a>并切换到<a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">alpha 通道</a>在 IDE 中。</p>\n<h2>更多动手实验室</h2>\n<p><a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio 为 Mac</a>我们最新的动手实验将帮助您开始使用新功能可用在 7.2 阿尔法。<a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac 实验室 GitHub 回购</a>过去几周的项目，并为移动应用程序开发应用统一的 3D 游戏引擎、 物联网设备、 ASP.NET 核心网站和 Xamarin 的访问。</p>\n<p>今天我们已经发表了两个额外的实验室使用： 码头容器支持和 Azure 功能项目。</p>\n<h2>实验室 5： 部署 ASP.NET 核心到码头集装箱</h2>\n<p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Web/Getting-Started\">实验室 3</a>展示了如何构建、 测试和调试 ASP.NET 核心网站上您的 mac。这个实验室将向你展示如何运行和调试 ASP.NET web 站点和 web API 在码头容器中，通过完成这些 4 项任务：</p>\n<ol><li>创建一个码头启用 ASP.NET 核心 web 站点</li>\n<li>创建一个码头启用 ASP.NET 核心网络 API</li>\n<li>整合两个容器应用程序</li>\n<li>调试多个容器解决方案</li>\n</ol><p>按照<a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Docker/Getting-Started\">说明完成</a>设置了两个 ASP.NET 核心项目，让他们一起工作，和他们同时调试。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" rel=\"noopener noreferrer\"><img title=\"Deploying ASP.NET Core to a Docker Container\" alt=\"Deploying ASP.NET Core to a Docker Container\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" width=\"700\" height=\"522\"></a></p>\n<h2>实验室 6： 无服务器计算与 Azure 功能</h2>\n<p>\"无服务器计算\"是一种新型的在那里你可以承载\"函数\"的云功能而无需担心设置的服务器，或甚至是应用程序，在运行它。简单地生成和部署您的 Azure 函数，它将自动主办和缩放的要求。你只需支付在函数运行一次，它可以响应到应用程序的请求，您可以设置触发器，并且它可以访问许多不同的 Azure 服务。</p>\n<p>若要生成您第一次的 Azure 功能和入门无服务器计算，请按照这 5 个步骤：</p>\n<ol><li>创建 Azure 功能项目</li>\n<li>创建一个 Azure 存储帐户</li>\n<li>创建和调试蔚蓝的功能</li>\n<li>工作与 function.json</li>\n<li>工作与 Azure 表</li>\n</ol><p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Azure-Functions/Getting-Started\">掌握上实验室指示</a>将引导您完成为 Mac 在 Visual Studio 中创建 Azure 功能项目，将其部署到 Azure，和持久化数据与 Azure 表。此功能是如此之新，它是唯一可在 mac 的 Visual Studio<a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">阿尔法频道</a>发布的版本你需要为 Azure 功能，说明将帮助您进行安装的扩展。</p>\n<h2>入门</h2>\n<p>今天，<a href=\"https://www.visualstudio.com/downloads/\">下载 Visual Studio 为 Mac</a>和访问<a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac 实验室回购在 GitHub 上</a>。这周的实验室只是划伤表面所演示的功能： 码头工人支持使新的测试和部署选项，和 Azure 功能开辟了新的、 更容易的途径，与强大的 Azure 服务进行交互。</p>\n<p>与 Visual Studio 社区版很容易和免费入门。<a href=\"https://docs.microsoft.com/visualstudio/mac/\">签出文档</a>的 Mac 和下面的评论去建议额外掌握上实验室对 Visual Studio 更深入信息你想看到。</p>\n<table width=\"600\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td valign=\"top\"><img width=\"299\" height=\"301\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Craig-Dunn.jpg\"></td>\n<td valign=\"top\"><strong>克雷格 · 邓恩</strong>，首席项目经理<br><a target=\"_blank\" href=\"http://@conceptdev/\" rel=\"noopener noreferrer\">@conceptdev</a>\n<p>克雷格在哪里他喜欢写跨平台代码为 iOS、 Android、 Mac 和 Windows 平台与 Visual Studio 和 Xamarin 的移动开发人员工具文档团队工作。</p></td>\n</tr></tbody></table>"},{"Id":91,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-31T00:30:22","Description":"<p>At //BUILD 2017, we shipped an update to the <a href=\"http://aka.ms/CD4VS\">Continuous Delivery Tools for Visual Studio</a>. This update has support for configuring a Continuous Integration and Continuous Delivery pipeline for <a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a> projects with <a href=\"https://www.docker.com/what-container\">container support</a> to an existing <a href=\"https://azure.microsoft.com/en-us/services/service-fabric/\">Azure Service Fabric cluster</a> directly from <a href=\"https://www.visualstudio.com/downloads/\">Visual Studio 2017</a>.</p>\n<p>To configure continuous delivery to a Service Fabric cluster, first you need <a href=\"https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-tutorial-create-cluster-azure-ps\">to create a preview version Service Fabric cluster</a>. Start by creating a security certificate to secure administrative access to the cluster. Open a PowerShell console, login to Azure and select the Azure subscription that you want to deploy the cluster in then create and encrypt a password for the certificate used by Service Fabric to secure access to your cluster by running the following commands:</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>Login-AzureRmAccount</span></span></span><span></span>\n\n<span><span><span>Select-AzureRmSubscription</span></span></span><span><span><span> -SubscriptionId</span></span><span> &lt;</span><span><span>subscription-id</span></span></span><span><span>&gt;</span></span>\n\n<span><span><span>$pwd</span></span></span><span><span> = </span><span><span>\"&lt;your password&gt;\"</span></span><span> | </span><span><span>ConvertTo-SecureString</span></span></span><span><span><span> -AsPlainText -Force</span></span></span><span></span></pre>\n</div>\n<p><span></span></p>\n<p>Keep your PowerShell console running and download the <a href=\"https://aka.ms/securepreviewonelineclustertemplate\">Azure Resource Management Template for Service Fabric</a> azuredeploy.json and the sample azuredeploy.parameters.json locally. Edit the parameters file to name, size and secure your cluster as well as set its location. Ensure that the <i>clusterCodeVersion</i> is set to the preview version <b>255.255.5718.255</b>. Once your configuration files are ready, create the cluster by running the following commands:</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>New-AzureRmServiceFabricCluster</span></span></span><span></span>\n\n<span><span> </span></span><span><span><span>-TemplateFile</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span>azuredeploy.json `</span></span>\n\n<span><span> </span></span><span><span><span>-ParameterFile</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span>azuredeploy.parameters.json `</span></span>\n\n<span><span> </span></span><span><span><span>-CertificateOutputFolder</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span> `</span></span>\n\n<span><span><span> -CertificatePassword</span></span></span><span><span> <span>$pwd</span> `</span></span>\n\n<span><span><span> -CertificateSubjectName </span></span></span><span><span><span>\"<span>&lt;your_cluster_name&gt;</span>.<span>&lt;cluster_location&gt;</span>.cloudapp.azure.com\"</span></span></span><span><span> `</span></span>\n\n<span><span> </span></span><span><span><span>-ResourceGroupName</span></span></span><span><span> </span><span><span>&lt;your_cluster_RGname&gt;</span></span></span></pre>\n</div>\n<p><span></span></p>\n<p>Once the Service Fabric creation is completed, the command will output cluster information to the console window and copy the security certificate to your working folder. Double click on the certificate to import it to the current user certificate store. Remember to <b>mark the certificate key as exportable</b> in the private key protection step and complete the import wizard. This will allow the Configure Continuous Delivery experience to export the key while configuring your release definition.</p>\n<p>With a preview version of the Service Fabric Cluster, you can now configure Continuous Delivery from Visual Studio 2017 with the latest version of the Continuous Delivery Tools for Visual Studio extension. Create or open an existing solution with an ASP.NET or ASP.NET Core project. Add Docker support to the project and ensure that the solution is under version control on VSTS or GitHub. Right click on the solution in Solution Explorer and select Configure Continuous Delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" rel=\"noopener noreferrer\"><img title=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" alt=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" width=\"627\" height=\"332\"></a></p>\n<p>With Service Fabric Cluster as the Target Host type, select your newly created Serviced Fabric cluster to act as a target for continuous delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" width=\"630\" height=\"390\"></a></p>\n<p>Visual Studio will automatically pick up the cluster certificate from your user certificate store and verify the thumbprint. Enter the password for the certificate and select your Azure Container Registry then click OK. Once the configure continuous delivery completes, you will have a configured build and release pipeline for your project to your new Service Fabric Cluster.</p>\n<p>To expose your web service outside its container you need to enable port mapping for your container by modifying the docker-compose.yml file for that project to enable the port mapping for your service. If you have multiple services, you need to do that for each of them.</p>\n<pre><span><code>version: <span>'3'</span>\n\nservices:\n  &lt;your_service_name&gt;:\n    image: <span>&lt;your_image_name&gt;</span>\n    ports:\n   <span> -\t&ldquo;80:80&rdquo;</span>\n    build:\n      context: <span>./&lt;your_service_context&gt;</span>\n      dockerfile: <span>Dockerfile\n</span></code></span></pre>\n<p>To expose these services outside the Service Fabric Cluster, you need to configure your load balancer to do so for each service port. By default, the current sample ARM template and parameter files load balance traffic on port 80 and 8081 for the cluster. If you need to configure other ports you can do so by adding new entries in your ARM template</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"type\": \"int\",\n      \"defaultValue\": 80,\n      \"metadata\": {\n        \"description\": \"Input endpoint1 for the application to use. Replace it with what your application uses\"\n      }\n</pre>\n<p>and modifying the values in your parameters file.</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"value\": 80\n    },\n    \"loadBalancedAppPort2\": {\n      \"value\": 8081\n    },\n</pre>\n<h2>Please keep the feedback coming!</h2>\n<p>Thank you to everyone who has reached out and shared feedback and ideas so far. We&rsquo;re always looking for feedback on where to take this <a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs extension</a> next. There&rsquo;s a <a>Slack channel</a> and a team alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>Ahmed Metwally</strong>, Senior PM, Visual Studio<br><a href=\"https://twitter.com/cd4vs\">@cd4vs</a>\n<p>Ahmed is a Program Manager on the Visual Studio Platform team focused on improving team collaboration and application lifecycle management integration.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-31T00:30:22","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/30/create-a-cicd-pipeline-to-azure-service-fabric/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Create a CI/CD pipeline to Azure Service Fabric","Type":1,"TitleCn":"创建到 Azure 服务织物的 CI/CD 管道","Content":"<p>在 //BUILD 2017年，我们运到<a href=\"http://aka.ms/CD4VS\">Visual Studio 连续交付工具</a>的更新。此更新已支持配置<a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a>工程的持续集成和持续交付的管道与<a href=\"https://www.docker.com/what-container\">容器支持</a>到现有的<a href=\"https://azure.microsoft.com/en-us/services/service-fabric/\">Azure 服务织物群集</a>直接从<a href=\"https://www.visualstudio.com/downloads/\">视觉工作室 2017</a>.</p>\n<p>配置连续传递到服务织物群集，您首先需要<a href=\"https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-tutorial-create-cluster-azure-ps\">创建一个预览版本服务织物的群集</a>。首先创建一个安全证书，以确保对群集的管理访问。打开 PowerShell 控制台，登录到 Azure，并选择您想要部署在群集然后创建加密证书服务织物用于通过运行以下命令来获得您的群集的密码蔚蓝订阅：</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>登录 AzureRmAccount</span></span></span><span></span>\n\n<span><span><span>选择 AzureRmSubscription</span></span></span> <span> <span><span> -SubscriptionId</span></span> <span> &lt;</span><span><span>订阅 id</span></span></span><span><span>&gt;</span></span>\n\n<span><span><span>$pwd</span></span></span><span><span></span><span><span>\"&lt; 密码 &gt;\"</span></span><span><span><span></span></span></span>信仰 SecureString</span> <span><span><span> -AsPlainText-力</span></span></span><span></span></pre>\n</div>\n<p><span></span></p>\n<p>保持你的 PowerShell 控制台运行并下载<a href=\"https://aka.ms/securepreviewonelineclustertemplate\">服务织物 Azure 资源管理模板</a>azuredeploy.json 和样品 azuredeploy.parameters.json 本地。编辑的参数文件名称、 大小和确保您的群集，以及设置其位置。确保将<i>clusterCodeVersion</i>设置为预览版本<b>255.255.5718.255</b>。一旦您的配置文件已准备就绪，创建群集通过运行以下命令：</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>新 AzureRmServiceFabricCluster</span></span></span><span></span>\n\n<span><span></span></span><span><span><span>-TemplateFile</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span>azuredeploy.json '</span></span>\n\n<span><span></span></span><span><span><span>-ParameterFile</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span>azuredeploy.parameters.json '</span></span>\n\n<span><span></span></span><span><span><span>-CertificateOutputFolder</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span> '</span></span>\n\n<span><span><span> -CertificatePassword</span></span></span><span><span><span>$pwd</span>'</span></span>\n\n<span><span><span></span></span></span><span><span><span>\"<span>&lt; your_cluster_name &gt;</span>。<span>&lt; cluster_location &gt;</span>.cloudapp.azure.com\"</span></span></span> <span><span> '</span></span>\n\n<span><span></span></span><span><span><span>-ResourceGroupName</span></span></span><span><span><span><span></span></span></span>&lt; your_cluster_RGname &gt;</span></pre>\n</div>\n<p><span></span></p>\n<p>一旦服务织物创建完成后，该命令将群集信息输出到控制台窗口，并将安全证书复制到您的工作文件夹。双击要导入到当前用户证书存储区的证书。记得到<b>标记为可导出的证书密钥</b>的私钥保护一步和完成导入向导。这将允许配置持续交付经验来配置您的发布定义时导出的密钥。</p>\n<p>与群集服务的织物预览版本，现在您可以配置从 Visual Studio 2017 年开始持续交付与最新版本的 Visual Studio 扩展连续交付工具。创建或打开一个现有的解决方案与 ASP.NET 或 ASP.NET 核心的项目。向项目中添加码头工人支持并确保解决方案在 VSTS 或 GitHub 上的版本控制之下。右键单击解决方案资源管理器中的解决方案并选择配置持续交付。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" rel=\"noopener noreferrer\"><img title=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" alt=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" width=\"627\" height=\"332\"></a></p>\n<p>与群集服务的织物作为目标主机类型，请选择您新创建的服务织物群集作为持续交付的目标。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" width=\"630\" height=\"390\"></a></p>\n<p>Visual Studio 将自动拿起您的用户证书存储区中的群集证书和验证指纹。输入证书的密码并选择您的 Azure 容器注册表然后单击确定。一旦配置连续传递完成后，你将有一个已配置的生成和释放管道为您的项目给你新面料群集服务的。</p>\n<p>使您的 web 服务在其容器外，您需要通过修改该项目，以使您的服务的端口映射的码头工人 compose.yml 文件来启用端口映射为您的容器。如果您有多个服务，您需要为他们每个人都这样做。</p>\n<pre><span><code><span>'3'</span>\n\nservices:\n  &lt;your_service_name&gt;:\n    <span>&lt;your_image_name&gt;</span>\n    ports:\n   <span> -\t&ldquo;80:80&rdquo;</span>\n    build:\n      <span>./&lt;your_service_context&gt;</span>\n      <span>Dockerfile\n</span></code></span></pre>\n<p>若要公开这些织物群集服务之外的服务，您需要配置您的负载平衡器，这样做的每个服务端口。默认情况下，当前的样品臂模板和参数文件负载平衡通信量在端口 80 和 8081 为群集上。如果您需要配置其他端口，你可以在你手臂模板中添加新条目</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"类型\":\"int\"\n      \"默认值\": 80，\n      \"元数据\": {\n        \"说明\":\"输入 endpoint1，应用程序才能使用。它替换为您的应用程序使用\"\n      }\n</pre>\n<p>和修改您的参数文件中的值。</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"价值\": 80\n    }，\n    \"loadBalancedAppPort2\": {\n      \"价值\": 8081\n    }，\n</pre>\n<h2>请保持反馈来 ！</h2>\n<p>谢谢大家有伸出和共享反馈和想法到目前为止。我们一直在寻找反馈在哪里下, 一步采取此<a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs 扩展名</a>。有一种<a>松弛的通道</a>和团队别名<a>vsdevops@microsoft.com</a>在那里你可以伸出，团队和其他人在社区分享关于这一主题的想法。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>艾哈迈德 Metwally</strong>，高级 PM 视觉工作室<br><a href=\"https://twitter.com/cd4vs\">@cd4vs</a>\n<p>艾哈迈德是在 Visual Studio 平台团队专注于改善团队协作和应用程序生命周期管理集成的项目经理。</p></td>\n</tr></tbody></table>"},{"Id":81,"Author":"Andrew Pardoe [MSFT]","Categories":"Visual C++ Team Blog","CreateTime":"2017-08-26T07:50:51","Description":"<p>A new update of C++/WinRT is available on <a href=\"https://github.com/microsoft/cppwinrt\">GitHub</a>! C++/WinRT is a standard C++ language projection for the Windows Runtime, implemented solely in header files.</p>\n<p>The C++/WinRT team has been quiet since their announcements at <a href=\"https://cppcon.org/\">CppCon</a> 2016. They&rsquo;ve made a lot of progress in this update, leading up to the first public release of the CppWinRT compiler. You can read the <a href=\"https://moderncpp.com/2017/08/25/cppwinrt-2017/\">announcement on the ModernCpp website</a>.</p>\n<p>We on the Visual C++ team find C++/WinRT to be one of the best test cases for our compiler as <a href=\"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/c-standards-conformance-from-microsoft/\">MSVC approaches conformance with the C++ Standard</a>. As you try new, standards-conforming features out in MSVC, please be sure to give us your feedback. We can be reached via the comments below, via email (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) and you can provide feedback via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Help &gt; Report A Problem in the product</a>, or via <a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">Developer Community</a>. You can also find us on Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) and Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>).</p>","LastUpdateTime":"2017-08-26T07:50:51","Link":"https://blogs.msdn.microsoft.com/vcblog/2017/08/25/a-new-cwinrt-update-is-available/","MobileContent":null,"PublishId":0,"Status":1,"Title":"A new C++/WinRT update is available","Type":1,"TitleCn":"新的 C + + /cli WinRT 更新是可用","Content":"<p>新更新的 C + + /cli WinRT 是可用在<a href=\"https://github.com/microsoft/cppwinrt\">GitHub</a>上 ！C + + /cli WinRT 是一个标准的 c + + 语言投影为 Windows 运行时，只在头文件中实现。</p>\n<p>C + + /cli WinRT 团队安静以来，他们在<a href=\"https://cppcon.org/\">CppCon</a> 2016 的公告。他们在此更新取得很大的进步，导致第一次公开发布的 CppWinRT 编译器。你可以阅读<a href=\"https://moderncpp.com/2017/08/25/cppwinrt-2017/\">在 ModernCpp 网站上的公告</a>。</p>\n<p>我们在 Visual c + + 团队找到 C + + / WinRT 是我们作为<a href=\"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/c-standards-conformance-from-microsoft/\">MSVC 方法符合 c + + 标准</a>的编译器最佳测试用例之一。当你在 MSVC 尝试新的、 符合标准的特点，请务必给我们您的反馈意见。我们可以通过下面，通过电子邮件 (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) 的评论，你可以提供反馈通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">帮助 &gt; 报告一个问题在产品</a>，或通过<a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">开发者社区</a>。你也可以找到我们在 Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) 和 Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>) 上。</p>"},{"Id":89,"Author":"Immo Landwerth [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-26T05:00:11","Description":"<p>Today, we<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">released the first Preview of Visual Studio 2017 version 15.4</a>. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&rsquo;ll outline what this means for UWP development with .NET.</p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#prerequisites\"></a>Prerequisites</h2>\n<p>In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU) as the minimum version of your UWP project. That&rsquo;s because .NET Standard 2.0 contains many APIs that require FCU to make them work in the context of the UWP execution environment, specifically AppContainer.</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\" alt=\"\" width=\"869\" height=\"354\"></a></p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#whats-new-with-net-standard-20\"></a>What&rsquo;s new with .NET Standard 2.0?</h2>\n<p>.NET Standard is a specification of APIs that all .NET implementations have to implement. UWP is now adding support for .NET Standard 2.0.</p>\n<p>The key advantage of<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET Standard 2.0</a><span>&nbsp;</span>is that it makes .NET implementations of .NET Standard much more similar to .NET Framework. With .NET Standard 2.0,<span>&nbsp;</span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">about 20,000 more APIs</a><span>&nbsp;</span>become available compared to .NET Standard 1.6. The vast majority of them are existing .NET Framework APIs, which includes missing reflection APIs, non-generic collections,<span>&nbsp;</span><code>DataSet</code>, binary serialization, XML Schema, and many more. For a full list, take a look at the<span>&nbsp;</span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">diff between .NET Standard 2.0 and .NET Standard 1.6</a>.</p>\n<p>This makes it much easier to port existing .NET Framework code to UWP. This includes both, copy &amp; pasting existing code, but also extends to referencing existing .NET Framework binaries, via the compatibility mode. Here is an example of using<span>&nbsp;</span><code>DataSet</code><span>&nbsp;</span>inside a UWP application:</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\" alt=\"\" width=\"2155\" height=\"1340\"></a></p>\n<p>For more details, check out my<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">blog post on .NET Standard 2.0</a>.</p>\n<p></p>\n<h2>Summary</h2>\n<p><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">Visual Studio 2017 version 15.4 Preview 1</a><span>&nbsp;</span>adds support for .NET Standard 2.0 in UWP projects that require Fall Creators Update (FCU). Please give it a spin and tell us what you think!</p>","LastUpdateTime":"2017-08-26T05:00:11","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","MobileContent":null,"PublishId":0,"Status":1,"Title":"UWP &#038; .NET Standard 2.0: A preview is now available!","Type":1,"TitleCn":"UWP &.NET 标准 2.0: 预览是现在可用 ！","Content":"<p>今天，我们<span></span><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">发布第一个预览的视觉工作室 2017 15.4 版本</a>。这包括对支持.NET 标准 2.0 UWP 工具的更新。在这篇文章，我将概述这对.NET UWP 发展意味着什么。</p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#prerequisites\"></a>系统必备组件</h2>\n<p>为了在 UWP 中使用.NET 标准 2.0，您需要将秋天创作者更新 (FCU) 作为您的 UWP 项目的最低版本。这是因为.NET 标准 2.0 包含了很多的 Api，需要风机盘管，使他们工作在 UWP 执行环境，特别是 AppContainer 的上下文。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\" alt=\"\" width=\"869\" height=\"354\"></a></p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#whats-new-with-net-standard-20\"></a>新的.NET 2.0 标准是什么？</h2>\n<p>.NET 标准版是一种规范的所有.NET 实现都一定要实现的 Api。UWP 现在添加对.NET 标准 2.0 的支持。</p>\n<p>关键优势<span></span> <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET 标准 2.0</a> <span> </span>，是它让.NET 实现.NET 标准有更多类似到.NET 框架。与.NET 标准 2.0<span> </span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">约 20,000 更多的 Api</a> <span></span>成为可用相比.NET 标准 1.6。其中绝大多数都现有的.NET 框架 Api，包括失踪的反射 Api，非泛型集合，<span> </span> <code>DataSet</code> ，二进制序列化、 XML 架构和更多。有关完整列表，看看<span></span> <a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">.NET 标准 2.0 和.NET 标准 1.6 之间的差异</a>。</p>\n<p>这使它更易于港口现有的.NET 框架代码到 UWP。这包括两个，复制和粘贴现有的代码，但也延伸到引用现有的.NET 框架二进制文件，通过兼容性模式。下面是一个示例使用<span></span> <code>DataSet</code> <span> </span>UWP 应用程序内：</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\" alt=\"\" width=\"2155\" height=\"1340\"></a></p>\n<p>更多详细信息，请查阅我<span></span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">博客上.NET 标准 2.0</a>。</p>\n<p>\n<h2>摘要</h2>\n<p><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">Visual Studio 2017 版本 15.4 预览 1</a><span> </span>UWP 项目需要秋天创作者更新 (FCU) 中添加.NET 标准 2.0 支持。请让它旋转，并告诉我们你的想法 ！</p>"},{"Id":83,"Author":"Steve Dower [MSFT]","Categories":"Python Engineering at Microsoft","CreateTime":"2017-08-26T04:00:31","Description":"<p>It's been a while since we last posted, and we've been hard at work on new features for Python in Visual Studio 2017. Today, the first preview of the next update has been released, which you can install from <a href=\"https://visualstudio.com/vs/preview\" target=\"_blank\">visualstudio.com</a> or by updating your existing Preview install. </p>\n<p>In this post, we'll briefly discuss the new features in this preview, including the secret tricks and exclusive downloads you will need to enable some of them. </p>\n<h1>Ctrl+Click Go To Definition</h1>\n<p>Over the new update you should see this feature coming to most languages in Visual Studio, but we are excited that Python is one of the first to get it. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver-300x127.png\" alt=\"Ctrl+Click Go To Definition turns identifiers into hyperlinks when you hover over them\" width=\"300\" height=\"127\"></a></p>\n<p>You are probably familiar with the Go To Definition feature, either through the editor context menu or the F12 shortcut key, but we have added a new way to use it. While holding the Control key down, the identifier you have the mouse over will turn into a hyperlink if it has definitions you can go to. Clicking on the item will then take you directly to the definition. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options-300x203.png\" alt=\"Options dialog showing settings that can be changed for Ctrl+Click Go To Definition\" width=\"300\" height=\"203\"></a></p>\n<div>If you would prefer to use a key other than Control, the Text Editor options page will let you select an alternative. You can also choose to \"peek\" the definition rather than going to it, which will open a smaller editor window embedded within the current one.</div>\n<p>(Unfortunately, it seems that peek does not work for Python code in this first preview. We're <a href=\"https://github.com/Microsoft/PTVS/issues/2916\" target=\"_blank\">fixing it</a> for preview 2!)</p>\n<h1>Debugging in the Windows Subsystem for Linux</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties-300x189.png\" alt=\"Selecting the WSL launcher from a Python project's properties window\" width=\"300\" height=\"189\"></a></p>\n<p>The <a href=\"https://msdn.microsoft.com/commandline/wsl\" target=\"_blank\">Windows Subsystem for Linux</a> (WSL) is an exciting new technology that lets you use a full Linux distribution on your Windows machine. This is not a virtual machine, but a subsystem similar to the way that 32-bit processes are supported on 64-bit Windows. Follow the link for instructions on how to set it up. </p>\n<p>For this preview, we are releasing a separate extension that enables debugging in WSL. After installing this extension, you can select a new debug launcher in Python project properties. Now, when you press F5, your project will launch under WSL using the most compatible version of Python available (for example, a project using Python 3.6 will try to launch with <tt>python3.6</tt> and then <tt>python3</tt> before returning an error). </p>\n<p>Once running, the debugger will automatically attach, providing the great experience you are used to getting with local or remote debugging.</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint-1024x624.png\" alt=\"Visual Studio stopped at a breakpoint in Python code running in WSL\" width=\"1024\" height=\"624\"></a></p>\n<p>One known issue is that you may see an error dialog appear as well as the Bash shell, but your project does not start. In most cases, attempting to launch again should succeed, so please try that before reporting a problem. Also note that native code debugging is not supported with WSL, even though the checkbox for it appears.</p>\n<p>You can download the extension from here: <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Wsl.VS2017.vsix\">Microsoft.PythonTools.Wsl.VS2017.vsix</a> (64 kB) </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental extension, and we're releasing it separately because we may change it dramatically when fully integrated into Visual Studio, or we may decide not to integrate it at all. You may need to manually uninstall the extension before installing future Visual Studio updates. While this extension is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This download will only be available for a limited time and is only compatible with Visual Studio 15.4 Preview 1.</p></blockquote>\n<h1>Debug C++ project with Python</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug-300x183.png\" alt=\"Debugging Python hosted in a C++ executable\" width=\"300\" height=\"183\"></a></p>\n<p>If you develop native Python extensions, you are likely familiar with our support for <a href=\"https://docs.microsoft.com/visualstudio/python/debugging-mixed-mode\" target=\"_blank\">mixed C/Python debugging</a>. Currently, you can only enable this on a Python project, which meant that if you were developing a C++ project that <a href=\"https://blogs.msdn.microsoft.com/pythonengineering/2016/04/26/cpython-embeddable-zip-file/\" target=\"_blank\">embeds</a> Python, you could not use it. </p>\n<p>Today we are releasing a standalone extension that adds a new debugging option to C++ projects: Python native debugging. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties-300x168.png\" alt=\"Configuring C++ project properties to launch with Python debugging enabled\" width=\"300\" height=\"168\"></a></p>\n<p>Selecting this debugger for your C++ project will launch with support for viewing Python types and stack frames, giving you the best experience for debugging your application. </p>\n<p>You can download the extension from here: <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix\">Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix</a> (331 kB) </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental extension, and we're releasing it separately because we may change it dramatically when fully integrated into Visual Studio, or we may decide not to integrate it at all. You may need to manually uninstall the extension before installing future Visual Studio updates, and you may require administrative privileges to install and remove it. While this extension is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This download will only be available for a limited time and is only compatible with Visual Studio 15.4 Preview 1.</p></blockquote>\n<h1>Disable the completion database</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense-300x185.png\" alt=\"Completions and documentation for pandas without using a completion DB\" width=\"300\" height=\"185\"></a></p>\n<p>Remember when you installed Anaconda and we made you wait hours before giving you IntelliSense? Yeah, we aren't proud of that. Our IntelliSense is based on some really intense static analysis that infers types for every possible variable, and it takes time to get those results. But in many cases, very simple syntax analysis can provide results that will keep you productive, especially when combined with your own expertise. </p>\n<p>So we've been working on a brand new approach that does not rely on generating a completion DB. This means that when you install a new environment or a new package, we will give you great IntelliSense immediately, without having to run the background process at all.   </p>\n<p>This new approach is very experimental right now, and we are actively working on improving the experience. It is included in the current Visual Studio 2017 Preview but disabled by default. You can tell when it is enabled because the IntelliSense dropdown will be missing from the Python Environments window. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments-300x183.png\" alt=\"Python Environments window before and after disabling the completion DB\" width=\"300\" height=\"183\"></a></p>\n<p>To enable this feature, use registry editor to create a key <tt>HKEY_CURRENT_USERSoftwareMicrosoftPythonToolsExperimental</tt> and add a <tt>DWORD</tt> value named <tt>NoDatabaseFactory</tt> and set its value to 1. Then restart Visual Studio. </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental feature, and we do not recommend enabling it in production environments. While Visual Studio is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This registry key is only compatible with Visual Studio 15.4 Preview 1, and newer versions may have alternate.</p></blockquote>\n<h1>Enjoy</h1>\n<p>As usual, feedback is welcome at our <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a> page, and while we don't recommend using previews in production it is <a href=\"https://www.visualstudio.com/vs/preview/#7fed63a0b27bb7fa0\" target=\"_blank\">easy to install both the current preview and the current release</a> of Visual Studio 2017 on the same machine. </p>\n<p>We hope you enjoy these early previews of our current work. We're excited about a future with better C++ integration and no IntelliSense database, and we hope you are too. Thanks for being a Visual Studio user! </p>","LastUpdateTime":"2017-08-26T04:00:31","Link":"https://blogs.msdn.microsoft.com/pythonengineering/2017/08/25/python-updates-in-visual-studio-15-4-preview-1/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Python updates in Visual Studio 15.4 Preview 1","Type":1,"TitleCn":"在 Visual Studio 15.4 预览 1 Python 更新","Content":"<p>自从我们上次张贴，和我们一直努力工作的新特点为 Python 视觉工作室 2017 年，已经有段时间了。今天下, 一次更新的第一个预览已被释放，你可以从<a href=\"https://visualstudio.com/vs/preview\" target=\"_blank\">visualstudio.com</a>安装或通过更新你现有的预览安装。</p>\n<p>在这篇文章，我们将简要讨论此预览，包括秘密技巧和您将需要启用其中一些独家下载中的新功能。</p>\n<h1>Ctrl + 单击转到定义</h1>\n<p>在新的更新，您应该看到大多数语言在 Visual Studio 中，来到此功能，但我们还是兴奋 Python 是第一个获得它。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver-300x127.png\" alt=\"Ctrl+Click Go To Definition turns identifiers into hyperlinks when you hover over them\" width=\"300\" height=\"127\"></a></p>\n<p>您可能熟悉转到定义功能，通过编辑器上下文菜单或 f12 键的快捷键，但是我们增加了新的方式来使用它。同时按住 Control 键，你有鼠标的标识符会变成超链接，如果它有的定义你可以去。点击项目然后将带你直接去定义。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options-300x203.png\" alt=\"Options dialog showing settings that can be changed for Ctrl+Click Go To Definition\" width=\"300\" height=\"203\"></a></p>\n<div>如果您愿意使用非控制的关键，文本编辑器选项页会让你选择一种替代。您也可以选择\"偷看\"定义，而不是去它，它将打开一个小的编辑器窗口嵌入在当前。</div>\n<p>（不幸的是，它似乎，聚醚醚酮并不适用于在此第一次的预览中的 Python 代码。我们<a href=\"https://github.com/Microsoft/PTVS/issues/2916\" target=\"_blank\">搞定它</a>的预览 2 ！）</p>\n<h1>对于 Linux 调试 Windows 子系统中</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties-300x189.png\" alt=\"Selecting the WSL launcher from a Python project's properties window\" width=\"300\" height=\"189\"></a></p>\n<p><a href=\"https://msdn.microsoft.com/commandline/wsl\" target=\"_blank\">Linux 的 Windows 子系统</a>（荣通证券） 是令人兴奋的新技术，让您在您的 Windows 计算机上使用一个完整的 Linux 发行。这不是一个虚拟机，而类似的方式，在 64 位 Windows 上支持 32 位进程中的一个子系统。有关如何将它设置为指示链接。</p>\n<p>对于这个预览，我们发布启用调试在荣通证券的一个独立扩展。后安装此扩展，您可以选择一个新的调试发射器在 Python 项目属性中。现在，当您按 f5 键，您的项目将推出根据荣通证券使用的 Python 提供最兼容的版本 （例如，使用 Python 3.6 项目将尝试启动<tt>python3.6</tt> ，然后<tt>python3</tt>返回错误之前）。</p>\n<p>一次运行时，调试器将自动连接，提供了大量的经验，你习惯了与本地或远程调试。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint-1024x624.png\" alt=\"Visual Studio stopped at a breakpoint in Python code running in WSL\" width=\"1024\" height=\"624\"></a></p>\n<p>一个已知的问题是，您可能会看到错误对话框出现以及 Bash shell 中，但您的项目不能启动。在大多数情况下，尝试启动再应该成功，这样请尝试，之前报告的问题。此外注意到与 — — WSL，不支持本机代码调试即使它的复选框出现。</p>\n<p>你可以从这里下载扩展： <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Wsl.VS2017.vsix\">Microsoft.PythonTools.Wsl.VS2017.vsix</a> (64 kB)</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的扩展，和我们分开就会发布它，因为我们可能会改变它大大时完全集成到 Visual Studio 中，或者我们可能决定不将它集成在所有。您可能需要手动安装 Visual Studio 的未来更新之前卸载扩展。虽然这个扩展是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此下载只会在有限的时间，只是与 Visual Studio 15.4 预览 1 兼容。</p></blockquote>\n<h1>调试与 Python c + + 项目</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug-300x183.png\" alt=\"Debugging Python hosted in a C++ executable\" width=\"300\" height=\"183\"></a></p>\n<p>如果您开发原生 Python 扩展，你可能已经非常了解我们对<a href=\"https://docs.microsoft.com/visualstudio/python/debugging-mixed-mode\" target=\"_blank\">混合的 C/Python 调试</a>的支持。目前，您只能启用这一个 Python 项目，这就意味着，如果您在开发一个 c + + 项目，<a href=\"https://blogs.msdn.microsoft.com/pythonengineering/2016/04/26/cpython-embeddable-zip-file/\" target=\"_blank\">嵌入</a>Python，你不能使用它。</p>\n<p>今天，我们正在推出一个独立的扩展，将一个新的调试选项添加到 c + + 项目： Python 本机调试。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties-300x168.png\" alt=\"Configuring C++ project properties to launch with Python debugging enabled\" width=\"300\" height=\"168\"></a></p>\n<p>选择此调试器为您的 c + + 项目将推出支持查看 Python 类型和堆栈帧，给你最好的体验为调试您的应用程序。</p>\n<p>你可以从这里下载扩展： <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix\">Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix</a> (331 kB)</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的扩展，和我们分开就会发布它，因为我们可能会改变它大大时完全集成到 Visual Studio 中，或者我们可能决定不将它集成在所有。您可能需要手动卸载扩展安装将来的 Visual Studio 更新之前，您可能需要管理权限才能安装和删除它。虽然这个扩展是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此下载只会在有限的时间，只是与 Visual Studio 15.4 预览 1 兼容。</p></blockquote>\n<h1>禁用完成数据库</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense-300x185.png\" alt=\"Completions and documentation for pandas without using a completion DB\" width=\"300\" height=\"185\"></a></p>\n<p>还记得当你安装水蟒，我们让你等前给你智能感知小时吗？是的我们不是骄傲。我们的智能感知基于一些真的很激烈的静态分析，推断类型为每个可能的变量，和它的时间来获得结果。但在许多情况下，很简单的语法分析可以提供时，会注意你生产，特别是结合自己的专业知识的结果。</p>\n<p>所以我们一直在不依赖于生成完成 DB 的全新方法。这意味着，当你安装一个新的环境或一个新的包，我们将立即给你伟大的智能感知，而不必在所有运行的后台进程。</p>\n<p>现在，这种新方法是非常实验，我们正在积极地改善经验。它是包含在当前的 Visual Studio 2017 预览，但默认情况下禁用。你可以告诉它启用时因为从 Python 环境窗口智能感知下拉列表将会丢失。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments-300x183.png\" alt=\"Python Environments window before and after disabling the completion DB\" width=\"300\" height=\"183\"></a></p>\n<p>若要启用此功能，请使用注册表编辑器创建一个密钥<tt>HKEY_CURRENT_USERSoftwareMicrosoftPythonToolsExperimental</tt>并添加一个<tt>DWORD</tt>值，命名为<tt>NoDatabaseFactory</tt> ，并将其值设置为 1。然后重新启动 Visual Studio。</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的功能，和我们不推荐在生产环境中启用它。虽然 Visual Studio 是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此注册表项仅与视觉工作室 15.4 预览 1，兼容，较新的版本可能有备用。</p></blockquote>\n<h1>享受</h1>\n<p>像往常一样，反馈是在我们<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>页，欢迎和我们不建议在生产中使用预览时很<a href=\"https://www.visualstudio.com/vs/preview/#7fed63a0b27bb7fa0\" target=\"_blank\">容易安装当前预览和当前版本</a>的 Visual Studio 2017 同一台计算机上。</p>\n<p>我们希望你喜欢我们目前的工作这些早期预览。我们对未来有更好的 c + + 集成，没有智能感知数据库，感到兴奋，我们希望你也是。谢谢你的 Visual Studio 用户 ！</p>"},{"Id":85,"Author":"Cesar de la Torre [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-26T00:30:50","Description":"<p><img width=\"2355\" height=\"257\" alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/07/Xamarin-Patterns-Banner.png\"></p>\n<p>As part of the series of posts announced at this initial blog post (<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/26/the-new-net-application-architecture-guidance/\">.NET Application Architecture Guidance</a>) that explores each of the&nbsp;architecture areas currently covered by our team,&nbsp;this current blog post focuses on &ldquo;<strong>Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance</strong>&ldquo;.</p>\n<p>Just as a reminder, the four introductory blog posts of this series are (or will be as of today)&nbsp;the following:&nbsp; <span><br></span></p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/?p=13546\">Microservices and Docker containers: Architecture, Patterns and Development guidance</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/09/web-apps-aspnetcore-architecture-guidance/\">Web Applications with ASP.NET Core Architecture and Patterns guidance</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\">Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance</a></li>\n<li>Production Ready Cloud applications with Azure Architecture guidance</li>\n</ul><p><span><span>There are many issues that must be resolved when creating an enterprise mobile app. These include: </span><span><br></span></span></p>\n<ul><li><span>Deciding how to provide a clean separation of concerns between the user interface controls and their logic. </span></li>\n<li><span>Deciding whether to use a dependency injection container. </span></li>\n<li><span>Choosing how components that are inconvenient to link by object and type references can communicate. </span></li>\n<li><span>Deciding how to navigate between pages, including how to invoke navigation and where navigation logic should reside. </span></li>\n<li><span>Deciding how to validate user input for correctness. The decision must include how to validate user input and how to notify the user about validation errors. </span></li>\n<li><span>Deciding how to perform authentication and how to protect resources with authorization. </span></li>\n<li><span>Deciding how to access remote data from web services, including how to reliably retrieve data and how to cache data. </span></li>\n<li><span>Deciding how to unit test the app.</span><span><br></span></li>\n</ul><h3>Introducing the &lsquo;Enterprise Application Patterns using Xamarin.Forms&rsquo; Guide/eBook</h3>\n<p><span>You can download this eBook that offers guidance on core patterns and architectural guidance for developing Xamarin.Forms enterprise apps that are easier to test, maintain, and evolve. Guidance is provided on how to implement the Model-View-ViewModel (MVVM) pattern, dependency injection, navigation, validation, and configuration management, while maintaining loose coupling. In addition, there&rsquo;s also guidance on performing authentication and authorization with IdentityServer, accessing remote data from containerized microservices, and unit testing.<br></span></p>\n<p><span>Free download:<br></span></p>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>http://aka.ms/XamarinPatternsEbook</span></a><span><br></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp16.png\"><span><br></span></p>\n<p><span>The eBook comes with source code for the <strong>eShopOnContainers Xamarin.Forms mobile app</strong>, which is a mobile app that extends the eShopOnContainers microservice/containers scenario. This mobile app includes the following functionality:<br></span></p>\n<ul><li>Authenticating and authorizing with a backend service.</li>\n<li>Browsing a catalog of shirts, coffee mugs, and other marketing items.</li>\n<li>Filtering the catalog.</li>\n<li>Ordering items from the catalog.</li>\n<li>Viewing the user&rsquo;s order history.</li>\n<li>Configuring settings.</li>\n</ul><h3>Who should use this guide</h3>\n<p><span>We wrote this guide for mobile app developers and solution architects who are new to Xamarin.Forms while looking to learn and adopt proven enterprise architectural/design patterns and best development practices for Xamarin.Forms apps.<br></span></p>\n<h3>Related sample mobile Xamarin.Forms app</h3>\n<p><span><span>The eBook focuses on building cross-platform enterprise apps using Xamarin.Forms and uses the <a href=\"http://aka.ms/MicroservicesArchitecture\">eShopOnContainers mobile app</a> as an example. The following diagram shows the pages from the eShopOnContainers mobile app that provide the functionality outlined earlier: </span><span><br></span></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp17.png\"><span><br></span></p>\n<p><span><span>The mobile app consumes the backend services provided by the containerized microservices. However, it can also be configured to consume data from mock services for those who wish to avoid deploying the backend services and just want purely explorer the Xamarin.Forms mobile app without the hassle of deploying a microservice-based backend. </span><span><br></span></span></p>\n<h3>Wrapping up &ndash; Xamarin.Forms Patterns guidance</h3>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>Enterprise Application Patterns using Xamarin.Forms</span></a><span><span> focuses on core patterns and architectural guidance for developing Xamarin.Forms enterprise apps that are easier to test, maintain, and evolve. Guidance is provided on how to implement MVVM, dependency injection, navigation, validation, and configuration management while maintaining loose coupling. In addition, there&rsquo;s also guidance on performing authentication and authorization with IdentityServer, accessing remote data from containerized microservices, and unit testing.&nbsp;</span></span></p>\n<h3>Visit the .NET Application Architecture Center and grab it all!</h3>\n<p>Remember that this&nbsp;<em>&lsquo;Web Applications with ASP.NET Core Architecture and Patterns guidance&rsquo; </em>explained at this blog post is part of a broader .NET Architecture guidance which covers additional subjects and you can&nbsp;<a href=\"http://dot.net/architecture\">check out at the .NET Application Architecture Center page</a>&nbsp;where you can&nbsp;download the multiple eBooks/Guides and visit the reference applications from there, and of course, feel free to provide feedback by dropping a note below or on the feedback form at the architecture page.</p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp2.png\"></p>\n<p>Happy coding from the .NET team!</p>\n<p>Cesar de la Torre</p>\n<p>.NET&nbsp;Product Group</p>\n<p>Twitter:&nbsp;<a href=\"https://twitter.com/cesardelatorre\">@cesardelatorre</a></p>","LastUpdateTime":"2017-08-26T00:30:50","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","Type":1,"TitleCn":"移动应用程序与 Xamarin.Forms： 体系结构和模式的指导","Content":"<p><img width=\"2355\" height=\"257\" alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/07/Xamarin-Patterns-Banner.png\"></p>\n<p>作为系列文章宣布在这个初始博客帖子 （<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/26/the-new-net-application-architecture-guidance/\">.NET 应用程序体系结构指导</a>），探讨了目前我们的团队所涵盖的建筑领域的一部分，这个当前的博客文章侧重于\"<strong>与 Xamarin.Forms 的移动应用程序： 体系结构和模式指导</strong>\"。</p>\n<p>只是作为一个提醒，这一系列的四个介绍性博客 （或者将从今天起） 以下：<span><br></span></p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/?p=13546\">Microservices 和码头集装箱： 体系结构、 模式和发展指导</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/09/web-apps-aspnetcore-architecture-guidance/\">Web 应用程序的 ASP.NET 核心体系结构和模式的指导</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\">移动应用程序与 Xamarin.Forms： 体系结构和模式的指导</a></li>\n<li>生产准备好了云应用程序与 Azure 体系结构指导</li>\n</ul><p><span><span>有创建企业移动应用程序时必须解决的许多问题。这些措施包括：</span><span><br></span></span></p>\n<ul><li><span>决定如何提供干净的用户界面控件和它们的逻辑关系上的分离。</span></li>\n<li><span>决定是否使用依赖注入容器。</span></li>\n<li><span>选择如何沟通不便要链接的对象和类型引用的组件。</span></li>\n<li><span>决定如何导航之间的页面，包括如何调用导航和导航逻辑应存放。</span></li>\n<li><span>决定如何验证用户输入的正确性。这一决定必须包括如何验证用户输入以及如何通知用户有关验证错误。</span></li>\n<li><span>决定如何执行身份验证，以及如何保护资源与授权。</span></li>\n<li><span>决定如何从 web 访问远程数据服务，包括如何可靠地检索数据以及如何缓存数据。</span></li>\n<li><span>决定如何向单元测试应用程序。</span><span><br></span></li>\n</ul><h3>引入企业应用程序模式使用 Xamarin.Forms' 指南/电子书</h3>\n<p><span>您可以下载这本电子书，提供指导意见的核心模式和建筑指导发展 Xamarin.Forms 企业应用程序，更易于测试、 维护和发展。提供了有关如何实现模型-视图-模型 (MVVM) 模式、 依赖注入、 导航、 验证和配置管理，同时保持松散耦合的指导。此外，还指导上有执行身份验证和授权与 IdentityServer，从集装箱的 microservices 和单元测试访问远程数据。<br></span></p>\n<p><span>免费下载：<br></span></p>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>http://aka.ms/XamarinPatternsEbook</span></a><span><br></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp16.png\"><span><br></span></p>\n<p><span>电子书带有源代码为<strong>eShopOnContainers Xamarin.Forms 的手机应用程序</strong>，这是一个扩展 eShopOnContainers microservice/容器场景的移动应用程序。这手机的应用程序包括以下功能：<br></span></p>\n<ul><li>身份验证和授权与后端服务。</li>\n<li>浏览目录的衬衫，咖啡杯和其他营销项目。</li>\n<li>筛选目录。</li>\n<li>订购目录中的项目。</li>\n<li>查看用户的订单历史记录。</li>\n<li>配置设置。</li>\n</ul><h3>谁应该使用本指南</h3>\n<p><span>我们写了本指南为移动应用程序开发人员和解决方案架构师，是新的 Xamarin.Forms 一边寻找学习和采用经验证的企业建筑/设计模式和 Xamarin.Forms 应用程序开发的最佳做法。<br></span></p>\n<h3>相关的示例移动的 Xamarin.Forms 应用程序</h3>\n<p><span><span>电子书可以致力于构建跨平台企业应用程序在使用 Xamarin.Forms 和使用<a href=\"http://aka.ms/MicroservicesArchitecture\">eShopOnContainers 的手机应用程序</a>为例。下面的关系图显示的页面从 eShopOnContainers 移动应用程序提供功能较早时提出：</span><span><br></span></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp17.png\"><span><br></span></p>\n<p><span><span>移动应用程序消耗集装箱 microservices 所提供的后端服务。然而，它也可以配置为使用 mock 服务为那些想要避免部署后端服务的数据，只是想纯粹是资源管理器中 Xamarin.Forms 移动应用程序的部署一个基于 microservice 的后端，免去。</span><span><br></span></span></p>\n<h3>结束了 — — Xamarin.Forms 模式指导</h3>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>企业应用程序模式使用 Xamarin.Forms</span></a><span><span>重点的核心模式和建筑指导发展 Xamarin.Forms 企业应用程序，更易于测试、 维护和发展。提供了有关如何实现 MVVM、 依赖注入、 导航、 验证和配置管理，同时保持松散耦合的指导。此外，还指导上有执行身份验证和授权与 IdentityServer，从集装箱的 microservices 和单元测试访问远程数据。</span></span></p>\n<h3>访问.NET 应用程序体系结构中心，并抓住它所有 ！</h3>\n<p>记得这<em>'Web 应用程序与 ASP.NET 核心体系结构和模式指导'</em>解释在这篇博客是一部分的更广泛的.NET 体系结构指导，涵盖更多的议题，你可以<a href=\"http://dot.net/architecture\">查阅在.NET 应用程序体系结构中心页面</a>在哪里可以下载多个电子书或指南和访问参考应用程序从那里，当然，随时提供反馈通过删除下面的注释或反馈窗体在体系结构页上。</p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp2.png\"></p>\n<p>快乐的编码从.NET 团队 ！</p>\n<p>塞萨尔 · 德拉托雷</p>\n<p>.NET 产品组</p>\n<p>推特： <a href=\"https://twitter.com/cesardelatorre\">@cesardelatorre</a></p>"},{"Id":86,"Author":"Guest Blogger","Categories":"Revolutions","CreateTime":"2017-08-25T00:14:10","Description":"<p><em>by <a href=\"https://www.linkedin.com/in/b%C5%82a%C5%BCej-moska-9a316113a/\">B&#322;a&#380;ej Moska</a>, computer science student and data science intern</em>&nbsp;</p>\n<p>Suppose that we have performed clustering K-means clustering in R and are satisfied with our results, but later we realize that it would also be useful to have a membership matrix. Of course it would be easier to repeat clustering using one of the fuzzy kmeans functions available in R (like <a href=\"https://www.rdocumentation.org/packages/cluster/versions/2.0.6/topics/fanny\"><code>fanny</code></a>, for example), but since it is slightly different implementation the results could also be different and for some reasons we don&rsquo;t want them to be changed. Knowing the equation we can construct this matrix on our own, after using the <a href=\"https://www.rdocumentation.org/packages/stats/versions/3.4.1/topics/kmeans\"><code>kmeans</code></a> function. The equation is defined as follows (source: <a href=\"https://en.wikipedia.org/wiki/Fuzzy_clustering\">Wikipedia</a>):</p>\n<p>$$w_{ij} = frac{1}{ sum_ {k=1}^c ( frac{ | x_{i} - c_{j} | }{ | x_{i} - c_{k} | }) ^{ frac{2}{m-1} } } $$</p>\n<p>(w_{ij}) denotes to what extent the (i)th object belongs to the (j)th cluster. So the total number of rows of this matrix equals number of observation and total number of columns equals number of variables included in clustering. (m) is a parameter, typically set to (m=2). (w_{ij}) values range between 0 and 1 so they are easy and convenient to compare. In this example I will use (m = 2) so the Euclidean distance will be calculated.</p>\n<p>To make computations faster I also used the&nbsp;<a href=\"http://adv-r.had.co.nz/Rcpp.html\">Rcpp package</a>, then I compared speed of execution of function written in R with this written in C++.</p>\n<p>In implementations <code>for</code> loops were used, although it is not a commonly used method in R (see <a href=\"http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html\">this blog post</a> for more information and alternatives), but in this case I find it more convenient.</p>\n<h3>Rcpp (C++ version)</h3>\n<div>\n<pre><span>#include &lt;Rcpp.h&gt;</span>\n<span>#include &lt;math.h&gt;</span>\n<span>using</span> <span>namespace</span> Rcpp;\n\n<span>// [[Rcpp::export]]</span>\nNumericMatrix <span>fuzzyClustering</span>(NumericMatrix data, NumericMatrix centers, <span>int</span> m) {  \n<span>/* data is a matrix with observations(rows) and variables, </span>\n<span>   centers is a matrix with cluster centers coordinates, </span>\n<span>   m is a parameter of equation, c is a number of clusters</span>\n<span>*/</span>\n  \n  <span>int</span> c<span>=</span>centers.rows();\n  <span>int</span> rows <span>=</span> data.rows();\n  <span>int</span> cols <span>=</span> data.cols(); <span>/*number of columns equals number of variables, the same as is in centers matrix*/</span>\n  <span>double</span> tempDist<span>=</span><span>0</span>;        <span>/*dist and tempDist are variables storing temporary euclidean distances */</span>\n  <span>double</span> dist<span>=</span><span>0</span>;      \n  <span>double</span> denominator<span>=</span><span>0</span>;    <span>//denominator of &ldquo;main&rdquo; equation</span>\n  \n  NumericMatrix result(rows,c);    <span>//declaration of matrix of results</span>\n  \n  <span>for</span>(<span>int</span> i<span>=</span><span>0</span>;i<span>&lt;</span>rows;i<span>++</span>){\n    <span>for</span>(<span>int</span> j<span>=</span><span>0</span>;j<span>&lt;</span>c;j<span>++</span>){\n      <span>for</span>(<span>int</span> k<span>=</span><span>0</span>;k<span>&lt;</span>c;k<span>++</span>){\n        <span>for</span>(<span>int</span> p<span>=</span><span>0</span>;p<span>&lt;</span>cols;p<span>++</span>){\n          tempDist <span>=</span> tempDist<span>+</span>pow(centers(j,p)<span>-</span>data(i,p),<span>2</span>);      \n         <span>//in innermost loop an euclidean distance is calculated.</span>\n          dist <span>=</span> dist <span>+</span> pow(centers(k,p)<span>-</span>data(i,p),<span>2</span>);              \n<span>/*tempDist is nominator inside the sum operator in the equation, dist is the denominator inside the sum operator in the equation*/</span>\n        }\n        tempDist <span>=</span> sqrt(tempDist);\n        dist <span>=</span> sqrt(dist);\n        denominator <span>=</span> denominator<span>+</span>pow((tempDist<span>/</span>dist),(<span>2</span><span>/</span>(m<span>-</span><span>1</span>)));\n        tempDist <span>=</span> <span>0</span>;\n        dist <span>=</span> <span>0</span>;\n      }\n      result(i,j) <span>=</span> <span>1</span><span>/</span>denominator;    \n<span>// nominator/denominator in the  main equation</span>\n      denominator <span>=</span> <span>0</span>;                           \n    }\n  }\n  <span>return</span> result;\n}\n</pre>\n</div>\n<p>We can save this in a file with .cpp extension. To compile it from R we can write:</p>\n<pre>sourceCpp(\"path_to_cpp_file\")\n</pre>\n<p>If everything goes right our function <code>fuzzyClustering</code> will then be available from R.</p>\n<h3>R version</h3>\n<div>\n<pre>fuzzyClustering<span>=</span><span>function</span>(data,centers,m){\n\n  c <span>&lt;-</span> nrow(centers)\n  rows <span>&lt;-</span> nrow(data)\n  cols <span>&lt;-</span> ncol(data)\n  result <span>&lt;-</span> matrix(<span>0</span>,nrow<span>=</span>rows,ncol<span>=</span>c)  <span>#defining membership matrix</span>\n  denominator <span>&lt;-</span> <span>0</span>\n  \n  <span>for</span>(i <span>in</span> <span>1</span><span>:</span>rows){\n    <span>for</span>(j <span>in</span> <span>1</span><span>:</span>c){\n      tempDist <span>&lt;-</span> sqrt(sum((centers[j,]<span>-</span>data[i,])<span>^</span><span>2</span>))  <span>#euclidean distance, nominator inside a sum operator </span>\n      <span>for</span>(k <span>in</span> <span>1</span><span>:</span>c){\n        Dist <span>&lt;-</span> sqrt(sum((centers[k,]<span>-</span>data[i,])<span>^</span><span>2</span>))    <span>#euclidean distance, denominator inside a sum operator </span>\n        denominator <span>&lt;-</span> denominator <span>+</span>((tempDist<span>/</span>Dist)<span>^</span>(<span>2</span><span>/</span>(m<span>-1</span>))) <span>#denominator of an equation </span>\n      }    \n      result[i,j] <span>&lt;-</span> <span>1</span><span>/</span>denominator    <span>#inserting value into membership matrix</span>\n      denominator <span>&lt;-</span> <span>0</span>           \n    }\n  }\n  <span>return</span>(result);\n}\n</pre>\n</div>\n<p>Result looks as follows. Columns are cluster numbers (in this case 10 clusters were created), rows are our objects (observations). Values were rounded to the third decimal place, so the sums of rows can be slightly different than 1:</p>\n<pre>          1     2     3     4     5     6     7     8     9    10  \n [1,] 0.063 0.038 0.304 0.116 0.098 0.039 0.025 0.104 0.025 0.188  \n [2,] 0.109 0.028 0.116 0.221 0.229 0.080 0.035 0.116 0.017 0.051  \n [3,] 0.067 0.037 0.348 0.173 0.104 0.066 0.031 0.095 0.018 0.062  \n [4,] 0.016 0.015 0.811 0.049 0.022 0.017 0.009 0.023 0.007 0.031  \n [5,] 0.063 0.048 0.328 0.169 0.083 0.126 0.041 0.079 0.018 0.045  \n [6,] 0.069 0.039 0.266 0.226 0.102 0.111 0.037 0.084 0.017 0.048  \n [7,] 0.045 0.039 0.569 0.083 0.060 0.046 0.025 0.071 0.015 0.046  \n [8,] 0.070 0.052 0.399 0.091 0.093 0.054 0.034 0.125 0.022 0.062  \n [9,] 0.095 0.037 0.198 0.192 0.157 0.088 0.038 0.121 0.019 0.055 \n[10,] 0.072 0.024 0.132 0.375 0.148 0.059 0.025 0.081 0.015 0.067\n</pre>\n<h3>Performance comparison</h3>\n<p>Shown below is the output of <code>Sys.time</code> for the C++ and R versions, running against a&nbsp;simulated matrix with 30000 observations, 3 variables and 10 clusters. <br>The hardware I used was a low-cost notebook Asus R556L with Intel Core i3-5010 2.1 GHz processor and 8 GB DDR3 1600 MHz RAM memory.</p>\n<p>C++ version:</p>\n<pre>  user    system  elapsed\n  0.32    0.00    0.33 \n</pre>\n<p>R version:</p>\n<pre>  user    system  elapsed\n  15.75    0.02     15.94 <br></pre>\n<p>In this example, the function written in C++ executed about 50 times faster than the equivalent function written in pure R.</p>","LastUpdateTime":"2017-08-25T00:14:10","Link":"http://blog.revolutionanalytics.com/2017/08/kmeans-r-rcpp.html","MobileContent":null,"PublishId":0,"Status":1,"Title":"Calculating a fuzzy kmeans membership matrix with R and Rcpp","Type":1,"TitleCn":"计算 R 与 Rcpp kmeans 模糊隶属度矩阵","Content":"<p><em>由<a href=\"https://www.linkedin.com/in/b%C5%82a%C5%BCej-moska-9a316113a/\">Błażej 沦为</a>，计算机科学专业的学生和数据科学实习生</em></p>\n<p>假设，我们进行聚类 K-均值聚类在 R 和满意与我们的结果，但后来我们意识到，它也是有用的隶属度矩阵。当然它会容易重复聚类使用 R 中可用的模糊均值比率函数之一 (像<a href=\"https://www.rdocumentation.org/packages/cluster/versions/2.0.6/topics/fanny\"> <code>fanny</code> </a>，举个例子)，但由于它是略有不同的实现结果也可能不同，因为某些原因，我们不希望它们发生更改。知道该方程我们可以构造这个矩阵对我们自己，之后使用<a href=\"https://www.rdocumentation.org/packages/stats/versions/3.4.1/topics/kmeans\"> <code>kmeans</code> </a>函数。方程的定义如下 (来源：<a href=\"https://en.wikipedia.org/wiki/Fuzzy_clustering\">维基百科</a>):</p>\n<p>$$ w_ {ij} = 压裂 {1} {sum_ {k = 1} ^ c (压裂 {| x_ {i}-c_ {j} |}{| x_ {i}-c_ {k} |})^ {压裂 {2} {m-1}}} $$</p>\n<p>(w_ {ij}) 表示到什么程度 (i) th 对象属于 (j) th 群集。所以这个矩阵行的总数等于观察数和总数目列等于包括聚类中的变量。(m) 是一个参数，通常设置为 (m = 2)。(w_ {ij}) 值介于 0 和 1，所以他们很容易和方便比较。在此示例中将 (m = 2) 因此将计算欧氏距离。</p>\n<p>为了使计算速度更快，也使用<a href=\"http://adv-r.had.co.nz/Rcpp.html\">Rcpp 软件包</a>，然后我比较在 R 用这个写在 c + + 编写的函数的执行速度。</p>\n<p>在实现 <code>for</code> 循环使用了，虽然它不是常用的方法，在 R （请看<a href=\"http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html\">这篇博客</a>更多的信息和备选方案），但是在这种情况下我发现它更方便。</p>\n<h3>Rcpp （c + + 版本）</h3>\n<div>\n<pre><span>#include &lt; Rcpp.h &gt;</span>\n<span>#include 就是 &lt; math.h &gt;</span>\n<span>使用</span><span>命名空间</span>Rcpp;\n\n<span>/ / [[Rcpp::export]]</span>\n<span>fuzzyClustering</span><span>int</span> m) {  \n<span></span>\n<span>   </span>\n<span>   m 是方程参数，c 是簇数目</span>\n<span>* /</span>\n  \n  <span>int</span> c<span>=</span>centers.rows();\n  <span>int</span><span>=</span> data.rows();\n  <span>int</span><span>=</span><span>/ * 列等于数的变量，一样是在中心矩阵 * /</span>\n  <span>双</span>tempDist<span>=</span><span>0</span>;        <span>/ * dist 和 tempDist 是变量存储临时的欧几里得距离 * /</span>\n  <span>双</span>dist<span>=</span><span>0</span>;      \n  <span>双</span>分母<span>=</span><span>0</span>;    <span>\"主要\"方程 //denominator</span>\n  \n  NumericMatrix result(rows,c);    <span>矩阵的结果 //declaration</span>\n  \n  <span>为</span>(<span>int</span> i<span>=</span><span>0</span>; i<span>&lt;</span>行; 我<span>+ +</span>){\n    <span>为</span>（<span>int</span> j<span>=</span><span>0</span>; j<span>&lt;</span>c; j<span>+ +</span>） {\n      <span>为</span>（<span>int</span> k<span>=</span><span>0</span>; k<span>&lt;</span>c; k<span>+ +</span>） {\n        <span>为</span>（<span>int</span> <span>=</span>p<span>0</span>; p<span>&lt;</span>cols; p<span>+ +</span>） {\n          <span>=</span> tempDist<span>+</span>pow(centers(j,p)<span>-</span>data(i,p)，<span>2</span>);      \n         <span>//in 内层循环计算欧氏距离。</span>\n          <span>=</span><span>+</span> pow(centers(k,p)<span>-</span>data(i,p)，<span>2</span>);              \n<span>/ * tempDist 是提名人里面求和算子方程中，dist 是分母内 sum 运算符在方程 * /</span>\n        }\n        <span>=</span> sqrt(tempDist);\n        <span>=</span> sqrt(dist);\n        <span>=</span>分母<span>+</span>战俘 ((tempDist<span>/</span>dist)，(<span>2</span><span>/</span>(<span>-</span>m<span>1</span>)));\n        <span>=</span><span>0</span>;\n        <span>=</span><span>0</span>;\n      }\n      <span>=</span><span>1</span><span>/</span>分母;    \n<span>/ / 提名人或分母在  主要方程</span>\n      <span>=</span><span>0</span>;                           \n    }\n  }\n  <span>返回</span>的结果;\n}\n</pre>\n</div>\n<p>我们可以将它保存在.cpp 扩展名的文件。若要编译它从 R 我们可以编写：</p>\n<pre>sourceCpp(\"path_to_cpp_file\")\n</pre>\n<p>如果一切顺利我们的函数 <code>fuzzyClustering</code> 然后可从。</p>\n<h3>R 版本</h3>\n<div>\n<pre>fuzzyClustering<span>=</span><span>function</span>(data,centers,m){\n\n  <span>&lt;-</span> nrow(centers)\n  <span>&lt;-</span> nrow(data)\n  <span>&lt;-</span> ncol(data)\n  <span>&lt;-</span> matrix(<span>0</span>,nrow<span>=</span>rows,ncol<span>=</span>c)  <span>#defining membership matrix</span>\n  <span>&lt;-</span><span>0</span>\n  \n  <span>for</span><span>in</span><span>1</span><span>:</span>rows){\n    <span>for</span><span>in</span><span>1</span><span>:</span>c){\n      <span>&lt;-</span> sqrt(sum((centers[j,]<span>-</span>data[i,])<span>^</span><span>2</span>))  <span></span>\n      <span>for</span><span>in</span><span>1</span><span>:</span>c){\n        <span>&lt;-</span> sqrt(sum((centers[k,]<span>-</span>data[i,])<span>^</span><span>2</span>))    <span></span>\n        <span>&lt;-</span><span>+</span>((tempDist<span>/</span>Dist)<span>^</span>(<span>2</span><span>/</span>(m<span>-1</span><span> </span>\n      }    \n      <span>&lt;-</span><span>1</span><span>/</span>分母    <span>#inserting 值到隶属度矩阵</span>\n      <span>&lt;-</span><span>0</span>           \n    }\n  }\n  <span>返回</span>（结果）;\n}\n</pre>\n</div>\n<p>结果如下所示。列是的群集数量 （在这种情况下 10 集群创建），行是我们的对象 （意见）。值被舍入到小数第三位，所以行的款项可以比 1 略有不同：</p>\n<pre>          1     2     3     4     5     6     7     8     9    10  \n [1，] 0.063 0.038 0.304 0.116 0.098 0.039 0.025 0.104 0.025 0.188  \n [2，] 0.109 0.028 0.116 0.221 0.229 0.080 0.035 0.116 0.017 为 0.051  \n [3，] 0.067 0.037 0.348 0.173 0.104 0.066 天文 0.031 0.095 0.018 0.062 个  \n [4，] 0.016 0.015 0.811 0.049 0.022 0.017 0.009 0.023 0.007 0.031  \n [5，] 0.063 0.048 0.328 0.169 0.083 0.126 0.041 0.079 0.018 0.045  \n [6，] 0.069 0.039 0.266 0.226 0.102 0.111 0.037 0.084 0.017 0.048  \n [7，] 0.045 0.039 0.569 0.083 0.060 0.046 0.025 0.071 0.015 0.046  \n [8，] 0.070 0.052 0.399 0.091 0.093 按 0.054 0.034 0.125 0.022 0.062 个  \n [9，] 0.095 0.037 0.198 0.192 0.157 0.088 0.038 0.121 0.019 0.055 \n[10，] 0.072 0.024 0.132 0.375 0.148 0.059 0.025 0.081 0.015 0.067\n</pre>\n<h3>性能比较</h3>\n<p>如下图所示是输出的 <code>Sys.time</code> c + + 和 R 版本，针对一个模拟矩阵与 30000 意见、 3 个变量和 10 集群运行。<br>我使用的硬件是一个低成本笔记本 Asus R556L 与英特尔酷睿 i3 5010 2.1 GHz 处理器和 8 GB DDR3 1600 MHz 内存。</p>\n<p>C + + 版本：</p>\n<pre>  用户    系统  经过\n  0.32    0.00    0.33 \n</pre>\n<p>R 版本：</p>\n<pre>  用户    系统  经过\n  15.75    0.02     <br></pre>\n<p>在此示例中，函数写在 c + + 编写的纯 R.等效函数比快执行约 50 倍</p>"},{"Id":87,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-08-24T15:34:55","Description":"Having executed a test &ndash; at a minimum &ndash; we want to know the outcome. But beyond that, we may want to know more. Data collectors and loggers are the key extension mechanisms intended to provide this and other such details for rich reporting. Data collectors and loggers generate information based on listening to events... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/\"> Read More</a>","LastUpdateTime":"2017-08-24T15:34:55","Link":"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Visual Studio Test Platform – upcoming changes to data collectors","Type":1,"TitleCn":"视觉工作室测试平台 — — 即将更改为数据收集器","Content":"在执行测试 — — 至少 — — 我们想要知道结果。但除此之外，我们可能想要知道更多。数据收集器和记录器是旨在为这和其他此类细节丰富报告的关键扩展机制。数据收集器和记录器生成基于侦听事件信息...<a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/\">阅读更多</a>"},{"Id":63,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-24T02:00:20","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%202017%20Version%2015.4%20Preview\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>I&rsquo;m happy to announce that the first Preview of Visual Studio 2017 version 15.4 is now available! You can either <a href=\"https://www.visualstudio.com/vs/preview/\">download it from here</a>, or if you already have Preview installed, you&rsquo;ll receive a notification that the update is available. This latest Preview contains new tools and features in several key workloads such as Universal Windows Platform (UWP) development, .NET desktop development, and Mobile and Game development. It also continues our drive to improve and polish the fundamentals such as productivity and reliability and address customer-reported bugs. Read the feature highlight summary below, and check out the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">Visual Studio 2017 version 15.4 Preview Release notes</a> for a detailed description of the new functionality contained in this Preview.</p>\n<h2>Universal Windows Platform Development &ndash; Windows Fall Creators Update</h2>\n<p>First, Visual Studio 2017 version 15.4 brings first class support for UWP developers targeting the upcoming Windows Fall Creators Update. To start building apps against this new Windows update, first, make sure you are enrolled in the <a href=\"https://insider.windows.com/en-us/\">Windows Insider Program</a>. Once you are enrolled, install the latest pre-release version of the <a href=\"https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK\">Windows Insider Preview SDK</a>.</p>\n<h3>.NET Standard 2.0 Support</h3>\n<p>With the release of the Windows Fall Creators Update, you will be able to leverage the power of <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET Standard 2.0</a> when building UWP applications. .NET Standard 2.0 brings an additional 20,000+ .NET APIs to Windows 10 UWP developers &ndash; many of which will be familiar to Windows Desktop (WPF, Windows Forms, etc&hellip;) developers. .NET Standard 2.0 also allows for easier sharing of code between various .NET project types as project-to-project references, or as NuGet packages. We are starting to see a variety of NuGet packages show up on NuGet.org with support for .NET Standard 2.0, all of which will be available for consumption inside UWP projects.</p>\n<p>To build UWP apps using the new .NET Standard 2.0 APIs, make sure you have the Windows Fall Creators Update Insider SDK Preview installed, and set the <b>minimum</b> version of your project to this version of the SDK.</p>\n<h3>Windows Application Packaging Project</h3>\n<p>In Visual Studio 2017 version 15.4 Preview, you will get the first peek at a <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">new project template</a> that enables Classic Windows Desktop apps created with .NET or C++ to be packaged inside an .appx package for easier distribution via side-loading or submission to the Windows Store. These templates work for both new Classic Windows Desktop projects, as well as for existing projects.</p>\n<h3>XAML Edit &amp; Continue Improvements</h3>\n<p>You can edit or remove XAML resources using XAML Edit &amp; Continue. In addition, you can also add ControlTemplates to your XAML while using XAML Edit &amp; Continue. To leverage these new features, make sure you are running the Windows Fall Creators Update Preview.</p>\n<h2>Mobile and Game Development</h2>\n<h3>Unity</h3>\n<p>In Visual Studio 2017 version 15.4 Preview we have made improvements and bugfixes in the tooling for Unity. There is better support for the latest released Unity 2017.1 runtime. This Preview also supports <a href=\"https://forum.unity3d.com/threads/example-project-assembly-definition-files.482313/\">user-defined managed assemblies</a>, a feature coming in Unity 2017.2 that helps to drastically minimize script compilation times of projects. To help with debugging, you can now &ldquo;Set Instruction Pointer&rdquo;, which allows you to which moves the execution point and sets the next statement of code to be executed.</p>\n<h3>Xamarin</h3>\n<p>The <a href=\"https://www.xamarin.com/live\">Xamarin Live Player</a> is also included in Visual Studio 2017 version 15.4 Preview. This enables developers to develop, test, and debug mobile apps directly on their iOS and Android devices using only Visual Studio and a device. It&rsquo;s meant to simplify getting started with mobile development. For instructions on how to try it out, please refer to the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">Preview Release Notes</a> and, of course, please <a href=\"https://developercommunity.visualstudio.com/\">tell us what you think</a>!</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image0011.gif\"><img width=\"800\" height=\"486\" title=\"Xamarin Live Player\" alt=\"Xamarin Live Player\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image001_thumb1.gif\"></a></p>\n<h2>The Fundamentals</h2>\n<h3>Installer Behavior and Acquisition Experience.</h3>\n<p>Visual Studio 2017 version 15.4 Preview contains some notable install experience improvements. For example, if you encounter any installation errors, we now provide better assistance in discovering solutions. If some component fails to install and someone else had already reported a similar issue, then the installer error message will link back to the <a href=\"https://developercommunity.visualstudio.com/spaces/8/index.html\">Visual Studio Developer Community</a> and point you to info that should help you diagnose and resolve the problem.</p>\n<h3>Productivity Improvements</h3>\n<p>There are a handful of new productivity features that will help you be more efficient and effective as you develop your code. For example, with this Preview, if you&rsquo;re a C#, VB, or Python developer, you can navigate around your project faster because Ctrl+Click will now Go To Definition. We&rsquo;ve continued to improve performance and memory usage as compared to earlier releases. Lastly, we&rsquo;ve refined <a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/03/09/live-unit-testing-in-visual-studio-2017-enterprise/\">Live Unit Testing</a> by making it easier to initiate with a start command in the right click context menu as well as in the Team Explorer window. Live Unit Testing is better integrated with MSTest for use in manual mode. <b></b></p>\n<h3>C++ Development</h3>\n<p>You can now use <a href=\"https://aka.ms/vslinuxcmake\">CMake for Linux C++ development in Visual Studio</a>, which allows you to use CMake based projects that target Windows, Linux, or both. Simply open a folder with your CMake project, select Linux as your target and upon connecting to your Linux machine your sources are synchronized for you. Once the CMake cache generation is complete you&rsquo;ll have full IntelliSense for your project and targets for building, running and debugging within Visual Studio.</p>\n<p>In addition to CMake support for Linux C++ development, with Visual Studio 2017 version 15.4 Preview you can now benefit from CMake version 3.9 and improved support for projects with multiple CMakeLists.</p>\n<h2>Data Science Tooling</h2>\n<p>If you&rsquo;re a Data Scientist using R, we&rsquo;ve added some great new features to Visual Studio 2017 version 15.4 Preview. Now you can use the full power of Visual Studio to connect to an R session running on a remote computer that is running on Linux or Windows. We support running against on-premise and cloud (Azure) computers as well. In the IDE, we&rsquo;ve added error squiggles (inline underlines) that will highlight places where you can improve your R code. Finally, we&rsquo;ve added Live RMarkdown editing, which gives you a live preview of your markdown edits as you<i> </i>type.</p>\n<h2>Try it out today!</h2>\n<p>If you&rsquo;re not familiar with Visual Studio Previews, take a moment to read the <a href=\"https://www.visualstudio.com/en-us/productinfo/vs2017-release-rhythm\">Visual Studio 2017 Release Rhythm</a>. Remember that Visual Studio 2017 Previews will install <em>side by side</em> with released bits, so they should not impact your machine. Previews provide an opportunity for you to receive fixes faster and try out upcoming functionality before it becomes mainstream. Similarly, the Previews enable the Visual Studio Engineering team to validate usage, incorporate suggestions, and detect flaws earlier in the development process. We are highly responsive to feedback coming in through the Previews and look forward to hearing from you.</p>\n<p>Please <a href=\"https://www.visualstudio.com/vs/preview/\">Install the Visual Studio 2017 Preview today</a>, exercise your favorite workloads, and tell us what you think. You can report issues or send feedback to us via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Report a Problem in the IDE</a> or you can share a suggestion on <a href=\"https://visualstudio.uservoice.com/forums/121579\">UserVoice</a>. You can also track your bugs, learn from others, and receive helpful information on the <a href=\"https://developercommunity.visualstudio.com/\">developer community portal</a>.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"357\" height=\"410\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Christine-Ruana-e1498715608219.jpg\"></td>\n<td valign=\"top\" width=\"450\"><strong>Christine Ruana</strong>, Principal Program Manager, Visual Studio\n<p>Christine is on the Visual Studio release engineering team and is responsible for making Visual Studio releases available to our customers around the world.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-24T02:00:20","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/23/visual-studio-2017-version-15-4-preview/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Visual Studio 2017 Version 15.4 Preview","Type":1,"TitleCn":"视觉工作室 2017年版本 15.4 预览","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%202017%20Version%2015.4%20Preview\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>我很高兴地宣布，第一个预览的视觉工作室 2017 15.4 版本现已可用 ！您可以<a href=\"https://www.visualstudio.com/vs/preview/\">下载它从这里</a>要么，或如果您已经安装的预览，您会收到通知有可用的更新。这个新的预览包含新的工具和功能在几个关键工作量普遍 Windows 平台 (UWP) 发展、.NET 桌面开发，和手机和游戏开发等。它还继续我们的驱动器，以改善和提高生产力和可靠性和地址客户报告的 bug 等基本面。阅读功能突出显示摘要如下，并检查了<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">视觉工作室 2017年版本 15.4 预览发行说明</a>的详细说明，此预览中包含的新功能。</p>\n<h2>通用的 Windows 平台开发 — — Windows 下跌创作者更新</h2>\n<p>第一，视觉工作室 2017 版本 15.4 UWP 开发人员针对即将到来的 Windows 秋天创作者更新带来第一类的支持。要开始构建应用程序对此新的 Windows 更新，首先，请确保您注册的<a href=\"https://insider.windows.com/en-us/\">Windows 内幕交易程序</a>。一旦你被录取，安装最新的预发布版本的<a href=\"https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK\">Windows 内幕预览 SDK</a>。</p>\n<h3>.NET 标准 2.0 支持</h3>\n<p>随着 Windows 秋天创作者更新的发布，您将能够利用<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET 标准 2.0</a>的力量，构建 UWP 应用程序时。.NET 2.0 标准 Windows 10 UWP 开发人员 — — 其中许多将熟悉的 Windows 桌面 （WPF 中，Windows 窗体，等等） 开发人员带来了 20000 多.NET Api。.NET 标准 2.0 还允许各种.NET 项目类型作为项目到项目的引用，或作为 NuGet 程序包之间的代码共享更加方便。我们开始看到各种各样 NuGet 程序包的显示在 NuGet.org 与.NET 2.0 标准，支持所有的一切都将供 UWP 项目内部消费。</p>\n<p>若要生成 UWP 应用程序在使用新的.NET 标准 2.0 Api，确保你有 Windows 秋天创作者更新内幕 SDK 预览安装，并将您的项目的<b>最低</b>版本设置为此版本的 SDK。</p>\n<h3>Windows 应用程序包装项目</h3>\n<p>在 Visual Studio 2017 年版本 15.4 预览，你会得到第一的聚醚醚酮在启用经典 Windows 桌面应用程序使用.NET 或 c + + 包装简化分发通过侧加载或提交到 Windows 应用商店.appx 包内创建<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">新的项目模板</a>。这些模板致力为这两个新的经典 Windows 桌面项目，以及现有的项目。</p>\n<h3>XAML 编辑和继续改善</h3>\n<p>您可以编辑或删除 XAML 资源使用 XAML 编辑和继续。此外，您还可以添加 ControlTemplates 您的 xaml 同时使用 XAML 编辑和继续。要利用这些新的功能，请确保您正在运行 Windows 秋天创作者更新预览。</p>\n<h2>移动和游戏开发</h2>\n<h3>团结</h3>\n<p>在 Visual Studio 2017 年版本 15.4 预览在统一的工具而进行了改进和错误修正。还有更好的最新公布的统一 2017.1年运行时支持。此预览还支持<a href=\"https://forum.unity3d.com/threads/example-project-assembly-definition-files.482313/\">用户定义的托管程序集</a>，有助于大幅减少项目脚本编译时间的统一 2017.2年进来的功能。为了帮助调试，您可以现在\"设置指令指针\"，它允许你到哪移动执行点和设置要执行的代码的下一个语句。</p>\n<h3>Xamarin</h3>\n<p><a href=\"https://www.xamarin.com/live\">Xamarin 住球员</a>还包括在 Visual Studio 2017 年版本 15.4 预览。这使开发人员能够开发、 测试和调试手机应用程序直接在他们的 iOS 和 Android 设备只使用 Visual Studio 和设备上。这意味着为了简化移动开发入门。有关如何试试看说明，请参阅<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">预览发行说明</a>，而且，当然，请<a href=\"https://developercommunity.visualstudio.com/\">告诉我们你的想法</a>！</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image0011.gif\"><img width=\"800\" height=\"486\" title=\"Xamarin Live Player\" alt=\"Xamarin Live Player\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image001_thumb1.gif\"></a></p>\n<h2>基本面</h2>\n<h3>安装程序行为和习得经验。</h3>\n<p>视觉工作室 2017年版本 15.4 预览包含一些显著的安装体验的改进。例如，如果你遇到任何安装错误，我们现在提供更好的援助，在发现解决方案。如果某些组件安装失败，其他人已经报告了类似的问题，然后安装程序错误消息将链接回<a href=\"https://developercommunity.visualstudio.com/spaces/8/index.html\">Visual Studio 开发人员社区</a>和点你到信息应该可以帮助您诊断和解决问题。</p>\n<h3>生产力的提高</h3>\n<p>有少量的新的生产力功能，将帮助你更有效地为您开发您的代码。例如，这个预览，如果你是一个 C#、 VB，或者 Python 的开发人员，您可以导航与围绕您的项目更快因为 Ctrl + 单击将现在转到定义。我们一直以提高性能和内存使用情况与早期版本相比。最后，我们已经<a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/03/09/live-unit-testing-in-visual-studio-2017-enterprise/\">生活单元测试</a>精制而成使它更容易着手在右键单击上下文菜单在团队资源管理器窗口中启动命令。单元测试是更好地配合 MSTest 在手动模式下使用。<b></b></p>\n<h3>C + + 开发</h3>\n<p>您现在可以使用<a href=\"https://aka.ms/vslinuxcmake\">Visual Studio 中的 Linux c + + 开发的 CMake</a>，它允许您使用针对 Windows、 Linux，或两者的 CMake 基础项目。只需打开一个文件夹与您的 CMake 项目、 选择 Linux 作为你的目标并连接到您的 Linux 机器你源同步为您。CMake 缓存生成完成后你得为您的项目的完整智能感知和生成、 运行和调试 Visual Studio 中的目标。</p>\n<p>除了 Linux c + + 开发的 CMake 支持，与视觉工作室 2017年 15.4 预览你的版本现在可以受益于 CMake 版本 3.9 和改进对于具有多个 CMakeLists 项目的支持。</p>\n<h2>数据科学工具</h2>\n<p>如果你是一名使用 R 的数据科学家，我们已经添加一些伟大的新功能到 Visual Studio 2017 版本 15.4 预览。现在你可以使用 Visual Studio 的全部力量来连接到运行在 Linux 或 Windows 的远程计算机上运行的 R 会话。我们支持针对运行的前提和云 (Azure) 计算机以及。在 IDE 中，我们已经添加了错误的花体字 （内联下划线），将突出在哪里你可以提高你 R 代码的地方。最后，我们添加了住 RMarkdown 编辑，让你有你降价编辑作为你的实时预览<i></i>类型。</p>\n<h2>今天试一下 ！</h2>\n<p>如果你不熟悉 Visual Studio 预览，花时间来阅读<a href=\"https://www.visualstudio.com/en-us/productinfo/vs2017-release-rhythm\">视觉工作室 2017年释放节奏</a>。还记得视觉工作室 2017年预览将释放位，安装<em>肩并肩</em>，所以他们应该不会影响您的机器。预览提供机会让你更快地获得补丁程序，尝试一下即将到来的功能之前它成为主流。同样，预览启用视觉工作室工程团队验证用法，采纳建议，并找出不足，早些时候在发展过程中。我们高度响应反馈通过预览进来，期待着你的听力。</p>\n<p>请<a href=\"https://www.visualstudio.com/vs/preview/\">安装 Visual Studio 2017 预览今天</a>，行使您最喜欢的工作负载，并告诉我们你的想法。您可以报告问题或通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">报告在 IDE 中的问题</a>向我们发送反馈您可以共享<a href=\"https://visualstudio.uservoice.com/forums/121579\">UserVoice</a>建议。此外可以跟踪您的 bug、 向他人学习，和得到有用的信息，<a href=\"https://developercommunity.visualstudio.com/\">开发人员社区门户</a>上。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"357\" height=\"410\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Christine-Ruana-e1498715608219.jpg\"></td>\n<td valign=\"top\" width=\"450\"><strong>陆恭 Ruana</strong>，首席项目经理，视觉工作室<p>克里斯蒂娜在 Visual Studio 的版本工程学团队并负责使我们世界各地的客户可以使用 Visual Studio 的版本。</p></td>\n</tr></tbody></table>"},{"Id":57,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-23T00:30:15","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Create%20a%20CI%2FCD%20pipeline%20for%20containerized%20ASP.NET%20Core%20projects\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>At //BUILD 2017, we <a href=\"http://aka.ms/cd4vsblog4\">shipped</a> an update to the <a href=\"http://aka.ms/CD4VS\">Continuous Delivery Tools for Visual Studio</a> with support for configuring a Continuous Integration and Continuous Delivery pipeline for <a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a> projects with <a href=\"https://www.docker.com/what-container\">container support</a> to an existing <a href=\"https://docs.microsoft.com/en-us/azure/app-service-web/app-service-linux-intro\">Azure App Service on Linux</a> directly from <a href=\"https://www.visualstudio.com/downloads/\">Visual Studio 2017</a>. With the latest update to the extension we introduced the ability to create a new Azure App Service On Linux while configuring continuous delivery.</p>\n<p>To configure continuous delivery to App Service on Linux, create or open an existing solution with an ASP.NET Core project. Add Docker support to the project and ensure that the solution is under version control on VSTS or GitHub. Right click on the solution in Solution Explorer and select Configure Continuous Delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\" rel=\"noopener noreferrer\"><img width=\"612\" height=\"616\" title=\"Select Configure Continuous Delivery in Solution Explorer\" alt=\"Select Configure Continuous Delivery in Solution Explorer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\"></a></p>\n<p>Then, select App Service (Linux) as the Target Host type and use the default newly created app service or select an existing Azure App Service to act as a target for continuous delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img width=\"780\" height=\"492\" title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\"></a></p>\n<p>You can click the &ldquo;Edit&hellip;&rdquo; link beside the App Service field to edit the new App Service configuration. You can change the Location, Resource Group, App Service Plan and Service Plan size using the &ldquo;Edit App Service&rdquo; dialog.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\" rel=\"noopener noreferrer\"><img width=\"549\" height=\"327\" title=\"Edit App Service Dialog\" alt=\"Edit App Service Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\"></a></p>\n<p>If you are not using an existing App Service as your target host, the registry settings for that App Service should match your selected container registry as the VSTS release definition only updates the image name and tag, not the full container registry settings. With the latest update to the extension, you now get an error that the container registry settings must change for continuous delivery to work successfully.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\" rel=\"noopener noreferrer\"><img width=\"744\" height=\"430\" title=\"Warning for container registry settings\" alt=\"Warning for container registry settings\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\"></a></p>\n<p>Clicking &ldquo;Allow App Service settings change to a private registry&rdquo;, will enable the Configure Continuous Delivery Dialog to update the selected App Service settings when you click OK to configure continuous delivery</p>\n<h3>Please keep the feedback coming!</h3>\n<p>Thank you to everyone who has reached out and shared feedback and ideas so far. We&rsquo;re always looking for feedback on where to take this <a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs extension</a> next. There&rsquo;s a <a>Slack channel</a> and a team alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>Ahmed Metwally</strong>, Senior PM, Visual Studio<br>\n@cd4vs (<a href=\"https://twitter.com/cd4vs)\">https://twitter.com/cd4vs)</a>\n<p>Ahmed is a Program Manager on the Visual Studio Platform team focused on improving team collaboration and application lifecycle management integration.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-23T00:30:15","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/22/create-a-cicd-pipeline-for-containerized-asp-net-core-projects/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Create a CI/CD pipeline for containerized ASP.NET Core projects","Type":1,"TitleCn":"创建一个 CI/CD 管道集装箱 ASP.NET Core 项目","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Create%20a%20CI%2FCD%20pipeline%20for%20containerized%20ASP.NET%20Core%20projects\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>在 //BUILD 2017 年，我们<a href=\"http://aka.ms/cd4vsblog4\">运</a>到<a href=\"http://aka.ms/CD4VS\">Visual Studio 连续交付工具</a>与支持配置<a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET 核心</a>持续集成和持续交付管道更新项目<a href=\"https://www.docker.com/what-container\">容器支持</a>到现有的<a href=\"https://docs.microsoft.com/en-us/azure/app-service-web/app-service-linux-intro\">Azure 应用程序服务在 Linux 上</a>直接从<a href=\"https://www.visualstudio.com/downloads/\">2017 年开始工作室视觉</a>。与最新的更新到扩展我们介绍了配置持续交付时创建一个新 Azure 应用程序服务对 Linux 的能力。</p>\n<p>在 Linux 上配置连续传递到应用程序服务，请创建或打开一个现有的解决方案与 ASP.NET 核心项目。向项目中添加码头工人支持并确保解决方案在 VSTS 或 GitHub 上的版本控制之下。右键单击解决方案资源管理器中的解决方案并选择配置持续交付。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\" rel=\"noopener noreferrer\"><img width=\"612\" height=\"616\" title=\"Select Configure Continuous Delivery in Solution Explorer\" alt=\"Select Configure Continuous Delivery in Solution Explorer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\"></a></p>\n<p>然后，选择应用程序服务 (Linux) 作为目标主机类型和使用新创建的应用程序服务的默认值或选择现有的 Azure 应用程序服务，作为持续交付的目标。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img width=\"780\" height=\"492\" title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\"></a></p>\n<p>您可以单击要编辑的新的应用程序服务配置的应用程序服务字段旁边的\"编辑...\"链接。您可以更改位置、 资源组、 应用程序服务计划和服务计划的大小，使用\"编辑应用程序服务\"对话框。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\" rel=\"noopener noreferrer\"><img width=\"549\" height=\"327\" title=\"Edit App Service Dialog\" alt=\"Edit App Service Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\"></a></p>\n<p>如果您不使用现有的应用程序服务作为您的注册表设置，应用程序服务应与匹配的目标主机您选定的容器注册表 VSTS 释放定义只会更新图像名称和标记、 不完整的集装箱注册表设置。随着延长至最新的更新，你现在得到的容器注册表设置必须更改为持续的交付工作成功的错误。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\" rel=\"noopener noreferrer\"><img width=\"744\" height=\"430\" title=\"Warning for container registry settings\" alt=\"Warning for container registry settings\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\"></a></p>\n<p>单击\"允许应用程序服务设置更改到私有注册中心\"，将启用配置连续交付对话框以更新所选的应用程序服务设置，当您单击确定以配置连续传递</p>\n<h3>请保持反馈来 ！</h3>\n<p>谢谢大家有伸出和共享反馈和想法到目前为止。我们一直在寻找反馈在哪里下, 一步采取此<a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs 扩展名</a>。有一种<a>松弛的通道</a>和团队别名<a>vsdevops@microsoft.com</a>在那里你可以伸出，团队和其他人在社区分享关于这一主题的想法。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>艾哈迈德 Metwally</strong>，高级 PM 视觉工作室<br>@cd4vs (<a href=\"https://twitter.com/cd4vs)\">https://twitter.com/cd4vs)</a>\n<p>艾哈迈德是在 Visual Studio 平台团队专注于改善团队协作和应用程序生命周期管理集成的项目经理。</p></td>\n</tr></tbody></table>"},{"Id":35,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-22T02:30:04","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Committing%20with%20Confidence%3A%20Commit%20Time%20Code%20Quality%20Information%20Updated\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>In the earlier post <a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/05/22/committing-with-confidence-getting-code-quality-information-at-commit-time/\">&ldquo;Committing with Confidence: Getting Code Quality Information at Commit Time&rdquo;</a> , we introduced the new Build and Code Analysis Results panel, which gives you a heads-up reminder at commit-time of issues detected by any code analysis tool that puts results in the error list. This means you can take care of those issues before they propagate into your team&rsquo;s CI/CD process, and commit with confidence.</p>\n<p>The panel shows results both for live edit-time analysis (e.g. C#/VB Analyzers) and, via the Refresh Analysis button, for batch-style static analysis (e.g. C++ Static Analysis tools). It is supported on Visual Studio 2017 Enterprise. At present it supports code being committed to a Git Repo.</p>\n<h2>Focus on the issues that relate to your changed files</h2>\n<p>In response to your feedback, we have just released a new version of the <a href=\"http://aka.ms/cd4vs\">Continuous Delivery Tools for Visual Studio</a> extension which updates the panel to show issue counts <b>only for files that are changed in the set of files you are committing</b>, so that you can focus only on the issues related to your changes.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Team-Explorer.png\" rel=\"noopener noreferrer\"><img title=\"Commit Time Code Quality Information Updated - Team Explorer \" alt=\"Commit Time Code Quality Information Updated - Team Explorer \" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Team-Explorer.png\" width=\"403\" height=\"430\"></a></p>\n<p>The View Issues link will take you straight to a view of the Error List filtered to just the changed files too:</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Focus-on-issues-related-to-changed-files.png\" rel=\"noopener noreferrer\"><img title=\"Commit Time Code Quality Information Updated - Focus on issues related to changed files\" alt=\"Commit Time Code Quality Information Updated - Focus on issues related to changed files\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Focus-on-issues-related-to-changed-files.png\"></a></p>\n<h3>Please continue to share your feedback!</h3>\n<p>Please download and try the <a href=\"http://aka.ms/cd4vs\">Continuous Delivery Tools for Visual Studio</a> extension, try out the updated Build and Code Analysis Results panel and let us know what you think of the change, as well as the overall experience.</p>\n<p>Tell us more about what you think about this by filling out a short <a href=\"https://aka.ms/vs2017cqcigeneral\">survey</a></p>\n<p>We&rsquo;re always looking for feedback on where to take this Microsoft DevLabs extension next; features from the extension have already been refined using that feedback and incorporated into the core Visual Studio product in updates. There&rsquo;s a <a href=\"https://aka.ms/cd4vs_slack\">Slack channel</a> and a team email alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"2\" width=\"650\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2016/11/Mark-Wilson-Thomas.jpg\"></td>\n<td valign=\"top\" width=\"400\"><strong>Mark Wilson-Thomas</strong>, Senior Program Manager, Visual Studio IDE Team<br><a target=\"_blank\" href=\"https://twitter.com/MarkPavWT\" rel=\"noopener noreferrer\">@MarkPavWT</a>\n<p>Mark is a Program Manager on the Visual Studio IDE team, where he&rsquo;s been building developer tools for nearly 10 years. He currently looks after the Visual Studio Editor. Prior to that, he worked on tools for Office, SQL, WPF and Silverlight.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-22T02:30:04","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/21/committing-with-confidence-commit-time-code-quality-information-updated/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Committing with Confidence: Commit Time Code Quality Information Updated","Type":1,"TitleCn":null,"Content":null},{"Id":59,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-22T00:30:06","Description":"<p>You may have heard the industry buzzword &ldquo;serverless computing.&rdquo; Whether you are already a serverless ninja, or still on the fence about the bizarre name, read on! How does it work? Why should you care? Is it just a fad, or a real trend in computing?</p>\n<h2>Serverless computing defined</h2>\n<p>Serverless computing generally encompasses three things: 1) abstraction of servers, 2) event-driven scale and 3) micro-billing.</p>\n<ol><li><b>Abstraction of servers.</b> Serverless computing is fully managed. Users never explicitly reserve server instances; this is handled by the platform. Each function execution could run on a different compute instance, and this is completely transparent to your code.</li>\n<li><b>Event-driven scale. </b>Serverless is an excellent fit for workloads that respond to incoming events. Events include timers (e.g., run this function everyday at 10 am), HTTP (API and WebHook scenarios), queues (e.g., order processing), and much more. Instead of writing an entire application, you author a &ldquo;function,&rdquo; which contains both code and metadata about its triggers and bindings. The platform automatically schedules your function to run and scales the number of compute instances based on the rate of incoming events. Triggers define how a function is invoked. <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings\">Input and output bindings</a> provide a declarative way to connect to services from within your code. For example, suppose you want to write a new file to Azure Blob Storage every five minutes. You would use a <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-scheduled-function\">Timer trigger</a> and a <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob\">blob output binding</a>:\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\" rel=\"noopener noreferrer\"><img title=\"Azure Functions for DotNet Developers - Event Driven Scale\" alt=\"Azure Functions for DotNet Developers - Event Driven Scale\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\"></a></p>\n</li>\n<li><b>Micro-billing. </b>In traditional computing, there is a notion of per-second billing, but that&rsquo;s often not as useful as it sounds. Even if you have a website that gets only 1 hit a day, you must still pay for a full day&rsquo;s worth of availability. With serverless, you pay only when your code is executing. If there are no active function executions, you are not charged. For example, if your code runs once a day for 2 minutes, you are charged for 1 execution and 2 minutes of computing. For more details on billing, see <a href=\"https://azure.microsoft.com/en-us/pricing/details/functions/\">Azure Functions pricing</a>.</li>\n</ol><p>Together, these features enable you to focus on apps, not servers. That means you&rsquo;ll have reduced DevOps and a more productive computing environment. Customers have found that they are able to deploy solutions much more quickly than before. <a href=\"https://customers.microsoft.com/en-us/story/fujifilm-software-co-ltd\">Projects can now be completed in days or weeks, rather than months</a>.</p>\n<p>Azure Functions is Microsoft&rsquo;s serverless computing platform. Serverless involves more than just computing; it includes databases, messaging, and workflows. To learn more about the entire Azure serverless platform, see <a href=\"https://azure.com/serverless\">azure.com/serverless</a>.</p>\n<h2>Why serverless matters</h2>\n<p>More so than any other cloud computing paradigm, serverless frees you from managing infrastructure and enables you to focus on your business problem. Though serverless is still in its infancy, there are now many vendors who offer serverless platforms.</p>\n<p>Serverless is not just a fad or buzzword. Rather, serverless represents a dramatic shift in how developers think about cloud computing. With serverless, you need only worry about your code and how it is triggered. The platform takes care of the rest.</p>\n<h2>Serverless and tooling</h2>\n<p>When most cloud vendors launched their serverless offerings, there were many barriers to developer productivity. There was no support for debugging, there was no local development experience, and monitoring functions was hard. Despite this, the new programming model was so productive that serverless become a popular trend.</p>\n<p>As you might expect, Azure Functions included productivity features from the start. We have a tooling and local development experience that is unique among vendors. You can run the Azure Functions runtime on your local machine. Aside from the scale-out, it&rsquo;s the same runtime as in the cloud. You can even trigger off events in Azure, enabling a hybrid debugging experience.</p>\n<p>For monitoring, Azure Functions provides <a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2017/04/06/azure-functions-application-insights/\">Azure Application Insights integration</a>, an unparalleled monitoring experience. You can connect to a live event stream, see runtime metrics, and log your own custom metrics. Application Insights supports a rich query language, and you can create automated alerts.</p>\n<h2>.NET support on Azure Functions</h2>\n<p>Since its initial preview, Azure Functions has had first-class C# support. We now support <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-csharp\">C#</a> and <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-fsharp\">F# scripting</a> as well as <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library\">C# class libraries</a>. The Function portal focuses on the scripting experience, while the Visual Studio tooling is based on class libraries.</p>\n<p><a>The Visual Studio Functions project is a regular .NET class library that references the Functions NuGet package </a><a href=\"https://www.nuget.org/packages/Microsoft.NET.Sdk.Functions\">Microsoft.NET.Sdk.Functions</a>. All standard Visual Studio features are supported, such as unit testing, debugging, and publishing to Azure.</p>\n<p>Azure Functions also supports other languages, such as JavaScript, PowerShell, and Python.</p>\n<h2>Try it out</h2>\n<p>We&rsquo;ve recently released the RTW version of the Azure Functions tools in Visual Studio 2017 Update 3. Azure Functions tooling is included in the <a href=\"https://docs.microsoft.com/visualstudio/install/install-visual-studio#install-workloads\">Azure workload</a>. Follow this tutorial to get started in 5 minutes: <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-your-first-function-visual-studio\">Create your first function using Visual Studio</a>.</p>\n<h2>Learn more</h2>\n<p>Check out the following videos:</p>\n<ul><li><a href=\"https://channel9.msdn.com/Shows/Cloud+Cover/Episode-231-Azure-Functions-Local-Debugging-and-More-with-Donna-Malayeri\">Cloud Cover: Azure Functions Local Debugging and More</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/XamarinShow/Episode-28-Azure-Functions-for-Mobile-Apps-with-Donna-Malayeri\">The Xamarin Show: Azure Functions for Mobile Apps</a></li>\n<li><a href=\"https://channel9.msdn.com/Blogs/Azure/Build-apps-faster-with-Azure-Serverless?term=azure%20functions\">Microsoft Mechanics: Build apps faster with Azure Serverless</a></li>\n<li><a href=\"https://channel9.msdn.com/events/Build/2017/T6003?term=donna%20malayeri\">BUILD 2017: A day in the life of an Azure serverless developer</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/Tuesdays-With-Corey/Tuesdays-with-Cory-Azure-Functions-Proxies-extravaganza?term=donna%20malayeri\">Tuesdays with Cory: Azure Functions Proxies extravaganza</a></li>\n</ul><p>Connect with us:</p>\n<ul><li>For product news, follow <a href=\"https://twitter.com/AzureFunctions\">@AzureFunctions</a>.</li>\n<li>For technical questions, post on the <a href=\"https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=azurefunctions\">MSDN forums</a> or <a href=\"https://stackoverflow.com/questions/tagged/azure-functions\">StackOverflow</a>. The entire Functions engineering team monitors these questions, so you&rsquo;re sure to get an expert answer.</li>\n<li>To report bugs or file feature requests, open an issue on the <a href=\"https://github.com/Azure/Azure-Functions\">Azure-Functions</a> GitHub repo. Include &ldquo;Visual Studio&rdquo; in the issue title.</li>\n</ul><table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td width=\"150\" valign=\"top\"><img width=\"350\" height=\"350\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Donna-Malayeri.jpg\"></td>\n<td width=\"500\" valign=\"top\">Donna Malayeri, Program Manager, Azure Functions<br><a target=\"_blank\" href=\"https://twitter.com/lindydonna\" rel=\"noopener noreferrer\">@lindydonna</a>\n<p>Donna Malayeri is a program manager on the Azure Functions team, where she is responsible for the developer experience and the Visual Studio tooling. She previously worked on products such as Azure Mobile Services, Reactive Extensions (Rx), Visual F#, and Scala. She holds a PhD in programming languages from Carnegie Mellon University.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-22T00:30:06","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/21/why-you-should-care-about-serverless-computing/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Why you should care about serverless computing","Type":1,"TitleCn":"为什么你要关心无服务器计算","Content":"<p>你可能听说过行业的时髦\"无服务器计算\"。你已经是一个无服务器的忍者，还是仍在犹豫奇怪的名字，请继续阅读 ！它是如何工作的？你为什么要在乎？它只是一种时尚或在计算一个真正的趋势？</p>\n<h2>无服务器计算定义</h2>\n<p>无服务器计算一般包括三件事： 1） 服务器、 2） 事件驱动的规模和 3） 微计费的抽象。</p>\n<ol><li><b>服务器抽象。</b>无服务器计算是完全托管的。用户从未明确保留服务器实例;这是由平台处理。每个函数执行可以在不同的计算实例上运行，这是对您的代码完全透明。</li>\n<li><b>事件驱动规模。</b>无服务器是为响应传入事件的工作负载非常适合这个职位。事件包括计时器 （例如，运行此功能每天在 10 上午），HTTP （API 和 WebHook 方案），队列 （例如，订单处理），和更多。而不是编写整个应用程序，您创作\"功能，\"包含代码和其触发器和绑定有关的元数据。平台自动安排你去运行这个函数和扩展的基于传入的事件发生率的计算实例数。触发器定义如何调用函数。<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings\">的输入和输出绑定</a>提供的声明性方式连接到您的代码中的服务。例如，假设您想要写一个新的文件到 Azure Blob 存储每隔五分钟。您将使用一个<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-scheduled-function\">计时器触发</a>和<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob\">blob 输出绑定</a>：<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\" rel=\"noopener noreferrer\"><img title=\"Azure Functions for DotNet Developers - Event Driven Scale\" alt=\"Azure Functions for DotNet Developers - Event Driven Scale\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\"></a></p>\n</li>\n<li><b>微计费。</b>在传统计算中，是有概念的每秒计费，但这往往不是像它听起来的那么有用。甚至如果你有一个网站，获取只有 1 打一天，你仍然必须支付一整天的价值的可用性。与无服务器，你支付只有当您的代码执行。如果没有积极的函数的执行，你都不收费。例如，如果您的代码运行 2 分钟一天一次，你被指控为 1 执行和 2 分钟的计算。在帐单上的更多详细信息，请参阅<a href=\"https://azure.microsoft.com/en-us/pricing/details/functions/\">Azure 功能定价</a>。</li>\n</ol><p>在一起，这些功能使您能够专注于应用程序，不是服务器。这意味着你会减少了 DevOps 和更有效率的计算环境。客户发现，他们能够比以前更快地部署解决方案。<a href=\"https://customers.microsoft.com/en-us/story/fujifilm-software-co-ltd\">项目现在可以在天或数周，而不是几个月中完成</a>。</p>\n<p>蔚蓝的功能是微软的无服务器的计算平台。无服务器涉及到不仅仅计算;它包括数据库、 消息传递和工作流。要了解整个 Azure 无服务器平台的更多信息，请参阅<a href=\"https://azure.com/serverless\">azure.com/serverless</a>。</p>\n<h2>为什么无服务器问题</h2>\n<p>更多比任何其他云无服务器的计算范例，可以让你免于管理基础设施，使您可以专注于您的业务问题。虽无服务器仍然处于起步阶段，现在有许多供应商提供无服务器平台。</p>\n<p>无服务器是不只是时尚或流行词。相反，无服务器代表了戏剧性的在开发人员如何看待云计算。与无服务器，你需要只担心你的代码和它的触发方式。该平台照顾的休息。</p>\n<h2>无服务器和工具</h2>\n<p>当大多数的云供应商推出了其无服务器的服务时，那里有许多的障碍，开发人员的生产力。没有用于调试的支持，有了没有地方发展经验，和监测职能很难。尽管这样，新的编程模型是生产效率非常高，无服务器成为一种流行趋势。</p>\n<p>正如你可能期望，Azure 职能包括生产力功能从一开始。我们有供应商中是独一无二的模具和地方发展经验。您可以在本地计算机上运行 Azure 函数运行时。除了规模进行，它是同一运行时如云。你甚至可以触发事件在 Azure，使混合调试经验。</p>\n<p>监测，Azure 功能提供了<a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2017/04/06/azure-functions-application-insights/\">Azure 应用程序见解一体化</a>，无与伦比的监测经验。你可以连接到现场的事件流，看到运行时的度量，并登录您自己自定义的度量标准。应用的见解支持一种丰富的查询语言，并且您可以创建自动发出警报。</p>\n<h2>Azure 函数的.NET 支持</h2>\n<p>自其初始的预览，Azure 功能已经有一流的 C# 支持。我们现在支持<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-csharp\">C#</a>和<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-fsharp\">F # 脚本</a>，以及<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library\">C# 类库</a>。功能门户侧重于脚本的经验，而 Visual Studio 工具基于类库。</p>\n<p><a>Visual Studio 功能项目是一个普通的.NET 类库引用函数 NuGet 包</a><a href=\"https://www.nuget.org/packages/Microsoft.NET.Sdk.Functions\">Microsoft.NET.Sdk.Functions</a>.支持所有标准的 Visual Studio 功能，如单元测试、 调试和发布到 Azure。</p>\n<p>蔚蓝的功能还支持其他语言，如 JavaScript、 PowerShell 和 Python。</p>\n<h2>试试看</h2>\n<p>我们最近已经发布在 Visual Studio 2017 更新 3 Azure 功能工具的 RTW 版本。模具的蔚蓝职能列入<a href=\"https://docs.microsoft.com/visualstudio/install/install-visual-studio#install-workloads\">蔚蓝的工作量</a>。本教程要在 5 分钟内开始：<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-your-first-function-visual-studio\">创建您的第一个函数使用 Visual Studio</a>。</p>\n<h2>了解更多信息</h2>\n<p>看看下面的视频：</p>\n<ul><li><a href=\"https://channel9.msdn.com/Shows/Cloud+Cover/Episode-231-Azure-Functions-Local-Debugging-and-More-with-Donna-Malayeri\">云量： 蔚蓝功能本地调试和更多</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/XamarinShow/Episode-28-Azure-Functions-for-Mobile-Apps-with-Donna-Malayeri\">Xamarin 显示： 蔚蓝功能为移动应用程序的</a></li>\n<li><a href=\"https://channel9.msdn.com/Blogs/Azure/Build-apps-faster-with-Azure-Serverless?term=azure%20functions\">微软力学： 与 Azure 无服务器更快地构建应用程序</a></li>\n<li><a href=\"https://channel9.msdn.com/events/Build/2017/T6003?term=donna%20malayeri\">生成 2017: 蔚蓝无服务器开发人员的生活中的一天</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/Tuesdays-With-Corey/Tuesdays-with-Cory-Azure-Functions-Proxies-extravaganza?term=donna%20malayeri\">科里 · 相约： 蔚蓝功能代理盛会</a></li>\n</ul><p>与我们连接：</p>\n<ul><li>产品新闻，请按照<a href=\"https://twitter.com/AzureFunctions\">@AzureFunctions</a>。</li>\n<li>由于技术问题，在<a href=\"https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=azurefunctions\">MSDN 论坛</a>或<a href=\"https://stackoverflow.com/questions/tagged/azure-functions\">计算器</a>上张贴。整个功能工程团队监测这些问题，所以你一定要得到专家的解答。</li>\n<li>若要报告 bug 或文件功能请求，请打开<a href=\"https://github.com/Azure/Azure-Functions\">Azure 功能</a>GitHub 回购问题。包括问题标题中的\"Visual Studio\"。</li>\n</ul><table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td width=\"150\" valign=\"top\"><img width=\"350\" height=\"350\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Donna-Malayeri.jpg\"></td>\n<td width=\"500\" valign=\"top\">唐娜马拉耶里，项目经理，Azure 功能<br><a target=\"_blank\" href=\"https://twitter.com/lindydonna\" rel=\"noopener noreferrer\">@lindydonna</a>\n<p>唐娜马拉耶里是 Azure 职能团队，项目经理，她负责为开发人员的体验和 Visual Studio 工具。她曾 Azure 移动服务、 无功扩展 (Rx)、 Visual F #，和 Scala 等产品。她在编程语言从卡内基 · 梅隆大学博士学位。</p></td>\n</tr></tbody></table>"},{"Id":47,"Author":"Rich Lander [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-19T05:38:29","Description":"<p>A new update for .NET Framework is now available for the <a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext class</a>. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10.</p>\n<p>The <a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext class</a> was introduced in the <a href=\"https://blogs.msdn.microsoft.com/dotnet/2015/07/20/announcing-net-framework-4-6/#appcontext\">.NET Framework 4.6</a>. It&rsquo;s primary use is to enable developers to opt into new behavior in the .NET Framework that is not enabled by default. The regression prevents developers from opting into new behavior.</p>\n<p>You are only encouraged to install this update if you have used the AppContext class directly and are experiencing problems. Otherwise, you will&nbsp;get this update in one of&nbsp;the regular broader releases over the next one to two months.</p>\n<h2><a href=\"https://blogs.msdn.microsoft.com/dotnet#getting-the-update\"></a>Getting the Update</h2>\n<p>This update is available via the Microsoft Update Catalog.</p>\n<h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#downloading-kbs-from-microsoft-update-catalog\"></a>Downloading KBs from Microsoft Update Catalog</h3>\n<p>You can download patches from the table below. See <a href=\"https://blogs.msdn.microsoft.com/dotnet/2016/10/11/net-framework-monthly-rollups-explained/\">.NET Framework Monthly Rollups Explained</a> for an explanation on how to use this table to download patches from Microsoft Update Catalog.</p>\n<table><thead><tr><th>Product Version</th>\n<th>Preview of Quality Rollup KB</th>\n</tr></thead><tbody><tr><td><strong>Windows 8.1<br>\nWindows RT 8.1<br>\nWindows Server 2012 R2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038922\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></td>\n</tr><tr><td><strong>Windows Server 2012</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038921\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></td>\n</tr><tr><td><strong>Windows 7<br>\nWindows Server 2008 R2 SP1</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr><tr><td><strong>Windows Server 2008 SP2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr></tr><tr><td>.NET Framework 4.6</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr></tbody></table><h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#previous-rollups-and-updates\"></a>Previous Rollups and Updates</h3>\n<p>The last few .NET Framework Monthly updates are listed below for your convenience:</p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\">August 2017 Preview of Quality Rollup</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/08/net-framework-august-2017-security-and-quality-rollup/\">August 2017 Security and Quality Rollup</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/01/net-framework-july-2017-cumulative-quality-update-for-windows-10/\">July 2017 Cumulative Quality Update for Windows 10</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/25/net-framework-july-2017-quality-update\">July 2017 Quality Update for WPF</a></li>\n</ul>","LastUpdateTime":"2017-08-19T05:38:29","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","MobileContent":null,"PublishId":0,"Status":1,"Title":".NET Framework Update for AppContext","Type":1,"TitleCn":".NET 框架更新为 AppContext 的","Content":"<p>.NET 框架的新更新现供<a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext 类</a>。AppContext 类的行为，最近回归。更新返回到正确的行为的类。此更新影响 4.6 及更高版本的.NET 框架。更新不是需要 Windows 10。</p>\n<p>在<a href=\"https://blogs.msdn.microsoft.com/dotnet/2015/07/20/announcing-net-framework-4-6/#appcontext\">.NET 框架 4.6</a>介绍了<a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext 类</a>。它的主要用途是使开发人员可以选择在默认情况下不启用.NET 框架的新行为。回归防止开发人员选择到新的行为。</p>\n<p>你只是鼓励要安装此更新，如果你有直接使用 AppContext 类和遇到的问题。否则，你会得到此更新在未来的一到两个月的定期更广泛版本之一。</p>\n<h2><a href=\"https://blogs.msdn.microsoft.com/dotnet#getting-the-update\"></a>获取更新</h2>\n<p>此更新程序可通过 Microsoft 更新目录。</p>\n<h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#downloading-kbs-from-microsoft-update-catalog\"></a>从微软更新目录下载 KBs</h3>\n<p>您可以从下面的表下载修补程序。解释如何使用此表可从 Microsoft Update 目录下载修补程序，请参阅<a href=\"https://blogs.msdn.microsoft.com/dotnet/2016/10/11/net-framework-monthly-rollups-explained/\">.NET 框架每月汇总解释</a>。</p>\n<table><thead><tr><th>产品版本</th>\n<th>预览质量汇总 KB</th>\n</tr></thead><tbody><tr><td><strong>Windows 8.1<br>Windows RT 8.1<br>Windows 服务器 2012 R2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038922\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></td>\n</tr><tr><td><strong>Windows 服务器 2012</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038921\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></td>\n</tr><tr><td><strong>Windows 7<br>了 Windows Server 2008 R2 SP1</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr><tr><td><strong>Windows 服务器 2008 SP2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr></tr><tr><td>.NET 框架 4.6</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr></tbody></table><h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#previous-rollups-and-updates\"></a>以前的汇总和更新</h3>\n<p>下面列出了最后几个.NET 框架每月更新，为您提供便利：</p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\">质量汇总 8 月 2017年预览</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/08/net-framework-august-2017-security-and-quality-rollup/\">8 月 2017年安全和质量汇总</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/01/net-framework-july-2017-cumulative-quality-update-for-windows-10/\">7 月 2017年累积质量更新为 Windows 10 的</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/25/net-framework-july-2017-quality-update\">WPF 的 7 月 2017年质量更新</a></li>\n</ul>"},{"Id":44,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-08-18T22:13:59","Description":"Updating off pre-RTM bits once RTM ships ought to be routine. But if you have not already done so in the case of the .NET Core based Test projects, let me give you a reason to do so. vstest delegates discovery and execution of tests to test-framework-specific adapters. Adapters indicate the kind of test containers... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/\"> Read More</a>","LastUpdateTime":"2017-08-18T22:13:59","Link":"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/","MobileContent":null,"PublishId":0,"Status":1,"Title":"The TestContainer Capability","Type":1,"TitleCn":"容器的能力","Content":"更新了预 RTM 位一旦 RTM 船应该是常规。但如果你不已经在基于.NET 核心的情况下测试项目，让我给你个理由这样做。vstest 代表的发现和执行测试的测试框架特定适配器。适配器指示类型的测试容器...<a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/\">阅读更多</a>"}]
[{"Id":98,"Author":"Andrew Pardoe [MSFT]","Categories":"Visual C++ Team Blog","CreateTime":"2017-09-12T09:28:11","Description":"<p><em>This post written by Tanveer Gani, Stephan T. Lavavej, Andrew Marino, Gabriel Dos Reis, and Andrew Pardoe</em></p>\n<p>&ldquo;Two-phase name lookup&rdquo; is an informal term that refers to a set of rules governing the resolution of names used in a template declaration. <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">These rules were formalized</a> more than two decades ago in an attempt to reconcile two opposing compilation models for templates: the inclusion model (what most developers know of templates today), and the separation model (the basis of the original design for templates). You can find the genesis of dependent names in the foundational paper <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1992/N0209.pdf\">Proposed Revisions to the Template Specification</a>, firmly grounded in the One Definition Rule principle. If you&rsquo;re interested in diving into the glorious details, you can find these rules in modern terms in section 17.6&nbsp;(stable name [temp.res]) of the <a href=\"https://wg21.link/N4659\">C++17 draft standard</a>. In the last few months the MSVC compiler has come from having no support for two-phase name lookup to being usable on most code. We&rsquo;ll finish complete support for this feature in a future Visual Studio 2017 update.</p>\n<p>You&rsquo;ll need to use the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><code>/permissive-</code> conformance switch</a> to enable two-phase lookup in the MSVC compiler included with Visual Studio 2017 &ldquo;15.3&rdquo;. Two-phase name lookup drastically changes the meaning of some code so the feature is not enabled by default in the current version of MSVC.</p>\n<p>This post examines exactly what two-phase name lookup entails, what&rsquo;s currently implemented in MSVC, and how to make effective use of MSVC&rsquo;s partial but substantial support for two-phase name lookup. We&rsquo;ll also tell you how to opt-out of two-phase lookup, even if you want the rest of your code to strictly conform to the Standard. Lastly, we&rsquo;ll explain a bit about why it took us so long to get here&mdash;these rules are at least 25 years old!</p>\n<h3>What is &ldquo;two-phase name lookup&rdquo;?</h3>\n<p>The original design of templates for C++ meant to do exactly what the term &ldquo;template&rdquo; implied: a template would stamp out families of classes and functions. It allowed and encouraged, but did not require, early checking of non-dependent names. Consequently, identifiers didn&rsquo;t need to be looked up during parsing of the template definition. Instead, compilers were allowed to delay name lookup until the template was instantiated. Similarly, the syntax of a template didn&rsquo;t need to be validated until instantiation. Essentially, the meaning of a name used in a template was not determined until the template was instantiated.</p>\n<p>In accordance with these original rules, previous versions of MSVC did very limited template parsing. &nbsp;In particular, function template bodies were not parsed at all until instantiation. The compiler recorded the body of a template as a stream of tokens that was replayed when it was needed during instantiation of a template where it might be a candidate.</p>\n<p>Let&rsquo;s consider what this means by looking at a piece of code. Links are provided to online compilers so you can play with the code as you read through this post.</p>\n<pre>\n#include &lt;cstdio&gt;\n\nvoid func(void*) { std::puts(\"The call resolves to void*\") ;}\n\ntemplate&lt;typename T&gt; void g(T x)\n{\n    func(0);\n}\n\nvoid func(int) { std::puts(\"The call resolves to int\"); }\n\nint main() \n{\n    g(3.14);\n}\n</pre>\n<p>To which of these overloads does the call on line 7 resolve? The <code>void*</code> overload was already declared at the point the template was written on line 5. The function <code>void func(int)</code> didn&rsquo;t exist when the template was written. Therefore, the call on line 14 to the function template <code>void g(T x)</code> on line 5 should resolve to function <code>void func(void*)</code> on line 3.</p>\n<p>When compiled with a compiler that conforms to the standard, this program prints &ldquo;<code>The call resolves to void*</code>&ldquo;. You can <a href=\"http://rextester.com/YCHV46514\">see this behavior in GCC</a> using the Rextester online compiler. <a href=\"http://rextester.com/JAO93001\">Using the MSVC from Visual Studio 2015</a>, without support for two-phase name lookup, the program prints &ldquo;The call resolves to int&rdquo;.</p>\n<p>Why did MSVC get this wrong? The mechanics we used to parse templates worked when templates were simple, but limited what the compiler could do when two-phase name lookup came into play. MSVC previously recorded the body of the template as a stream of tokens and stored that stream away to be replayed at instantiation time. The behavior of MSVC&rsquo;s template substitution from a recorded token stream somewhat resembled the behavior of macro substitution in that limited analysis was done of a template&rsquo;s body.</p>\n<p>In this example, MSVC stored a token stream for the function template <code>void g(T x)</code>. If the compiler had analyzed the function call at the point where it was encountered, only the declaration for <code>void func(void*)</code> would have been in the overload set. (Note that is a valid match for the call <code>func(0)</code> because C++ allows <code>0</code> to represent a <a href=\"http://en.cppreference.com/w/cpp/language/implicit_conversion\">null pointer constant that can be converted to any pointer type</a>.)</p>\n<p>The function overload <code>void func(int)</code> would also be a match for the call <code>func(0)</code> except that it should not be in the overload set at the point the function template <code>void g(T x)</code> was evaluated. But MSVC didn&rsquo;t evaluate the body of the template until the point of instantiation&mdash;after the declaration for <code>void func(int)</code> had been added to the overload set. At that point, the compiler picked the better match for an integer argument: <code>int</code> rather than <code>void*</code>.</p>\n<p>You can see both of the compilers in action in <a href=\"https://godbolt.org/g/PP71ed\">this code sample on the online Compiler Explorer</a>. GCC refuses to compile the code sample when line 3 is commented out, whereas MSVC happily matches a function that wasn&rsquo;t even defined at the point the template was written. It would be recognized as illegal code if it were not a template, but our broken template substitution mechanics allowed the compiler to accept this code.</p>\n<p>The C++ standards committee realized that code written in templates should not be subtly affected by the surrounding context, while also upholding the ODR. They <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">introduced the notion of <em>dependent</em> and <em>non-dependent</em> names</a> in the rules for name-binding in templates because it would be surprising behavior to have the function written on line 10 change the meaning of the code above it.</p>\n<p>The rules in the [temp.res] section of the standard list three kinds of names:</p>\n<ol><li>The name of the template and names declared in the template</li>\n<li>Names that depend upon a template&rsquo;s parameter</li>\n<li>Names from scopes that are visible inside the template&rsquo;s definition</li>\n</ol><p>The first and third categories are non-dependent names. They&rsquo;re bound at the point of the template&rsquo;s definition and stay bound in every instantiation of that template. They are never looked up when a template is instantiated. (See &sect;17.6 [temp.res]/10 and &sect;17.6.3 [temp.nondep] in the <a href=\"https://wg21.link/N4659\">Draft Standard</a> for details.)</p>\n<p>The second category are dependent names. Dependent names are not bound at the point of the template&rsquo;s definition. Instead, these names are looked up when the template is instantiated. For function calls with a dependent function name, the name is bound to the set of functions that are visible at the point of the call in the template&rsquo;s definition. Additional overloads from argument-dependent lookup are added at both the point of the template definition and the point of where the template is instantiated. (See &sect;17.6.2 [temp.dep], &sect;17.6.4 [temp.dep.res], and &sect;17.6.4.2 [temp.dep.candidate] in the <a href=\"https://wg21.link/N4659\">Draft Standard</a> for details.)</p>\n<p>It&rsquo;s important to note that overloads declared after the point of the template&rsquo;s definition but before the point of the template&rsquo;s instantiation are only considered if they are found through argument-dependent lookup. MSVC previously didn&rsquo;t do argument-dependent lookup separately from ordinary, unqualified lookup so this change in behavior may be surprising.</p>\n<p>Consider this code sample, which is also <a href=\"https://wandbox.org/permlink/7AbIQS19ZItMMRkb\">available on the Wandbox online compiler</a>:</p>\n<pre>\n#include &lt;cstdio&gt; \n\nvoid func(long) { std::puts(\"func(long)\"); }\n\ntemplate &lt;typename T&gt; void meow(T t) {\n    func(t);\n}\n\nvoid func(int) { std::puts(\"func(int)\"); }\n\nnamespace Kitty {\n    struct Peppermint {};\n    void func(Peppermint) { std::puts(\"Kitty::func(Kitty::Peppermint)\"); }\n}\n\nint main() {\n    meow(1729);\n    Kitty::Peppermint pepper;\n    meow(pepper);\n}\n</pre>\n<p>The call <code>meow(1729)</code> resolves to the <code>void func(long)</code> overload, not <code>void func(int)</code> overload, because the unqualified <code>func(int)</code> is declared after the definition of the template and not found through argument-dependent lookup. But <code>void func(Peppermint)</code> does participate in argument-dependent lookup, so it is added to the overload set for the call <code>meow(pepper)</code>.</p>\n<p>From the above examples, you can see that the two phases of &ldquo;two-phase lookup&rdquo; are the lookup for non-dependent names at the time of template definition and lookup for dependent names at the time of template instantiation.</p>\n<p><a></a></p>\n<h3>MSVC behavior prior to Visual Studio 2017 &ldquo;15.3&rdquo;</h3>\n<p>Historically, when a template was encountered, the MSVC compiler took the following steps:</p>\n<ul><li>When parsing a class template, MSVC previously parsed only the template declaration, the class head, and the base class list. The template body was captured as a token stream. No function bodies, initializers, default arguments, or <code>noexcept</code> arguments were parsed. The class template was pseudo-instantiated on a &ldquo;tentative&rdquo; type to validate that the declarations in the class template were correct.Take for example this class template: <code>template &lt;typename T&gt; class Derived : public Base&lt;T&gt; { ... }</code>. The template declaration, <code>template &lt;typename T&gt;</code>, the class head, <code>class Derived</code>, and the base-class list, <code>public Base&lt;T&gt;</code> are parsed but the template body, <code>{ ... }</code>, is captured as a token stream.</li>\n<li>When parsing a function template, MSVC previously parsed only the function signature. The function body was never parsed&mdash;it was captured as a token stream. Consequently, if the template body had syntax errors and the template was never instantiated the errors were never diagnosed.</li>\n</ul><p>An example of how this behavior caused incorrect parsing can be seen with how MSVC did not require the keywords <code>template</code> and <code>typename</code> everywhere they C++ Standard requires them. These keywords are needed in some positions to disambiguate how compilers should parse a dependent name during the first phase of lookup. For example, consider this line of code:</p>\n<pre>\nT::Foo&lt;a || b&gt;(c); \n</pre>\n<p>Is this code a call to a function template with an argument of <code>a || b</code>? Or is this a logical-or expression with <code>T::foo &lt;</code> a as the left operand and <code>b &gt; (c)</code> as the right operand?</p>\n<p>A conforming compiler will parse Foo as a variable in the scope of T, meaning this code is an or operation between two comparisons. If you meant to use <code>Foo</code> as a function template, you must indicate that this is a template by adding the template keyword, e.g.,</p>\n<pre>\nT::template Foo&lt;a || b&gt;(c); \n</pre>\n<p>Prior to Visual Studio 2017 &ldquo;15.3&rdquo;, MSVC allowed this code <em>without</em> the template keyword because it parsed templates in a very limited fashion. The code above would not have been parsed at all in the first phase. During the second phase there&rsquo;s enough context to tell that <code>T::Foo</code> is a template rather than a variable so MSVC did not enforce use of the keyword.</p>\n<p>This behavior can also be seen by eliminating the keyword <code>typename</code> before names in function template bodies, initializers, default arguments, and <code>noexcept</code> arguments. Consider this code:</p>\n<pre>\ntemplate&lt;typename T&gt;\ntypename T::TYPE func(typename T::TYPE*)\n{\n    typename T::TYPE i;\n}\n</pre>\n<p>If you remove the keyword <code>typename</code> in the function body on line 4, MSVC would have still compiled this code whereas a conforming compiler would reject the code. You need the <code>typename</code> keyword to indicate that the <code>TYPE</code> is dependent. Because MSVC previously didn&rsquo;t parse the body it didn&rsquo;t require the keyword. <a href=\"https://godbolt.org/g/PZNK6B\">You can see this example in the online Compiler Explorer</a>. Since compiling such code under the MSVC conformance mode, (<code>/permissive-</code>), will result in errors, as you move forward to MSVC versions 19.11 and beyond, make sure to look for places like this where the <code>typename</code> keyword is missing.</p>\n<p>Similarly, in this code sample:</p>\n<pre>\ntemplate&lt;typename T&gt;\ntypename T::template X&lt;T&gt;::TYPE func(typename T::TYPE)\n{\n    typename T::template X&lt;T&gt;::TYPE i;\n}\n</pre>\n<p>MSVC previously only required the <code>template</code> keyword on line 2. A conforming compiler requires the <code>template</code> keyword on line 4 as well to indicate that <code>T::X&lt;T&gt;</code> is a template. Uncomment the keyword in <a href=\"https://godbolt.org/g/yMazjQ\">this example on the Compiler Explorer</a> to see the error in action. Again, keep this missing keyword in mind as you move your code forward.</p>\n<h3>Two Phase Name Lookup in Visual Studio 2017 &ldquo;15.3&rdquo;</h3>\n<p>We introduced a &ldquo;conformance mode&rdquo; switch with Visual Studio 2017. In the v141 compiler toolset released with VS2017 you can use the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><span>/permissive-<span> switch</span></span></a> to turn on this conformance mode. (In the next major compiler revision, conformance mode will be on by default. At that point you&rsquo;ll be able to use the /permissive switch to request the conformance mode (without the <code>-</code>) much like the <code>-fpermissive</code> switch in other compilers.) One of the big features missing when we introduced the <code>/permissive-</code> switch was two-phase name lookup, which has now been partially implemented in the compiler that ships with VS2017 &ldquo;15.3&rdquo;.</p>\n<p>There are a few missing parts to our two-phase name lookup support&mdash;see the section <a href=\"https://blogs.msdn.microsoft.com/vcblog#What's%20coming%20next\">&ldquo;What&rsquo;s coming next&rdquo;</a> below for details. But the MSVC compiler now parses correctly and enforces syntax rules strictly for:</p>\n<ul><li>Class templates</li>\n<li>Bodies of function templates and member functions of class templates</li>\n<li>initializers, including member initializers</li>\n<li>default arguments</li>\n<li><code>noexcept</code> arguments</li>\n</ul><p>Additionally, the MSVC implementation of the STL is fully two-phase clean (validated by <code>/permissive-</code> in MSVC as well as Clang&rsquo;s <code>-fno-ms-compatibility -fno-delayed-template-parsing</code>). We&rsquo;ve recently gotten ATL to be two-phase clean; if you find any lingering bugs please be sure to let us know!</p>\n<p>But what do you do for your legacy code that may rely on the old, incorrect MSVC behavior? You can still use <code>/permissive-</code> for the rest of the conformance improvements even if your code isn&rsquo;t quite yet ready to have template bodies parsed and dependent names bound correctly. Just throw the <code>/Zc:twoPhase-</code> switch to turn off template parsing and dependent name binding. Using this switch will cause the MSVC compiler to use the old behavior with non-standard semantics, giving you a chance to fix your code to compile correctly with a conforming MSVC compiler.</p>\n<p>If you are using the Windows RedStone2 (&ldquo;Creators Update&rdquo;) SDK with the <code>/permissive-</code> switch, you&rsquo;ll need to temporarily disable two-phase name lookup by using the <code>/Zc:twoPhase-</code> switch until the Windows RedStone 3 (&ldquo;Fall Creators Update&rdquo;) SDK is available. This is because the Windows team has been working with the MSVC team to make the SDK headers work properly with two-phase name lookup. Their changes will not be available until the RedStone3 Windows SDK is released, nor will the changes for two-phase name lookup be ported back to the RedStone2 Windows SDK.</p>\n<p><a></a></p>\n<h3>What&rsquo;s coming next</h3>\n<p>MSVC&rsquo;s support for two-phase name lookup is a work in progress. Here&rsquo;s a list of what&rsquo;s left to come in future updates to MSVC in Visual Studio 2017. Remember that you need to use the <code>/permissive-</code> switch with these examples to enable two-phase lookup.</p>\n<ol><li>Undeclared identifiers in templates are not diagnosed. E.g.\n<pre>\ntemplate&lt;class T&gt;\nvoid f()\n{\n    i = 1; // Missing error: `i` not declared in this scope\n}\n</pre>\n<p>MSVC does not emit an error that <code>`i`</code> is not declared and the code compiles successfully. Adding an instantiation of <code>f</code> causes the correct errors to be generated:</p>\n<pre>\ntemplate&lt;class T&gt;\nvoid f()\n{\n    i = 1; // Missing error: `i` not declared in this scope\n}\n\nvoid instantiate()\n{\n    f&lt;int&gt;();\n}\n</pre>\n<pre>\nC:tmp&gt; cl /c /permissive- /diagnostics:caret one.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\none.cpp\nc:tmpone.cpp(4,5): error C2065: 'i': undeclared identifier\n    i = 1;\n    ^\nc:tmpone.cpp(9): note: see reference to function template instantiation 'void f&lt;int&gt;(void)' being compiled\n    f&lt;int&gt;();\n</pre>\n</li>\n<li>The MSVC compiler with VS 2017 &ldquo;15.3&rdquo; will generate an error for missing <code>template</code> and <code>typename</code> keywords but will not suggest adding these keywords. Newer compiler builds give more informative diagnostics.\n<pre>\ntemplate &lt;class T&gt;\nvoid f() {\n   T::Foo&lt;int&gt;();\n}\n</pre>\n<p>The MSVC compiler shipped with VS 2017 &ldquo;15.3&rdquo; gives this error:</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret two.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25506 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\ntwo.cpp\ntwo.cpp(3,16): error C2187: syntax error: ')' was unexpected here\n   T::Foo&lt;int&gt;();\n               ^\n</pre>\n<p>Builds of the compiler that will ship with future updates of VS 2017 give a more informative error:</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret two.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\ntwo.cpp\ntwo.cpp(3,7): error C7510: 'Foo': use of dependent template name must be prefixed with 'template'\n   T::Foo&lt;int&gt;();\n      ^\ntwo.cpp(3,4): error C2760: syntax error: unexpected token 'identifier', expected 'id-expression'\n   T::Foo&lt;int&gt;();\n   ^\n</pre>\n</li>\n<li><!-- THREE -->The compiler is not properly looking up functions during argument-dependent lookup. This can result in the wrong function being called at runtime.\n<pre>\n#include &lt;cstdio&gt;\n\nnamespace N\n{\n    struct X {};\n    struct Y : X {};\n    void f(X&amp;) \n    { \n        std::puts(\"X&amp;\"); \n    }\n}\n\ntemplate&lt;typename T&gt;\nvoid g()\n{\n    N::Y y;\n    f(y); // This is non-dependent but it is not found during argument-dependent lookup so it is left unbound.\n}\n\nvoid f(N::Y&amp;)\n{\n    std::puts(\"Y&amp;\");\n}\n\nint main()\n{\n    g&lt;int&gt;();\n}\n</pre>\n<p>The output from running this program is the above is <code>Y&amp;</code> when it should be <code>X&amp;</code>.</p>\n<pre>\nC:tmp&gt;cl /permissive- /diagnostics:caret three.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25506 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nthree.cpp\nMicrosoft (R) Incremental Linker Version 14.11.25506.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n/out:three.exe\nthree.obj\n\nC:tmp&gt;three\nY&amp;\n</pre>\n</li>\n<li>Non-type dependent expressions involving local declarations aren&rsquo;t analyzed correctly. The MSVC compiler currently parses the type as dependent causing an incorrect error.\n<pre>\ntemplate&lt;int&gt; struct X \n{ \n    using TYPE = int; \n};\n\ntemplate&lt;typename&gt;\nvoid f()\n{\n    constexpr int i = 0;\n    X&lt;i&gt;::TYPE j;\n}\n</pre>\n<p>A syntax error is issued because the <code>i</code> is not properly analyzed to be a non-value dependent expression when the value of the expression on line 9 is not type-dependent.</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret four.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nfour.cpp\nfour.cpp(10,16): error C2760: syntax error: unexpected token 'identifier', expected ';'\n    X&lt;i&gt;::TYPE j;\n               ^\nfour.cpp(10,5): error C7510: 'TYPE': use of dependent type name must be prefixed with 'typename'\n    X&lt;i&gt;::TYPE j;\n    ^\n</pre>\n</li>\n<li>Neither redeclaration of template parameters and redefinition of template function arguments as local names are reported as errors.\n<pre>\ntemplate&lt;class T&gt;\nvoid f(int i)\n{\n    double T = 0.0; // Missing error: Declaration of `T` shadows template parameter\n    float i = 0;    // Missing error: Redefinition of `i` with a different type\n}\n</pre>\n</li>\n<li><!-- SIX -->The MSVC compiler misidentifies the current instantiation in some cases. Using the keyword <code>typename</code> is legal and helps the compiler to correctly identify the current instantiation.\n<pre>\ntemplate&lt;class T&gt; struct A {\n    typedef int TYPE;\n    A::TYPE c1 = 0;    // Incorrectly fails to compile\n    A&lt;T&gt;::TYPE c2 = 0; // Incorrectly fails to compile\n};\n</pre>\n<p>Adding the keyword <code>typename</code> before each instance of <code>A</code> allows this code to compile:</p>\n<pre>\ntemplate&lt;class T&gt; \nstruct A \n{\n    typedef int TYPE;\n    typename A::TYPE c1 = 0;\n    typename A&lt;T&gt;::TYPE c2 = 0;\n};\n</pre>\n</li>\n<li>Undeclared default arguments are not diagnosed. This example demonstrates a case where the MSVC compiler is still doing one-phase lookup. It is using the declaration of <code>SIZE</code> found after the template declaration as if it were declared before the template.\n<pre>\ntemplate&lt;int N = SIZE&gt; // Missing diagnostic: Use of undeclared identifier `SIZE`\nstruct X\n{\n    int a[N];\n};\n\nconstexpr int SIZE = 42;\n\nX&lt;&gt; x;\n</pre>\n</li>\n</ol><p>All of the above issues are planned to be fixed in the next major update of MSVC in Visual Studio 2017.</p>\n<h3>Why did it take so long?</h3>\n<p>Other compilers have had two-phase name lookup implemented for quite some time. Why is MSVC just now getting it right?</p>\n<p>Implementing two-phase name lookup required fundamental changes in MSVC&rsquo;s architecture. The biggest change was to <a href=\"https://aka.ms/CompilerRejuvenation\">write a new recursive descent parser to replace the YACC-based parser</a> that we&rsquo;ve used for over 35 years.</p>\n<p>We decided early on to follow an incremental path rather than rewriting the compiler from scratch. Evolving the aged MSVC code base into a more modern code base instead of &ldquo;going dark&rdquo; on a big rewrite allowed us to make huge changes without introducing subtle bugs and breaking changes when compiling your existing code. Our &ldquo;compiler rejuvenation&rdquo; work required carefully bridging the old code and the new code, making sure all the time that large test suites of existing code continued to compile exactly the same (except where we intentionally wanted to make a change to introduce conforming behavior.) It took a bit longer to do the work in this fashion but that allowed us to deliver incremental value to developers. And we have been able to make major changes without unexpectedly breaking your existing code.</p>\n<h3>In closing</h3>\n<p>We&rsquo;re excited to finally have support for two-phase name lookup in MSVC. We know that the compiler still won&rsquo;t compile some template code correctly&mdash;if you find a case not mentioned in this post, please reach out to us so that we can fix the bug!</p>\n<p>All of the code samples in this post now compile (or fail to compile, when appropriate) correctly according to the Standard. You&rsquo;ll see this new behavior with Visual Studio 2017 &ldquo;15.3&rdquo;, or you can try it out right now <a href=\"https://aka.ms/dailymsvc\">using a daily build of the MSVC compiler</a>.</p>\n<p>Now is a good time to start using the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><code>/permissive-</code> switch</a> to move your code forward. Remember when you run into template parsing errors that adding the keywords <code>template</code> and <code>typename</code> that MSVC did not previously require (<a href=\"https://blogs.msdn.microsoft.com/vcblog#MSVC%20behavior%20prior%20to%20Visual%20Studio%202017%2015.3\">see above</a>) might fix the error.</p>\n<p>If you have any feedback or suggestions for us, let us know. We can be reached via the comments below, via email (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) and you can provide feedback via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Help &gt; Report A Problem in the product</a>, or via <a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">Developer Community</a>. You can also find us on Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) and Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>).</p>","LastUpdateTime":"2017-09-12T09:28:11","Link":"https://blogs.msdn.microsoft.com/vcblog/2017/09/11/two-phase-name-lookup-support-comes-to-msvc/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Two-phase name lookup support comes to MSVC","Type":1,"TitleCn":"两相名称查找支持来到 MSVC","Content":"<p><em>这篇文章写的坦维尔简一、 篇幅、 安德鲁 · 马里诺，加布里埃 Dos Reis，和安德鲁 Pardoe</em></p>\n<p>\"两相名称查找\"是一个非正式的术语，指的是一套规则的模板声明中使用的名称解析。<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">这些规则被正式确定</a>两个以上几十年前在试图调和两个对立模板编译模型: （大多数开发人员知道模板的今天），包含模型和分离模型 （原始设计的依据为模板）。你可以找到从属名称成因本文基础<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1992/N0209.pdf\">模板规范提出修订</a>，牢固地植根于一个定义规则原则。如果你有兴趣在深入光荣的细节，你可以在部分 17.6 （稳定名称 [temp.res]） 的<a href=\"https://wg21.link/N4659\">C + + 17 草案标准</a>在现代术语找到这些规则。在过去几个月 MSVC 编译器来自具有两相的名称查找到被大多数代码可用于不支持。我们会完成完整的支持，为此在未来的视觉工作室 2017年更新的功能。</p>\n<p>您需要使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"> <code>/permissive-</code> 一致性开关</a>，使两相 MSVC 编译器附带视觉工作室 2017\"15.3\"中的查找。两相名称查找彻底改变一些代码的含义，所以 MSVC 的当前版本默认情况下不启用功能。</p>\n<p>这篇文章探讨到底什么两相名称查找需要什么目前实施 MSVC，以及如何善用 MSVC 的部分，但大量支持两相名称查找。我们会告诉你如何选择退出的两相查找，即使你想其余的您的代码以严格符合标准。最后，我们会解释一下，为什么我们花了这么长时间来这儿 — — 这些规则都至少 25 岁 ！</p>\n<h3>\"两相名称查找\"是什么？</h3>\n<p>C + + 模板的原始设计意味着要做\"模板\"一词意味着什么： 一个模板将杜绝家庭的类和函数。它允许和鼓励，但不是要求，早期的非依赖名称检查。因此，标识符不需要在模板定义的分析过程中抬头。相反，编译器被允许延迟名称查找，直到模板被实例化。同样，模板的语法不需要实例化之前验证。基本上，在模板中使用的名称的含义不是确定直到模板被实例化。</p>\n<p>根据这些原始的规则，以前版本的 MSVC 了非常有限的模板解析。 尤其是，函数模板机构都不被解析所有直到实例化。编译器作为标记流是重播期间实例化模板在需要的时候它可能存在的候选记录模板的身体。</p>\n<p>让我们考虑一下这意味着什么，看一段代码。所以你可以玩的代码，当你读完这篇文章，对在线编译器提供链接。</p>\n<pre>\n#include &lt; cstdio &gt;\n\n无效 func(void*) {std::puts （\"调用解析为 void *\"）;}\n\n&lt; typename T &gt; 模板无效 g(T x)\n{\n    func(0);\n}\n\n空 func(int) {std::puts （\"调用解析为 int\"）;}\n\nmain （) int \n{\n    g(3.14);\n}\n</pre>\n<p>在第 7 行调用，这些重载解决？<code>void*</code>过载已经宣布在模板写在 5 号线的点。函数 <code>void func(int)</code> 编写模板时并不存在。因此，调用函数模板到第 14 行 <code>void g(T x)</code> 线上 5 应解决功能 <code>void func(void*)</code> 第 3 行。</p>\n<p>符合标准的编译器在编译时该程序打印\" <code>The call resolves to void*</code> \"。你可以<a href=\"http://rextester.com/YCHV46514\">看到这种行为在 GCC</a>使用 Rextester 在线编译器。<a href=\"http://rextester.com/JAO93001\">使用 MSVC 从 Visual Studio 2015 年</a>，没有支持的两相的名称查找该程序打印\"是调用解析到 int\"。</p>\n<p>MSVC 为什么这错了？我们用来解析模板力学工作时模板简单，但有限的编译器两相名称查找来玩的时候能做些什么。MSVC 以前记录模板的身体作为一个标号流，并存储该流走了，在实例化时重播。从记录的标记流 MSVC 的模板替换的行为有点类似宏替换的行为在这的模板正文进行有限的分析。</p>\n<p>在此示例中，MSVC 存储为函数模板的标记流 <code>void g(T x)</code> 。如果编译器分析了函数调用它遇到点只有宣言 》 为 <code>void func(void*)</code> 将已经重载中套。(请注意，是有效的匹配项调用 <code>func(0)</code> 因为 c + + 允许 <code>0</code> 来表示一个<a href=\"http://en.cppreference.com/w/cpp/language/implicit_conversion\">空指针常量，可以转换为任何指针类型</a>.)</p>\n<p>函数重载 <code>void func(int)</code> 也将调用匹配 <code>func(0)</code> 在点设置的除外，它不应该在重载函数模板 <code>void g(T x)</code> 进行了评价。但 MSVC 没有实例化之前评估模板的身体 — — 后宣言 》 <code>void func(int)</code> 也加入了重载集。此时，编译器拿一个整型参数的更好匹配： <code>int</code> 而不是 <code>void*</code> 。</p>\n<p>你可以看到两个编译器在<a href=\"https://godbolt.org/g/PP71ed\">此项上在线编译器资源管理器中的示例代码</a>中的行动。海合会拒绝编译代码示例，当第 3 行注释掉了，而 MSVC 愉快地匹配甚至不在点定义一个函数模板写。它将被视为非法的代码如果不是一个模板，但我们破碎的模板替换力学允许编译器接受此代码。</p>\n<p>C + + 标准委员会意识到，在模板中编写的代码应该不会巧妙地受到周围的环境，同时还要维护 ODR。他们<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">的<em>依赖性</em>和<em>非依赖性</em>名称概念</a>中模板的名称绑定规则中因为它会令人惊讶行为要写在第 10 行的函数更改它上面代码的含义。</p>\n<p>规则的标准 [temp.res] 节中列出三种名称：</p>\n<ol><li>在模板中声明的名称的模板和名称</li>\n<li>依赖于模板参数的名称</li>\n<li>从可见里面的模板定义的作用域的名称</li>\n</ol><p>第一和第三类是非依赖名称。他们注定在模板的定义和留的约束，在每个实例化该模板。实例化模板时，他们永远不会看着。（见 §17.6 [temp.res]/10，§17.6.3 [temp.nondep] 在<a href=\"https://wg21.link/N4659\">草案标准</a>的详细信息）</p>\n<p>第二类是从属名称。从属名称不在模板定义绑定。相反，抬头这些名称实例化模板时。对于具有关联函数名称的函数调用，绑定到可见的模板定义中调用的函数集的名称。在模板定义的点和点的实例化模板时添加其他重载从参数相关的查找。（见 §17.6.2 [temp.dep]、 [temp.dep.res]，§17.6.4 和 §17.6.4.2 [temp.dep.candidate] 在<a href=\"https://wg21.link/N4659\">草案标准</a>的详细信息）。</p>\n<p>它是定义的重要的是定义的注意点的模板，但点之前的模板实例化后宣布的重载是否他们定义的通过参数相关的查找找到只会被视为。MSVC 以前没做参数相关的查找分别从普通、 不合格的查找所以此行为变化可能令人惊讶。</p>\n<p>这也是<a href=\"https://wandbox.org/permlink/7AbIQS19ZItMMRkb\">上 Wandbox 在线编译器可用</a>的代码示例，请考虑：</p>\n<pre>\n#include &lt; cstdio &gt; \n\n无效 func(long) {std::puts(\"func(long)\")};\n\n&lt; typename T &gt; 模板无效喵 (T t) {\n    func(t);\n}\n\n空 func(int) {std::puts(\"func(int)\")};\n\n命名空间的小猫 {\n    结构薄荷 {};\n    空 func(Peppermint) {std::puts(\"Kitty::func(Kitty::Peppermint)\")};\n}\n\nint main （) {\n    meow(1729);\n    Kitty::Peppermint 胡椒;\n    meow(pepper);\n}\n</pre>\n<p>调用 <code>meow(1729)</code> 将解析为 <code>void func(long)</code> 过载，不 <code>void func(int)</code> 重载，因为不合格 <code>func(int)</code> 声明后模板的定义并不通过参数相关的查找找到。但是 <code>void func(Peppermint)</code> 并参与参数相关的查找，因此它添加到设置为调用的重载 <code>meow(pepper)</code> 。</p>\n<p>从上面的例子，你可以看到\"两相查找\"这两个阶段是对非依赖名称时的模板定义的查找和查找从属名称在模板实例化的时候。</p>\n<p><a></a></p>\n<h3>视觉工作室 2017\"15.3\"前 MSVC 行为</h3>\n<p>从历史上看，当遇到一个模板，MSVC 编译器采取了以下步骤：</p>\n<ul><li>当解析一个类模板，MSVC 以前解析只有模板声明、 类的头和基类列表。模板正文被俘作为令牌流。没有函数体，初始值设定项，默认参数，或 <code>noexcept</code> 参数都被解析。类模板是伪实例化要验证中的类模板的声明是正确的\"暂定\"类型。例如采取此类模板： <code>template &lt;typename T&gt; class Derived : public Base&lt;T&gt; { ... }</code> 。模板声明， <code>template &lt;typename T&gt;</code> ，类的头， <code>class Derived</code> ，和基底类别列表中， <code>public Base&lt;T&gt;</code> 模板正文，但解析 <code>{ ... }</code> ，作为令牌流捕获。</li>\n<li>当解析函数模板，MSVC 以前解析只有函数签名。函数体永远不会解析 — — 它被捕获作为令牌流。因此，如果模板正文有语法错误和模板永远不会实例化错误从来没有确诊。</li>\n</ul><p>怎么这种行为引起的不正确解析的示例可以看到如何 MSVC 不需要关键字 <code>template</code> 和 <code>typename</code> 无处不在他们 c + + 标准要求他们。这些关键字在一些职位需要消除歧义如何编译器查找第一阶段就应解析依赖的名称。例如，考虑下面这行代码：</p>\n<pre>\nT::Foo &lt; | |b &gt; (c); \n</pre>\n<p>这个代码是函数模板的参数调用 <code>a || b</code> 吗？或这是一种逻辑-或表达与 <code>T::foo &lt;</code> 的左操作数和 <code>b &gt; (c)</code> 为右操作数？</p>\n<p>符合的编译器将解析 Foo 中的 T，意思这段代码范围的变量或两个比较操作。如果你打算使用 <code>Foo</code> 作为一个函数模板，您必须指示这是一个模板，通过添加模板关键字，例如，</p>\n<pre>\nT::template 美孚 &lt; | |b &gt; (c); \n</pre>\n<p>在 Visual Studio 2017 年\"15.3\"之前, MSVC 允许此代码<em>没有</em>模板关键字因为它解析模板在非常有限的时尚。上面的代码会没有分析在所有第一阶段。在第二阶段还有足够的上下文说 <code>T::Foo</code> 是一个模板，而不是一个变量，所以 MSVC 不执行使用的关键字。</p>\n<p>这种行为还可以被消除的关键字 <code>typename</code> 之前在函数模板体，初始值设定项，默认参数名称和 <code>noexcept</code> 参数。请考虑此代码：</p>\n<pre>\n模板 &lt; typename T &gt;\ntypename T::TYPE func (typename T::TYPE *)\n{\n    typename T::TYPE;\n}\n</pre>\n<p>如果你移除相应的关键字 <code>typename</code> 4 号线在函数体内，MSVC 会有仍然编译此代码而符合的编译器会拒绝代码。你需要 <code>typename</code> 关键字来表明， <code>TYPE</code> 是依赖。因为 MSVC 以前没有解析人体不需要的关键字。<a href=\"https://godbolt.org/g/PZNK6B\">您可以看到此在线编译器资源管理器中的示例</a>。自编译 MSVC 一致性模式下，此类代码 ( <code>/permissive-</code> )，将导致错误，因为你向前移动到 MSVC 版本 19.11 和超越，一定要找地方这哪里像 <code>typename</code> 关键字是缺掉的。</p>\n<p>同样地，在此代码示例：</p>\n<pre>\n模板 &lt; typename T &gt;\ntypename T::template X &lt; T &gt;:: 类型 func (typename T::TYPE)\n{\n    typename T::template X &lt; T &gt;:: 第一类;\n}\n</pre>\n<p>此前仅要求 MSVC <code>template</code> 关键字上第 2 行。符合标准的编译器需要 <code>template</code> 以及表明，4 号线上的关键字 <code>T::X&lt;T&gt;</code> 是一个模板。取消注释<a href=\"https://godbolt.org/g/yMazjQ\">此示例对编译器资源管理器</a>来查看操作中的错误中的关键字。再次，牢记此缺少关键字你向前移动您的代码。</p>\n<h3>两相在 Visual Studio 2017 年\"15.3\"名称查找</h3>\n<p>我们介绍了视觉工作室 2017年\"一致性模式\"开关。在释放与 VS2017 v141 编译器工具集，您可以使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><span>/ 许可-<span>切换</span></span></a>打开这个一致性模式。（在接下来的主要编译器修订中，一致性模式会在默认情况下。At that point，你将能够使用 / 许可开关要求一致性模式 (没有 <code>-</code> ) 喜欢 <code>-fpermissive</code> 开关在其他编译器。)失踪时我们介绍的大功能之一 <code>/permissive-</code> 开关是两相名称查找，现在已部分执行船舶与 VS2017 的编译器中\"15.3\"。</p>\n<p>有几个缺少对我们两相名称查找支持的部分 — — 请参阅下面的<a href=\"https://blogs.msdn.microsoft.com/vcblog#What's%20coming%20next\">\"下一个什么\"</a>的详细信息。但 MSVC 编译器现在正确地解析和强制执行严格的语法规则：</p>\n<ul><li>类模板</li>\n<li>函数模板和类模板的成员函数的尸体</li>\n<li>初始值设定项，包括成员初始值设定项</li>\n<li>默认参数</li>\n<li><code>noexcept</code>参数</li>\n</ul><p>此外，STL MSVC 实施清洁是完全两相 (通过验证 <code>/permissive-</code> MSVC 一样铿锵的 <code>-fno-ms-compatibility -fno-delayed-template-parsing</code> )。我们最近得到了 ATL 是两相清洁;如果您发现任何挥之不去的错误请务必让我们知道 ！</p>\n<p>但你做什么你可能依赖于旧的、 不正确 MSVC 行为的遗留代码吗？您仍然可以使用 <code>/permissive-</code> 余生的一致性改进，即使您的代码还没完全准备好了模板机构解析和从属名称正确绑定。只是扔 <code>/Zc:twoPhase-</code> 开关关闭模板解析和从属名称绑定。使用此开关将导致 MSVC 编译器使用的旧的行为与非标的语义，给你一个机会来解决您的代码以使用符合的 MSVC 编译器编译正确。</p>\n<p>如果您使用的 Windows RedStone2 （\"创作者更新\"） SDK 与 <code>/permissive-</code> 开关，您需要暂时禁用两相名称查找通过使用 <code>/Zc:twoPhase-</code> 开关直到 Windows 红石 3 （\"秋天创作者更新\"） SDK 是可用。这是因为 Windows 团队一直与 MSVC 团队作出的 SDK 头与两相名称查找一起正常工作。他们的更改将不可用，直到 RedStone3 Windows SDK 释放，也不会回到 RedStone2 Windows SDK 移植两相名称查找所做的更改。</p>\n<p><a></a></p>\n<h3>下一个什么</h3>\n<p>两相名称查找 MSVC 的支持是进行中的工作。这里是一个列表的什么留下来在未来更新 MSVC 视觉工作室 2017 年。请记住，您需要使用 <code>/permissive-</code> 开关使用这些示例，以使两相的查找。</p>\n<ol><li>在模板中的未申报的标识符才得到确诊。例如<pre>\n&lt; T 类 &gt; 模板\n无效 f （）\n{\n    我 = 1; / / 缺少错误: '我' 不在此范围内声明\n}\n</pre>\n<p>MSVC 不会发出错误， <code>`i`</code> 不声明和代码编译成功。添加实例化 <code>f</code> 导致生成正确的错误：</p>\n<pre>\n&lt; T 类 &gt; 模板\n无效 f （）\n{\n    我 = 1; / / 缺少错误: '我' 不在此范围内声明\n}\n\n无效 instantiate()\n{\n    &lt; int &gt; f （);\n}\n</pre>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret one.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\none.cpp\nc:tmpone.cpp(4,5)： 错误 C2065: '我': 未声明的标识符\n    我 = 1;\n    ^\nc:tmpone.cpp(9)： 注： 请参阅参考，函数模板实例化 '无效 f &lt; int &gt; (void) 正在编译\n    &lt; int &gt; f （);\n</pre>\n</li>\n<li>与 VS 2017\"15.3\"MSVC 编译器将生成一个错误找不到 <code>template</code> 和 <code>typename</code> 关键字，但不是会建议添加这些关键字。较新的编译器生成给更多的信息诊断。<pre>\n&lt; T 类 &gt; 模板\n无效 f （） {\n   T::Foo &lt; int &gt; （);\n}\n</pre>\n<p>MSVC 编译器附带 VS 2017\"15.3\"给出了此错误：</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret two.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25506 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\ntwo.cpp\ntwo.cpp(3,16): C2187 错误： 语法错误: ')' 在这里出乎意料\n   T::Foo &lt; int &gt; （);\n               ^\n</pre>\n<p>生成的编译器，将船舶的 VS 2017 给未来更新更详细的错误：</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret two.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\ntwo.cpp\ntwo.cpp(3,7)： 错误 C7510: Foo： 使用依赖的模板名称必须与模板为前缀\n   T::Foo &lt; int &gt; （);\n      ^\ntwo.cpp(3,4): C2760 错误： 语法错误： 意外的令牌标识符，预期的 'id 表达'\n   T::Foo &lt; int &gt; （);\n   ^\n</pre>\n</li>\n<li><!-- THREE -->编译器不正确查找功能期间参数相关的查找。这可能导致错误的函数在运行时被调用。<pre>\n#include &lt; cstdio &gt;\n\n命名空间 N\n{\n    结构 X {};\n    结构 Y: X {};\n    无效的 f(X&amp;) \n    { \n        std::puts (\"X &amp;\"); \n    }\n}\n\n模板 &lt; typename T &gt;\n无效 g()\n{\n    N::Y y;\n    f(y);这是非依赖但它找不到在参数相关的查找过程中所以就是未绑定。\n}\n\n无效的 f(N::Y&amp;)\n{\n    std::puts (\"Y &amp;\");\n}\n\nmain （) int\n{\n    g &lt; int &gt; （);\n}\n</pre>\n<p>运行此程序的输出是以上就是 <code>Y&amp;</code> 时，它应该是 <code>X&amp;</code> 。</p>\n<pre>\nC:tmp &gt; cl / 许可-/diagnostics:caret three.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25506 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\nthree.cpp\nMicrosoft （R） 增量链接器版本 14.11.25506.0\n版权所有 （C) Microsoft Corporation。  版权所有。\n\n/out:three.exe\nthree.obj\n\nC:tmp &gt; 三\nY &amp;\n</pre>\n</li>\n<li>非类型取决于表达式涉及局部声明不正确分析。MSVC 编译器目前分析作为依赖导致不正确的错误类型。<pre>\n&lt; int &gt; 模板结构 X \n{ \n    使用类型 = int; \n};\n\n模板 &lt; typename &gt;\n无效 f （）\n{\n    constexpr int 我 = 0;\n    X &lt; i &gt;:: 类型 j;\n}\n</pre>\n<p>语法错误发出因为 <code>i</code> 没有正确分析要非值取决于表达式时在第 9 行的表达式的值不是类型相关。</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret four.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\nfour.cpp\nfour.cpp(10,16): C2760 错误： 语法错误： 意外的标记 '标识符' 预期 ';'\n    X &lt; i &gt;:: 类型 j;\n               ^\nfour.cpp(10,5)： 错误 C7510: TYPE： 使用依赖类型名称必须以 typename 为前缀\n    X &lt; i &gt;:: 类型 j;\n    ^\n</pre>\n</li>\n<li>既不重定义的模板参数和重新定义的模板函数参数作为本地名称都报告为错误。<pre>\n&lt; T 类 &gt; 模板\n无效 f(int i)\n{\n    双 T = 0.0; / / 缺少错误: 宣言 》 不 ' 阴影模板参数\n    浮我 = 0;    缺少错误： 重新界定与不同类型的 ' 我'\n}\n</pre>\n</li>\n<li><!-- SIX -->MSVC 编译器错在某些情况下的当前实例。使用关键字 <code>typename</code> 是合法的可以帮助编译器正确识别当前实例化。<pre>\n&lt; T 类 &gt; 模板结构 A {\n    typedef int 类型;\n    A::TYPE c1 = 0;    不正确地编译失败\n    &lt; T &gt;:: 类型 c2 = 0; / / 不正确编译失败\n};\n</pre>\n<p>添加关键字 <code>typename</code> 之前的每个实例 <code>A</code> 允许编译此代码：</p>\n<pre>\n&lt; T 类 &gt; 模板 \n结构 A \n{\n    typedef int 类型;\n    typename A::TYPE c1 = 0;\n    typename &lt; T &gt;:: 类型 c2 = 0;\n};\n</pre>\n</li>\n<li>未申报的默认参数才得到确诊。此示例演示在哪 MSVC 编译器仍然做一个阶段查找案件。它利用宣言 》 的 <code>SIZE</code> 模板声明之后发现，好像它被宣布之前的模板。<pre>\n模板 &lt; int N = 大小 &gt; / / 缺少诊断： 使用未声明的标识符 '大小'\n结构 X\n{\n    int [N];\n};\n\nconstexpr int 大小 = 42;\n\nX&lt;&gt; x;\n</pre>\n</li>\n</ol><p>所有上述问题计划在 MSVC 视觉工作室 2017 年的下一个重大更新中予以解决。</p>\n<h3>为什么花这么长时间？</h3>\n<p>其他编译器有两相名称查找实施相当一段时间。为什么 MSVC 刚才得到它正确？</p>\n<p>实施两相名称查找所需 MSVC 的体系结构的根本变化。最大的变化是<a href=\"https://aka.ms/CompilerRejuvenation\">写新的递归下降分析器，以取代基于 YACC 分析器</a>，我们已经使用超过 35 年。</p>\n<p>我们早就决定遵循增量的路径，而不是重写编译器从零开始。老年的 MSVC 代码库演变成一个更加现代的代码库而不是\"走出黑暗\"大重写允许我们自己没有引入微妙的 bug 和重大更改，您的现有代码进行编译时做出重大改变。我们需要仔细地弥合旧代码和新代码，以确保大型测试套件的现有代码继续编译完全一样的 （除了在哪里我们故意想要做一个改变，引入的所有时间的\"编译器复兴\"工作符合标准的行为）。花了更长时间去做这项工作以这种方式，但能让我们向开发商交付增量价值。我们已经能够做出重大更改，而不会意外破坏现有的代码。</p>\n<h3>在闭幕</h3>\n<p>我们都很兴奋终于在 MSVC 有两相名称查找支持。我们知道，编译器仍然不会编译一些模板代码正确 — — 如果你发现在这篇文章中没有提到一个案例，请向我们伸出，我们可以修复这个 bug ！</p>\n<p>所有的代码样本在这篇文章现在编译 （或不能编译，适当的时候） 正确的标准。你会看到这一新行为与视觉工作室 2017\"15.3\"，或者你可以试试现在<a href=\"https://aka.ms/dailymsvc\">使用 MSVC 编译器每日构建</a>。</p>\n<p>现在是好的时候，要开始使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"> <code>/permissive-</code> 切换</a>前进您的代码。记得当你遇到模板解析错误，添加关键字 <code>template</code> 和 <code>typename</code> ，MSVC 以前不要求 （<a href=\"https://blogs.msdn.microsoft.com/vcblog#MSVC%20behavior%20prior%20to%20Visual%20Studio%202017%2015.3\">见上文</a>） 可能会修复此错误。</p>\n<p>如果您有任何反馈或建议，让我们，让我们知道。我们可以通过下面，通过电子邮件 (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) 的评论，你可以提供反馈通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">帮助 &gt; 报告一个问题在产品</a>，或通过<a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">开发者社区</a>。你也可以找到我们在 Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) 和 Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>) 上。</p>"},{"Id":97,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-12T02:35:22","Description":"<p>The XAML designers in Visual Studio and Blend have been powerful tools for developers and designers alike to build beautiful user experiences for Windows applications. Initially designed for WPF development in 2007, we have made significant changes to support a wide variety of XAML platforms over the last decade. We&rsquo;ve also added new features along the way to increase developer productivity. Unfortunately, with all these changes, the performance and reliability of the designer have become less than ideal. We&rsquo;ve heard the community <a href=\"https://visualstudio.uservoice.com/forums/121579-visual-studio-ide/suggestions/2204137-improve-the-xaml-designer-performance\">loud and clear</a> and we are working hard to fix that.</p>\n<p>Read below to find out what&rsquo;s new, and try out the updates to the XAML Designer by building UWP applications targeting the upcoming Windows 10 Fall Creators Update in the latest <a href=\"https://www.visualstudio.com/vs/preview/\">Visual Studio Preview release</a>! If you want to see all the details, check out the <a href=\"https://www.visualstudio.com/news/releasenotes/vs2017-preview-relnotes\">release notes</a>.</p>\n<h2>Important note about this release</h2>\n<p>This release of the updated XAML designer is a very early preview of what&rsquo;s to come and might be rough around the edges. The drastic nature of the changes has resulted in us disabling some of the features that previously existed in the XAML designer, as well as shipping with known issues (called out in the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">release notes</a>). As a result, we are only releasing the updated designer for a small subset of XAML scenarios &ndash; specifically, for developers building UWP applications that target the Fall Creators Update. If you were building a WPF application or a UWP application targeting the existing Windows 10 Creators Update or earlier, your experience will remain unchanged.</p>\n<h2>Design considerations</h2>\n<p>We have received a lot of community feedback on the XAML designer, and based on the feedback, we&rsquo;ve prioritized the below design consideration:</p>\n<ol><li>Improve the designer performance in a significantly visible way (I can&rsquo;t reiterate enough how much we are emphasizing performance)</li>\n<li>Highest possible fidelity of the designer surface &ndash; especially focused on rendering artifacts introduced by the new <a href=\"https://fluent.microsoft.com/\">Windows Fluent Design System</a></li>\n<li>Fewer designer exceptions to keep you as productive in the design surface as possible</li>\n<li>While we rapidly iterate on this new experience, do not break or change existing XAML development in Visual Studio and Blend</li>\n<li>Last but not the least, create the tools that help you be more productive building Windows experiences</li>\n</ol><p>We believe we have made significant progress to achieve these goals and are excited to share our first iteration for you to try and provide feedback. Our ultimate goal is to make the designer load as fast as your app, and offer tooling experiences for your page to render the contents of any of your controls at design time.</p>\n<h3>Performance</h3>\n<p>Much of our efforts have been directed at making the design surface process as thin and lightweight as possible. Effectively a wrapper around your UI code, the XAML Designer will now load nearly as fast as your app itself.</p>\n<p>You can see this in action below. On the left, we have a project targeting the Fall Creators Update (therefore, leveraging the changes we have made to the designer). On the right, we have an identical project targeting the Creators Update (therefore, using the XAML design experience that you would see today). After reopening the solution, you can tell the XAML designer changes we have made result in an exponentially faster loading time. The designer on the right may look like it is stuck, but if you look closely you can see the loading bar at the top of the designer. Be patient and you&rsquo;ll see it load eventually!</p>\n<p><strong><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\" rel=\"noopener noreferrer\"><img width=\"1774\" height=\"1097\" title=\"XAML Designer PerformanceXAML Designer Performance - side by side comparison\" alt=\"XAML Designer Performance - side by side comparison\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\"></a></strong></p>\n<h3>Fidelity</h3>\n<p>At the Build 2017 event back in May, Microsoft announced the new UI design system known as <a href=\"https://fluent.microsoft.com/\">Fluent</a>. With the Fall Creators Update, we are beginning to introduce new controls built on this new universal design language. Fluent places heavy emphasis on the core building blocks: light, depth, motion, material, and scale. To achieve these UI effects, heavy use of composition is necessary.</p>\n<p>The existing XAML designer does not execute code in the design process that leverages composition APIs and therefore cannot render many of these new experiences. A clearly visible example is demonstrated below, with the new Fall Creators Update &lsquo;AcrylicBrush&rsquo; resource. The left shows the XAML designer in this preview and the right shows the XAML designer as you would have experienced it in a previous release.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\" rel=\"noopener noreferrer\"><img width=\"1773\" height=\"975\" title=\"XAML Designer\" alt=\"XAML Designer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\"></a></p>\n<h3>Reliability</h3>\n<p>Previously, the XAML designer always executed against the desktop .NET Framework. Since UWP is built on top of .NET Core, this would sometimes result in reliability issues as the design process had problems with .NET Core types (e.g. <a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>). Going forward, the XAML Designer will always execute against the .NET runtime environment used by your application, so type forwarding issues are mitigated and general reliability of the designer should be improved.</p>\n<p>The XAML designer has been successful at providing a meaningful design-time preview of your UI because we try to execute your code as close as possible to the runtime environment of your app. One side effect of this is that misbehaved code doesn&rsquo;t work well, something that you can continue to protect with <a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">design mode APIs</a>.</p>\n<p>With that in mind, there are still cases where code in development may cause exceptions and crash the designer. By investing in making the designer load in just a couple of seconds, we believe it will be much easier to iterate more quickly on your work-in-progress code.</p>\n<h2>Built from the Ground Up</h2>\n<p>For us to be able to make a big impact on our top priorities, the XAML Designer needed to undergo a drastic architectural change. In addition, we wanted to provide investments that would improve all XAML development experiences, including XAML Edit &amp; Continue. With that in mind, we decided to use the same technology that powers XAML Edit &amp; Continue to power the future of the XAML Designer.</p>\n<p>Let&rsquo;s take a deeper look at some of the other big changes that warrant a reinvestment. This next section is for those of you interested in knowing the nitty-gritty details of the changes we are making to the XAML designer.</p>\n<h3>Architecture Changes</h3>\n<p>At a high-level, the architecture change consists of a redesign of the designer surface process (UwpSurface.exe) to be as lightweight and small as possible. The xdesproc.exe process, used by the existing XAML designer, did a lot &ndash; it contained the code to all the XAML editor and design features (in WPF), it would load in type metadata for your app and the developer&rsquo;s ViewModels, and it also executed actual design process to show the preview in the XAML designer. If any one of those had a problem, the design process would crash. Restarting the designer (or opening a new page) would take too long because the process itself would be doing so much work every time you load a new page.</p>\n<p>With this XAML designer update, we are making the design surface process (UwpSurface.exe) as thin and lightweight as possible. It is effectively a wrapper around your app&rsquo;s UI code (this is where the technology that enables XAML Edit &amp; Continue comes in). Since the process itself is doing so little, loading the XAML designer should be as fast as launching your application when we are all done with the effort.</p>\n<p>Since UwpSurface.exe will still run your controls, you need to be careful with your code behind to not crash the designer &ndash; for instance, you must still not dereference your application object at design time. With the redesign, UwpSurface.exe offers additional rendering capability so we have introduced a new design mode API: Windows.ComponentModel.DesignMode.IsDesignMode2Enabled. This allows you to control runtime code execution for the new designer surface process, and continue to offer checks when the same code executes in the existing designer. Our expectation is that you will be able to relax many of the design time checks you might have added in the past. Check out the <a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">docs</a> for more information.</p>\n<p>In addition, xdesproc.exe had a significant dependency on the desktop .NET runtime. For UWP applications, this hasn&rsquo;t had a large impact in the past. Much of the .NET API surface area for UWP was just a subset of the desktop .NET Framework, but xdesproc.exe still had problem instantiating types that did not existing in the desktop .NET Framework (like <a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>).</p>\n<p>With the introduction of the Fall Creators Update and <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\">.NET Standard 2.0</a>, this problem becomes worse and needs to be a fundamental design principle. If you were trying to leverage a new .NET API available in .NET Standard 2.0 that wasn&rsquo;t available in the desktop .NET Framework (e.g. Span&lt;T&gt;), the design surface would have crashed. With this preview of the XAML designer, we are executing your code against the runtime that matches your app &ndash; so a UWP application will execute against the .NET runtime environment for UWP.</p>\n<h3>Feature Impact</h3>\n<p>It is worth calling out again that this is a very early preview of the XAML Designer, primarily designed to get feedback around your reliability and performance, in addition to helping us identify the tools you rely on most for productivity. The set of functionality that we enabled in this preview was identified as the tools and features that you currently use the most.</p>\n<p>The XAML designer <i>does not </i>support the below features:</p>\n<ul><li>Edit Current Style</li>\n<li>Device preview settings that allow testing for high contrast, themes, etc&hellip;</li>\n<li>Visual State Management tools</li>\n<li>Animation tooling</li>\n<li>Sample data, but designer instance is supported</li>\n<li>Ordering commands</li>\n<li>Alignment commands</li>\n<li>Group into commands</li>\n<li>Combine commands</li>\n<li>Path commands</li>\n<li>Make Into Control</li>\n<li>Text edit tool</li>\n<li>Resource panels in Blend</li>\n<li>Data panels in Blend</li>\n<li>Design time resource dictionary</li>\n<li>Some of the tools in Blend tool pane</li>\n<li>Editing inside of a template</li>\n<li>Designer extensions</li>\n<li>Behaviors tooling in Blend</li>\n</ul><h3>Known Issues with this Release</h3>\n<p>As we called out earlier, this is a <b>very </b>early preview of what&rsquo;s to come. In order to get customer input as early as possible, we had to make some hard engineering decisions. With that in mind, we are aware of several issues with the new XAML Designer that are called out in the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes#known-issues\">release notes</a>.</p>\n<h2>Roadmap</h2>\n<p>As we continue to acquire feedback from our early preview releases of the XAML designer, we will continue to prioritize reimplementing the top requested tools. We will continue to improve the XAML designer with heavy emphasis on our design considerations. When we have confidence that the designer provides more productivity than the existing designer and does not break any existing workflows, we will deliver these benefits by default for an increasing number of XAML scenarios.</p>\n<p>In addition, we will be collaborating with top designer extension developers as we reimplement the XAML designer extensibility model in support of their goals.</p>\n<p>We look forward to building the best XAML designer for developers by engaging with the community early and heavily prioritizing our investments around their feedback.</p>\n<h2>Conclusion</h2>\n<p>We&rsquo;ve made a lot of progress with our updates to the XAML designer, but there is still a lot of work to be done in reimplementing the tools you have known and love. For us to provide the most meaningful design-time tooling for all XAML developers, we need your feedback!</p>\n<p>If you&rsquo;d like to help us shape the future of the XAML designer, go ahead and give it a try by creating a UWP project that targets the Fall Creators Update. If you encounter any unexpected behavior, or find that tools that you rely on are missing, please let us know by using the <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Visual Studio Report-a-Problem tool</a>. In addition, we would love to talk to you about your experience or help you with any blocking issues. Feel free to reach out to us via email at <a>xamldesignerfeedback@microsoft.com</a>. We&rsquo;re eager to hear what you think!</p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/03/daniel.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>Daniel Jacobson, </b>Program Manager for Visual Studio<br><a target=\"_blank\" href=\"https://twitter.com/pmatmic\" rel=\"noopener noreferrer\">@pmatmic</a>\n<p>Daniel is a Program Manager on Visual Studio focused on tools for Universal Windows Platform developers and NuGet. He found his passion in software development after graduating with an M.S. in Mechanical Engineering from Case Western Reserve University in 2014.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-12T02:35:22","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/09/11/a-significant-update-to-the-xaml-designer/","MobileContent":null,"PublishId":0,"Status":1,"Title":"A significant update to the XAML Designer","Type":1,"TitleCn":"一个重大更新到 XAML 设计器","Content":"<p>XAML 设计器在 Visual Studio 和混合一直对于开发人员和设计者来说，打造美丽的用户体验对于 Windows 应用程序的强大工具。最初设计用于 WPF 开发 2007 年，我们取得了重大的变化，过去十年支持各种各样的 XAML 平台。我们已经添加了一路走来提高开发人员工作效率的新功能。不幸的是，所有这些变化，性能和可靠性的设计器，已成为不甚理想。我们听说过的社区<a href=\"https://visualstudio.uservoice.com/forums/121579-visual-studio-ide/suggestions/2204137-improve-the-xaml-designer-performance\">响亮而清晰</a>，我们正在努力解决这个问题。</p>\n<p>继续阅读以下内容，以找出什么是新的并通过建立针对即将 Windows 10 秋季创作者更新在<a href=\"https://www.visualstudio.com/vs/preview/\">Visual Studio 预览发布</a>最新的 UWP 应用程序尝试对 XAML 设计器的更新 ！如果你想要看到所有的细节，查阅<a href=\"https://www.visualstudio.com/news/releasenotes/vs2017-preview-relnotes\">发行说明</a>。</p>\n<h2>有关此版本的重要说明</h2>\n<p>此版本的更新的 XAML 设计器是一个非常早期的预演，是什么来，可能是粗糙的边缘。急剧变化的性质使得我们禁用一些特性以前存在的 XAML 设计器，以及航运 （称为中的<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">发行说明</a>） 的已知问题。因此，我们只发布更新设计器对于 XAML 方案一小部分 — — 具体而言，为开发人员构建 UWP 应用程序这一指标下降创作者更新。如果你要建造一个 WPF 应用程序或应用程序针对现有 Windows 10 创作者更新或更早版本的 UWP，你的经验将保持不变。</p>\n<h2>设计考虑事项</h2>\n<p>我们收到很多社区，XAML 设计器上的反馈和基于反馈，我们优先考虑以下设计审议：</p>\n<ol><li>改进的设计器的性能明显可见的方式 （不能重申够多少我们都在强调性能）</li>\n<li>最可能的高保真度的设计器图面 — — 尤其被集中在呈现项目由新<a href=\"https://fluent.microsoft.com/\">Windows 流利设计系统</a>介绍</li>\n<li>更少的设计师异常，让您尽可能设计图面中的丰硕成果</li>\n<li>虽然我们迅速循环这种新的经验，不要打破或更改现有 XAML 开发 Visual Studio 和混合</li>\n<li>最后但并非最不重要的是，创建工具，帮助您会更有成效构建 Windows 体验</li>\n</ol><p>我们相信我们已取得重大进展，为实现这些目标，很高兴能够分享我们第一次迭代为您尝试并提供反馈。我们的最终目标是要尽快在您的应用程序，使设计器加载和提供模具经验为您的页面在设计时呈现任何您的控件的内容。</p>\n<h3>性能</h3>\n<p>很多我们的努力一直在针对工序的设计表面薄以及尽可能地轻量。有效地在 UI 代码周围的包装，XAML 设计器，将现在几乎快作为您自己的应用程序的加载。</p>\n<p>你可以看到这在下面的行动。在左边，我们有一个针对秋天创作者更新项目 （因此，利用到设计器的更改）。在右边，我们有相同的项目，针对创作者更新 （因此，使用 XAML 设计你会看到今天的经验）。重新打开解决方案，你可以告诉 XAML 设计器更改我们取得结果指数更快的加载时间。在右边设计师可能看起来像它卡住了，但如果你仔细看你可以看到顶部的设计器加载栏。耐心点，你会看到它加载最终 ！</p>\n<p><strong><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\" rel=\"noopener noreferrer\"><img width=\"1774\" height=\"1097\" title=\"XAML Designer PerformanceXAML Designer Performance - side by side comparison\" alt=\"XAML Designer Performance - side by side comparison\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\"></a></strong></p>\n<h3>富达</h3>\n<p>在生成 2017年事件早在今年五月份，微软宣布新的 UI 设计系统称为<a href=\"https://fluent.microsoft.com/\">流利</a>。与秋天创作者更新，我们开始介绍对这种新的通用设计语言中内置的新控件。流利的地方重重点核心构造块： 光、 深度、 运动、 材料和规模。为了实现这些用户界面效果，组成重使用是必要的。</p>\n<p>现有的 XAML 设计器不会执行代码，在设计过程中，利用组成的 Api，因此无法呈现很多这些新的经验。一个明显的例子示，新的秋天创作者更新 'AcrylicBrush' 资源。左边显示的 XAML 设计器在此预览和权显示 XAML 设计器作为你会经历它在以前的版本中。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\" rel=\"noopener noreferrer\"><img width=\"1773\" height=\"975\" title=\"XAML Designer\" alt=\"XAML Designer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\"></a></p>\n<h3>可靠性</h3>\n<p>以前，XAML 设计器总是针对桌面.NET 框架执行。由于 UWP 建立在.NET 核心，这有时会造成在可靠性问题，作为设计过程有.NET 核心类型 (例如<a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>) 的问题。展望未来，XAML 设计器将始终执行针对.NET 运行时环境使用您的应用程序，所以类型转发问题减轻和应提高一般可靠性的设计器。</p>\n<p>XAML 设计器已成功在提供有意义的设计时预览的 UI，因为我们试着去执行你的代码到您的应用程序的运行时环境尽可能接近。这的一个副作用是，行为不检点的代码不太好使，你可以继续保护与<a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">设计模式 Api</a>的东西。</p>\n<p>考虑到这一点，仍有的情况下发展中的代码可能会导致异常崩溃设计器。通过投资于设计器加载在仅仅几秒钟，我们相信它将循环更快地在工作中进步代码上要容易得多。</p>\n<h2>从地面建立</h2>\n<p>我们要能够在我们最高优先事项上取得很大的影响，XAML 设计器需要进行建筑的剧变。此外，我们想要提供将提高所有 XAML 的发展经验，包括 XAML 编辑和继续投资。考虑到这一点，我们决定那力量 XAML 编辑和继续使用相同的技术来驱动未来的 XAML 设计器。</p>\n<p>让我们更深层次看一些其他值得再投资的大变化。这下一节是给那些对你有兴趣知道我们到 XAML 设计器所做的更改的细节。</p>\n<h3>体系结构更改</h3>\n<p>在高级别，体系结构更改包括流程重新设计的设计器表面 (UwpSurface.exe) 是作为轻量级和尽可能小。Xdesproc.exe 的过程中，利用现有的 XAML 设计器中，做了很多 — — 它所载的所有 XAML 编辑器和设计功能 （在 WPF) 代码，它会在您的应用程序和开发人员的 Viewmodel 类型元数据加载和它也执行到实际设计过程在 XAML 设计器中显示预览。如果其中的任何一个有问题，会崩溃的设计过程。重新启动设计器 （或打开新的一页） 要花费很长的因为这个过程本身会做这么多工作，每次你加载新的一页。</p>\n<p>此 XAML 设计器的更新，我们正在设计表面过程 (UwpSurface.exe) 作为薄，尽可能地轻量。它实际上是您的应用程序的 UI 代码 （这是技术，使 XAML 编辑 &amp; 继续进来的地方） 的包装。由于这个过程本身做那么少，加载 XAML 设计器应尽快启动您的应用程序，当我们正在做的努力。</p>\n<p>因为 UwpSurface.exe 仍将运行您的控件，您需要小心你背后的代码不能崩溃设计器 — — 例如，你必须仍然不取消引用您的应用程序对象在设计时。与重新设计，UwpSurface.exe 提供额外的渲染能力，所以我们已经引入了一种新的设计模式 API: Windows.ComponentModel.DesignMode.IsDesignMode2Enabled。这允许您控制运行时代码执行的新的设计器表面过程中，并继续提供检查时，在现有的设计器中执行相同的代码。我们的期望是，你将能够放宽了许多过去添加设计时检查。签出<a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">文档</a>的详细信息。</p>\n<p>此外，xdesproc.exe 桌面.NET 运行库的有关有显著的相关性。对于 UWP 应用程序，这并没有在过去了很大影响。很多.NET API 表面积为 UWP 感到只是一个子集桌面.NET 框架，但 xdesproc.exe 仍有问题实例化类型，没有现有的桌面.NET 框架 （如<a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>) 中。</p>\n<p>与秋天创作者更新和<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\">.NET 标准 2.0</a>的介绍，这个问题变得更糟糕的是，需要有一个基本的设计原则。如果你想要利用新的.NET API 在.NET 不是桌面.NET 框架中提供的标准 2.0 中可用 (例如跨度 &lt; T &gt;)，设计图面就坠毁了。与 XAML 设计器这个预览，我们在执行对匹配您的应用程序 — — 所以为 UWP UWP 应用程序将执行针对.NET 运行时环境的运行时代码。</p>\n<h3>功能的影响</h3>\n<p>它值得再次呼唤，这是一个非常早期的 XAML 设计器预览，主要目的是获取反馈周围的可靠性和性能，以及帮助我们找出你依赖最大的生产力的工具。我们在此预览中启用的功能集被认定为的工具和你目前使用最多的功能。</p>\n<p>XAML 设计器<i>不</i>支持以下功能：</p>\n<ul><li>编辑当前样式</li>\n<li>允许为高对比度、 主题等测试的设备预览设置...</li>\n<li>可视状态管理工具</li>\n<li>动画工具</li>\n<li>示例数据，但设计器实例被支持</li>\n<li>排序命令</li>\n<li>对齐命令</li>\n<li>分组到命令</li>\n<li>组合命令</li>\n<li>路径命令</li>\n<li>使成为控制</li>\n<li>文本编辑工具</li>\n<li>共混物中的资源面板</li>\n<li>共混物中的数据面板</li>\n<li>设计时间资源字典</li>\n<li>一些在混合工具窗格中的工具</li>\n<li>在模板编辑</li>\n<li>设计器扩展</li>\n<li>模具在共混物的行为</li>\n</ul><h3>此版本的已知的问题</h3>\n<p>我们早些时候叫，这是一个<b>非常</b>的早期预览是什么来。为了得到客户的输入作为尽早，我们不得不做出一些努力工程的决定。这一点，我们所知的与新的 XAML 设计器叫出的<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes#known-issues\">发行说明</a>中的几个问题。</p>\n<h2>路线图</h2>\n<p>随着我们继续获得反馈我们早期的预览版本的 XAML 设计器中，我们将继续优先考虑重新实现顶级请求的工具。我们将继续提高我们设计考虑重的 XAML 设计器。当我们有信心设计器提供了更多的生产力，比现有的设计师并不会中断任何现有的工作流程时，我们将默认情况下，越来越多的 XAML 方案提供这些好处。</p>\n<p>此外，我们将合作与顶尖的设计器扩展开发人员为我们重新实现 XAML 设计器扩展性模型以支持他们的目标。</p>\n<p>我们期待建立最佳的 XAML 设计器开发商与社区早期和严重优先我们投资在他们的反馈意见进行。</p>\n<h2>结论</h2>\n<p>我们已经很大的进步与我们更新到 XAML 设计器，但仍有大量工作要做在重新实现的工具你已经知道和爱。为我们提供了最有意义的设计时间为所有 XAML 开发人员工具，我们需要您的反馈 ！</p>\n<p>如果你想要帮助我们塑造未来的 XAML 设计器，往前走，给它一个尝试通过创建 UWP 项目秋季创作者更新为目标。如果你遇到任何意外的行为，或者发现丢失了你依赖的工具，请让我们知道通过使用<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Visual Studio 报告一个问题的工具</a>。此外，我们很乐意跟你谈谈你的经验或帮助您解决任何阻塞的问题。请随时通过电子邮件在<a>xamldesignerfeedback@microsoft.com</a>向我们伸出。我们急切地想听到你的想法 ！</p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/03/daniel.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>丹尼尔 · 雅各布森</b>Visual studio 项目经理<br><a target=\"_blank\" href=\"https://twitter.com/pmatmic\" rel=\"noopener noreferrer\">@pmatmic</a>\n<p>丹尼尔是 Visual Studio 专注工具为通用 Windows 平台开发人员和 NuGet 程序经理。他在软件开发中在 2014 年从凯斯西储大学的机械工程硕士毕业后，发现他的激情。</p></td>\n</tr></tbody></table>"},{"Id":96,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-12T00:00:23","Description":"<p>Join me <b>on Thursday, September 21 at 9 am PT / 12 pm ET / 4 pm UTC for my &ldquo;Exploring UrhoSharp 3D with Xamarin Workbooks&rdquo; webinar</b>, where I&rsquo;ll combine my love of graphics programming with my passion for helping developers build better apps. Whether you&rsquo;re just getting started or an experienced developer, you&rsquo;ll learn how to use your .NET and C# skills to create native mobile apps, complete with 3D graphics.</p>\n<h5 align=\"center\"><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">[REGISTER]</a></h5>\n<p><a target=\"_blank\" href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\" rel=\"noopener noreferrer\"><img align=\"center\" width=\"300\" height=\"187\" title=\"Xamarin University Logo\" alt=\"Xamarin University Logo\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Xamarin-University-Logo-M.png\"></a></p>\n<p>Lately, I&rsquo;ve been exploring UrhoSharp, Xamarin&rsquo;s C# and .NET wrapper of Urho3D. Urho3D is a sophisticated, powerful open-source 3D game engine written in C++ &mdash; and it allows developers to build 3D visualization and augmented reality applications. You can easily integrate UrhoSharp code into your Windows .NET and Xamarin apps, including Android, iOS, Mac, and more.</p>\n<p>Part of the reason I&rsquo;m excited about UrhoSharp: I love how graphics programming allows you to visualize something in your mind, then see it on the computer screen. About 10 years ago, I was heavy into 3D programming in the Windows Presentation Foundation, and I imagined a little two-lane highway in the form of a M&ouml;bius strip, with cars driving on the top, bottom, and sides. It looked great in theory, but I never found the time to code it.</p>\n<p>As I became more familiar with UrhoSharp, the M&ouml;bius mental image came back, and I was determined to make it real.</p>\n<p>I knew the math would be tricky, so I needed an immediate and interactive programming environment &ndash; and, with UrhoSharp and Xamarin Workbooks, my vision and my code came together. Xamarin Workbooks &ndash; an interactive blend of code and documentation that integrates C# code blocks into step-by-step guides &ndash; simplify learning mobile development, but it&rsquo;s also great for coding and testing out new ideas. As you add C# code blocks, you&rsquo;ll immediately see it executed on the screen, helping you learn as you go and make rapid changes to your apps&rsquo; appearance.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\" rel=\"noopener noreferrer\"><img title=\"Urho Sharp\" alt=\"Urho Sharp\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\"></a></p>\n<p>I&rsquo;ll dig into the code for this project, share my advice for getting started, and I &ndash; plus other Xamarin University instructors and mobile experts &ndash; will be on hand to answer your questions.</p>\n<p><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">Register now</a> and join me on <b>Thursday, September 21, at 9 am PT / 12 pm ET / 4 pm UTC </b>for a M&ouml;biusly graphical 3D experience.</p>\n<p><i>We encourage all registrants to attend the webinar live, as we will be answering questions throughout the event. However, we will share recordings with registrants after the session, so sign up even if you&rsquo;re unable to join us at the scheduled time. You can view an assortment of past sessions</i><i> </i><a href=\"https://aka.ms/xam-u-webinar-recordings\"><u>here</u></a><i>. </i></p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Charles-Petzold.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>Charles Petzold, </b>Senior Content Developer, Xamarin University, Microsoft\n<p>Charles Petzold has been working with the documentation team at Xamarin since 2014, focusing primarily on Xamarin.Forms and writing the free downloadable book Creating Mobile Apps with Xamarin.Forms. Prior to joining Xamarin, Charles wrote several books on Windows programming, as well as two unique explorations of computer concepts and technology: Code: The Hidden Language of Computer Hardware and Software and The Annotated Turing: A Guided Tour through Alan Turing&rsquo;s Historic Paper on Computability and the Turing Machine. He often spends his weekends working on a book about the origins of analog computing. Web site: charlespetzold.com</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-12T00:00:23","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/09/11/new-xamarin-university-webinar-exploring-urhosharp-3d-with-xamarin-workbooks/","MobileContent":null,"PublishId":0,"Status":1,"Title":"New Xamarin University Webinar: Exploring UrhoSharp 3D with Xamarin Workbooks","Type":1,"TitleCn":"新的 Xamarin 大学网络研讨会： 探索 UrhoSharp 3D 与 Xamarin 工作簿","Content":"<p>加入我<b>在 9 月 21 日，星期四在 9 am PT / 12 下午 ET / 4 下午 UTC 表示我\"探索 UrhoSharp 3D 与 Xamarin 工作簿\"网络研讨会的</b>，在那里会将图形编程我爱结合成我的热情，帮助开发人员构建更好的应用程序。无论您是刚开始还是有经验的开发人员，您将学习如何使用您的.NET 和 C# 技能创建本机移动应用程序，完整的 3D 图形。</p>\n<h5 align=\"center\"><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">[注册]</a></h5>\n<p><a target=\"_blank\" href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\" rel=\"noopener noreferrer\"><img align=\"center\" width=\"300\" height=\"187\" title=\"Xamarin University Logo\" alt=\"Xamarin University Logo\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Xamarin-University-Logo-M.png\"></a></p>\n<p>最近，我一直一直在探索 UrhoSharp、 Xamarin 的 C# 和.NET 包装的 Urho3D。Urho3D 是一个复杂、 功能强大的开源 3D 游戏引擎 c + + 编写 — — 它允许开发人员构建三维可视化和增强现实应用程序。你很容易可以融入您 Windows.NET 和 Xamarin 的应用程序，包括 Android、 iOS、 Mac 和更多的 UrhoSharp 代码。</p>\n<p>我兴奋 UrhoSharp 的原因的一部分： 我爱如何图形编程允许您想象中的东西在你的头脑，然后在电脑屏幕上看到它。大约 10 年前，我是重入 3D 编程在 Windows 演示文稿基础上，和我想象小小的双车道公路的莫比乌斯带，形式与在顶部、 底部和面上行驶的汽车。它看起来很好的理论，但我永远不会发现它的代码的时间。</p>\n<p>当我变得更加熟悉 UrhoSharp，莫比乌斯的心理图像回来了，和我决心要使它变为现实。</p>\n<p>我知道数学会非常棘手，所以我需要一种即时的和互动的编程环境 — — 与 UrhoSharp 和 Xamarin 工作簿，我的视野和我的代码来在一起。Xamarin 工作簿 — — 一个交互式的融合代码和 C# 代码块集成的分步指南的文档 — — 简化学习移动开发，但它也是伟大的编码和测试一些新的想法。C# 代码块添加时，您会立即看到它执行在屏幕上，帮助你学习作为你去和快速更改您的应用程序的外观。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\" rel=\"noopener noreferrer\"><img title=\"Urho Sharp\" alt=\"Urho Sharp\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\"></a></p>\n<p>我会挖到此项目的代码，分享我的忠告的入门知识，和我 — — 再加上其他 Xamarin 大学教员和移动专家 — — 将手头要回答你的问题。</p>\n<p><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">现在注册</a>并同我一起上<b>9 月 21 日，星期四，在 9 am PT / 12 下午 ET / 4 下午 UTC </b>Möbiusly 图形的 3D 体验。</p>\n<p><i>我们鼓励所有登记参加网络研讨会现场，因为我们将回答在整个事件的问题。然而，我们会会议结束后与注册人分享录音，所以签约，即使你不能和我们一起在预定的时间。您可以查看过去的会话分类</i><i> </i><a href=\"https://aka.ms/xam-u-webinar-recordings\"><u>在这里</u></a><i>.</i></p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Charles-Petzold.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>查尔斯 Petzold</b>高级内容开发人员，Xamarin 大学，微软<p>Charles Petzold 一直与文档团队在 Xamarin 自 2014 年，主要集中于 Xamarin.Forms 和编写免费下载的书籍创建移动应用程序与 Xamarin.Forms。加盟 Xamarin，查尔斯写了几本书在 Windows 编程，以及计算机的概念和技术的两个独特探索： 代码： 隐藏语言的计算机软硬件及注明图灵： 导游通过艾伦图灵在可计算性和图灵机的历史论文。他经常过周末他在写一本书关于起源的模拟计算。网站： charlespetzold.com</p></td>\n</tr></tbody></table>"},{"Id":95,"Author":"Bing Team","Categories":"Bing blogs","CreateTime":"2017-09-07T00:37:15","Description":"<p>GeoJSON is a common file format used for storing spatial data as a JSON object and is easy to import and export in Bing Maps V8 using the GeoJSON module. This file format tends to be more compact then its XML equivalents. This results in a much smaller file size, making it ideal for transferring spatial data to web and mobile applications. These files typically use a <b>.js</b> or <b>.json </b>file extensions, however occasionally you may come across some files that use <b>.geojson</b>. The following is an example of a GeoJSON file containing the location of New York.</p>\n\n<pre>\n{\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n      {\n          \"type\": \"Feature\",\n          \"geometry\": {\n              \"type\": \"Point\",\n              \"coordinates\": [-74.006393, 40.714172]\n          },\n          \"properties\": {\n              \"name\": \"New York\",\n              \"description\": \"New York\"\n          }\n      }\n    ]\n}\n</pre>\n\n<p>Additional information on this file format specification can be found <a href=\"http://geojson.org/geojson-spec.html\">here</a>.</p>\n\n<h3>Drag and Drop a GeoJSON file</h3>\n\n<p>From time to time I come across an interesting data set in GeoJSON format that I want to quickly view in Bing Maps. The Bing Maps API&rsquo;s make it easily read these files, but if I just want to quickly view the data I don&rsquo;t really want to write an app each time I want to view a GeoJSON file. With this in mind we will take a look at how to create a reusable app where we can simply drag and drop GeoJSON files onto the map and have them load.</p>\n\n<p>To accomplish this, the HTML5 FileReader and Drag &amp; Drop API&rsquo;s will be used. Good documentation on how to use these API&rsquo;s together can be found <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/#toc-selecting-files-dnd\">here</a>. Our application will first need to load the map then the GeoJSON module. From there we will attach drag and drop events to the maps main DOM element. When one or more files are dropped onto the map we will loop through each of them, attempt to read them as a GeoJSON file and then add the data to the map.</p>\n\n<pre>\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;script type='text/javascript'&gt;\n    var map;\n\n    function GetMap() {\n        map = new Microsoft.Maps.Map('#myMap', {\n            credentials: 'Your Bing Maps Key',\n            zoom: 1\n        });\n\n        //Load the GeoJSON module.\n        Microsoft.Maps.loadModule('Microsoft.Maps.GeoJson', function () {\n\n            //Setup the drag &amp; drop listeners on the map.\n            var dropZone = document.getElementById('myMap');\n            dropZone.addEventListener('dragover', handleDragOver, false);\n            dropZone.addEventListener('drop', handleFileSelect, false);\n        });\n    }\n\n    function handleDragOver(evt) {\n        //Stop the browser from performing its default behavior when a file is dragged and dropped.\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = 'copy';\n    }\n\n    function handleFileSelect(evt) {\n        //Stop the browser from performing its default behavior when a file is dragged and dropped.\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        //Remove any existing data from the map.\n        map.entities.clear();\n\n        //The list of files that have been dragged and dropped onto the map.\n        var files = evt.dataTransfer.files; \n\n        //Keep track of the bounding box of all the data from all files dropped into the map.\n        var dataBounds = null;\n\n        //Loop through and attempt to read each file. \n        for (var i = 0; i &lt; files.length; i++) {\n            var reader = new FileReader();\n\n            reader.onload = function (e) {\n                try {\n                    var geoJsonText = e.target.result;\n\n                    //Attempt to parse the file as GeoJSON and add the shapes to the map.\n                    var shapes = Microsoft.Maps.GeoJson.read(geoJsonText);\n                    map.entities.push(shapes);\n                    \n                    //Calculate the bounding box of the data in the single file. \n                    var bounds = Microsoft.Maps.LocationRect.fromShapes(shapes);\n\n                    //If data is already loaded from another GeoJSON file, merge the bounding boxes together.\n                    if (dataBounds) {\n                        dataBounds = Microsoft.Maps.LocationRect.merge(dataBounds, bounds);\n                    } else {\n                        dataBounds = bounds;\n                    }\n\n                    //Update the map view to show the data.\n                    map.setView({ bounds: dataBounds, padding: 50 });\n                } catch (e) {\n                    alert('Unable to read file as GeoJSON.');\n                }\n            };\n\n            //Read the file as text.\n            reader.readAsText(files[i]);\n        }\n    }\n    &lt;/script&gt;\n    &lt;script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap' async defer&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"myMap\" style=\"position:relative;width:800px;height:600px;\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>The following image shows the neighborhood boundaries of Los Angeles that came from a GeoJSON file that was downloaded from the <a href=\"http://boundaries.latimes.com/sets/\">Los Angeles Times Boundary API</a>.</p>\n\n<p><img alt=\"\" src=\"https://blogs.bing.com/BingBlogs/media/MapsBlog/2016/03/LATimesGeoJSON.png\"></p>\n\n<p align=\"center\"><a href=\"http://bingmapsv8samples.azurewebsites.net/#GeoJson%20Drag%20and%20Drop\">Try it now</a></p>\n\n<h3>Additional Resources</h3>\n\n<ul><li><a href=\"http://bingmapsv8samples.azurewebsites.net/\">Bing Maps V8 Code Samples</a></li>\n\t<li><a href=\"http://www.bing.com/api/maps/sdkrelease/mapcontrol/isdk\">Bing Maps V8 Interactive SDK</a></li>\n\t<li><a href=\"https://msdn.microsoft.com/en-us/library/mt712542.aspx\">Bing Maps V8 Documentation</a></li>\n</ul>","LastUpdateTime":"2017-09-07T00:37:15","Link":"https://blogs.bing.com/maps/2017-09/Drag-and-Drop-GeoJSON-files-onto-Bing-Maps-V8","MobileContent":null,"PublishId":0,"Status":1,"Title":"Drag and Drop GeoJSON files onto Bing Maps V8","Type":1,"TitleCn":"拖动和删除 GeoJSON 文件到 Bing 地图 V8","Content":"<p>GeoJSON 是一种常见的文件格式用于存储空间数据作为一个 JSON 对象，很容易导入和导出在 Bing 地图 V8 中使用 GeoJSON 模块。这种文件格式趋于更加紧凑然后 XML 的同类。这会导致很多较小文件大小，使它成为理想的将空间数据传输到 web 和移动应用程序。这些文件通常使用<b>.js</b>或<b>.json</b>的文件扩展名，但是偶尔你可能碰到一些使用<b>.geojson</b>的文件。以下是包含位置信息的纽约的 GeoJSON 文件的一个示例。</p>\n\n<pre>\n{\n    \"类型\":\"FeatureCollection\"\n    \"功能\": [\n      {\n          \"类型\":\"功能\"，\n          \"几何形状\": {\n              \"类型\":\"点\"\n              \"坐标\": [-74.006393，40.714172]\n          }，\n          \"属性\": {\n              \"名称\":\"纽约\"，\n              \"描述\":\"纽约\"\n          }\n      }\n    ]\n}\n</pre>\n\n<p>此文件格式规范的其他信息可以发现<a href=\"http://geojson.org/geojson-spec.html\">在这里</a>。</p>\n\n<h3>拖放式 GeoJSON 文件</h3>\n\n<p>次又一次我遇到一个有趣的数据集，在我想要快速查看在 Bing Maps 的 GeoJSON 格式。Bing 地图 API 使它很容易读取这些文件，但如果我只是想要快速查看数据我真的不想写一个应用程序每的次要查看 GeoJSON 文件。我们将看看如何创建一个可重用的应用程序，在那里我们可以简单地拖放到地图上的 GeoJSON 文件，让他们铭记这加载。</p>\n\n<p>要实现此目的，将使用 HTML5 FileReader 和拖放 API。可以找到好的文档关于如何使用这些 API 一起<a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/#toc-selecting-files-dnd\">在这里</a>。首先，我们的应用程序将需要加载地图然后 GeoJSON 模块。从那里我们将附加拖和放到地图主要 DOM 元素事件。当一个或多个文件拖到我们将遍历每个地图时，尝试读他们作为一个 GeoJSON 文件，然后将数据添加到地图。</p>\n\n<pre>\n&lt; ！DOCTYPE html &gt;\n&lt; html &gt;\n&lt; 头 &gt;\n    &lt; 标题 &gt;&lt; / 标题 &gt;\n    &lt; meta charset =\"utf-8\"/ &gt;\n    &lt; 脚本类型 =' 文本/javascript ' &gt;\n    var 地图;\n\n    功能 GetMap() {\n        地图 = 新 Microsoft.Maps.Map ('#myMap'，{\n            凭据: ' 你必应地图的钥匙 '，\n            放大： 1\n        });\n\n        GeoJSON 模块加载。\n        Microsoft.Maps.loadModule ('Microsoft.Maps.GeoJson'，函数 （） {\n\n            //Setup 拖和放在地图上的监听器。\n            var dropZone = document.getElementById('myMap');\n            dropZone.addEventListener （'dragover'，handleDragOver，false）;\n            dropZone.addEventListener （'放下'，handleFileSelect，false）;\n        });\n    }\n\n    功能 handleDragOver(evt) {\n        //Stop 浏览器从执行它的默认行为，当一个文件拖放式。\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = '复制';\n    }\n\n    功能 handleFileSelect(evt) {\n        //Stop 浏览器从执行它的默认行为，当一个文件拖放式。\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        从映射中移除任何现有的数据。\n        map.entities.clear();\n\n        已拖动和放置到地图上的文件的列表。\n        var 文件 = evt.dataTransfer.files; \n\n        跟踪的定界框的跌入到映射中的所有文件的所有数据。\n        var dataBounds = null;\n\n        循环遍历，并尝试读取每个文件。 \n        为 (var 我 = 0; 我 &lt; files.length; i + +) {\n            var 读者 = 新 FileReader();\n\n            reader.onload = 函数 (e) {\n                试 {\n                    var geoJsonText = e.target.result;\n\n                    尝试解析为 GeoJSON 文件，并将形状添加到地图。\n                    var 形状 = Microsoft.Maps.GeoJson.read(geoJsonText);\n                    map.entities.push(shapes);\n                    \n                    计算单文件中的数据的边界框。 \n                    var 界限 = Microsoft.Maps.LocationRect.fromShapes(shapes);\n\n                    如果从另一个 GeoJSON 文件已经加载数据，则将合并在一起的外框。\n                    如果 (dataBounds) {\n                        dataBounds = Microsoft.Maps.LocationRect.merge （dataBounds，界限）;\n                    } 其他 {\n                        dataBounds = 界限;\n                    }\n\n                    更新地图视图来显示数据。\n                    map.setView ({界限： dataBounds，填充： 50});\n                }赶上 (e) {\n                    警报 (' 无法读取文件作为 GeoJSON.');\n                }\n            };\n\n            读文件作为文本。\n            reader.readAsText(files[i]);\n        }\n    }\n    &lt; / 脚本 &gt;\n    &lt; 脚本类型 =' 文本/javascript ' src = 'https://www.bing.com/api/maps/mapcontrol?callback=GetMap' 异步推迟 &gt;&lt; / 脚本 &gt;\n&lt; / 头 &gt;\n&lt; 身体 &gt;\n    &lt; div id =\"网\"风格 =\"位置：相对; 宽度： 800px; 高度： 600px;\"&gt;&lt; / div &gt;\n&lt; / 身体 &gt;\n&lt; / html &gt;\n</pre>\n\n<p>下图显示了来自 GeoJSON 下载文件，从<a href=\"http://boundaries.latimes.com/sets/\">洛杉矶时报边界 API</a>的洛杉矶的邻域边界。</p>\n\n<p><img alt=\"\" src=\"https://blogs.bing.com/BingBlogs/media/MapsBlog/2016/03/LATimesGeoJSON.png\"></p>\n\n<p align=\"center\"><a href=\"http://bingmapsv8samples.azurewebsites.net/#GeoJson%20Drag%20and%20Drop\">现在试一试</a></p>\n\n<h3>更多的资源</h3>\n\n<ul><li><a href=\"http://bingmapsv8samples.azurewebsites.net/\">必应地图 v8 引擎代码示例</a></li>\n\t<li><a href=\"http://www.bing.com/api/maps/sdkrelease/mapcontrol/isdk\">必应地图 V8 交互式 SDK</a></li>\n\t<li><a href=\"https://msdn.microsoft.com/en-us/library/mt712542.aspx\">必应地图的 v8 引擎的文档</a></li>\n</ul>"},{"Id":94,"Author":"Shashank Bansal [MSFT]1","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-09-04T16:01:02","Description":"When you are configuring continuous deployment pipelines for your team, it becomes essential to keep the team members informed about the progress of releases and the related action items. We had started preview of the release notifications feature that integrates the configuration of release related notifications with the default notification settings experience in Visual Studio... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/\"> Read More</a>","LastUpdateTime":"2017-09-04T16:01:02","Link":"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Managing Release Notifications","Type":1,"TitleCn":"管理发布通知","Content":"当你正在为你的团队配置连续部署管道时，就必须在保持团队成员了解发布和相关的行动项目的进展。我们已开始释放通知功能，整合的发布配置预览相关通知与在 Visual Studio 中的默认通知设置经验......<a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/\">阅读更多</a>"},{"Id":93,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-09-01T20:55:24","Description":"MSTest V2 has crossed 1 Million downloads. Congratulations! Hats off to the community! MSTest V2 is seeing robust usage. We ourselves use it heavily. If you are still using an earlier version of the MSTest framework, we encourage you to upgrade. We have looked at the uptake of MSTest V2 from the perspective of two... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/\"> Read More</a>","LastUpdateTime":"2017-09-01T20:55:24","Link":"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Upgrade to MSTest V2!","Type":1,"TitleCn":"升级到 MSTest V2 ！","Content":"MSTest V2 已经越过了 100 万的下载。祝贺你 ！向社区脱帽致敬 ！MSTest V2 看到鲁棒的用法。我们大量使用了它。如果你还在使用早期版本的 MSTest 框架，我们鼓励您进行升级。我们有从两个角度来看 MSTest V2 的吸收......<a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/\">阅读更多</a>"},{"Id":92,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-01T00:00:43","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%20for%20Mac%20version%207.2%20beta%20preview%2C%20and%20hands-on%20with%20containers%20and%20serverless\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>This week we released the second alpha of Visual Studio for Mac version 7.2, as well as some hands-on labs to try out some of the new features.</p>\n<h2>Visual Studio for Mac 7.2 Alpha</h2>\n<p>The alpha version of our next Visual Studio for Mac release includes new features such as:</p>\n<ul><li><b>Docker Containers</b> &ndash; Join the microservices revolution, by testing and deploying your ASP.NET Core web apps to Docker containers. Visual Studio for Mac&rsquo;s Docker support lets you easily deploy to a container as well as debug projects across multiple containers. Check out the hands-on-lab below to get started!</li>\n<li><b>Xamarin Live Player</b> &ndash; Get started building Xamarin mobile applications in minutes! Visit <a href=\"https://xamarin.com/live\">xamarin.com/live</a> to learn how easy it is to try out mobile app development with your existing iOS or Android device and Visual Studio for Mac.</li>\n<li><b>Azure Functions</b> &ndash; Build and deploy serverless code in the cloud. Functions can be accessed by mobile or server apps, scheduled or triggered, and you only pay for the time they run. Follow the hands-on-lab below to write your first Azure Function.</li>\n<li><b>IoT projects</b> &ndash; Build, test, and deploy apps for Internet of Things devices. You can write IoT apps using C#, and deploy them to a Raspberry Pi, following our <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/IoT/Getting-Started\">simple instructions</a>.</li>\n</ul><p>To try out these features, <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">download Visual Studio for Mac</a> and switch to the <a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">alpha channel</a> in the IDE.</p>\n<h2>More Hands-On Labs</h2>\n<p>Our latest hands-on labs for <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio for Mac</a> will help you get started with new features available in the 7.2 alpha. Visit the <a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac labs GitHub repo</a> for past weeks&rsquo; projects using the Unity 3D game engine, Internet of Things devices, ASP.NET Core web sites, and Xamarin for mobile app development.</p>\n<p>Today we&rsquo;ve published two additional labs using: Docker Container support and Azure Functions projects.</p>\n<h2>Lab 5: Deploying ASP.NET Core to a Docker Container</h2>\n<p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Web/Getting-Started\">Lab 3</a> demonstrated how to build, test, and debug an ASP.NET Core website on your Mac. This lab will show you how to run and debug an ASP.NET web site and web API in Docker containers, by completing these 4 tasks:</p>\n<ol><li>Create a Docker-enabled ASP.NET Core web site</li>\n<li>Create a Docker-enabled ASP.NET Core web API</li>\n<li>Integrate two container apps</li>\n<li>Debug multi-container solutions</li>\n</ol><p>Follow the <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Docker/Getting-Started\">complete instructions</a> to set up the two ASP.NET Core projects, make them work together, and debug them simultaneously.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" rel=\"noopener noreferrer\"><img title=\"Deploying ASP.NET Core to a Docker Container\" alt=\"Deploying ASP.NET Core to a Docker Container\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" width=\"700\" height=\"522\"></a></p>\n<h2>Lab 6: Serverless computing with Azure Functions</h2>\n<p>&ldquo;Serverless computing&rdquo; is a new type of cloud feature where you can host a &ldquo;function&rdquo; without having to worry about setting up a server, or even an application, to run it in. Simply build and deploy your Azure Function, and it will be automatically hosted and scaled as required. You only pay for the time the function is running, it can respond to application requests, you can set up triggers, and it can access many different Azure services.</p>\n<p>To build your first Azure Function and get started with serverless computing, follow these 5 steps:</p>\n<ol><li>Create an Azure Functions project</li>\n<li>Create an Azure Storage account</li>\n<li>Create and Debug an Azure Function</li>\n<li>Work with function.json</li>\n<li>Work with Azure Tables</li>\n</ol><p>The <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Azure-Functions/Getting-Started\">hands-on-lab instructions</a> will walk you through creating the Azure Functions project in Visual Studio for Mac, deploying it to Azure, and persisting data with Azure Tables. This feature is so new it is only available in the <a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">Alpha channel</a> release of Visual Studio for Mac. You&rsquo;ll need to install an extension for Azure Functions, which the instructions will help you with.</p>\n<h2>Get Started</h2>\n<p><a href=\"https://www.visualstudio.com/downloads/\">Download Visual Studio for Mac</a> today, and visit the <a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac labs repo on GitHub</a>. Both this week&rsquo;s labs just scratch the surface of the capabilities being demonstrated: Docker support enables new testing and deployment options, and Azure Functions opens up a new, easier way to interact with powerful Azure services.</p>\n<p>With the Visual Studio Community edition it is easy and free to get started. <a href=\"https://docs.microsoft.com/visualstudio/mac/\">Check out the docs</a> for more in-depth information on Visual Studio for Mac, and leave a comment below to suggest additional hands-on-labs you&rsquo;d like to see.</p>\n<table width=\"600\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td valign=\"top\"><img width=\"299\" height=\"301\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Craig-Dunn.jpg\"></td>\n<td valign=\"top\"><strong>Craig Dunn</strong>, Principal Program Manager<br><a target=\"_blank\" href=\"http://@conceptdev/\" rel=\"noopener noreferrer\">@conceptdev</a>\n<p>Craig works on the Mobile Developer Tools documentation team, where he enjoys writing cross-platform code for iOS, Android, Mac, and Windows platforms with Visual Studio and Xamarin.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-01T00:00:43","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/31/hands-on-with-visual-studio-for-mac-containers-serverless-code-in-the-cloud/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Getting hands on with Visual Studio for Mac, containers, and serverless code in the cloud","Type":1,"TitleCn":"让手与 Visual Studio 为 Mac、 容器和无服务器代码在云中","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%20for%20Mac%20version%207.2%20beta%20preview%2C%20and%20hands-on%20with%20containers%20and%20serverless\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>本周我们发布 Visual Studio 为 Mac 版本 7.2，第二个字母，以及一些动手实验来尝试了一些新的功能。</p>\n<h2>视觉工作室为 Mac 7.2 阿尔法的</h2>\n<p>我们下一个 Visual Studio 为 Mac 版本的 alpha 版本包含以下新功能：</p>\n<ul><li><b>码头集装箱</b>— — 联接 microservices 革命，通过测试和将 ASP.NET 核心 web 应用程序部署到码头集装箱。Mac 的码头工人支持 visual Studio 可以让你轻松地部署到容器以及调试项目跨多个容器。查阅实操-上-实验室下面即可开始 ！</li>\n<li><b>Xamarin 活玩家</b>— — 开始在几分钟内生成 Xamarin 移动应用程序 ！访问<a href=\"https://xamarin.com/live\">xamarin.com/live</a>了解到它是多么容易尝试与您现有的 iOS 或 Android 设备和 Visual Studio mac 的移动应用程序开发</li>\n<li><b>Azure 功能</b>— — 构建和部署在云无服务器代码。函数可以通过手机或服务器应用程序访问、 预定或触发，和你只付他们运行的时间。按照掌握-上-实验室下面写你第一次的 Azure 函数。</li>\n<li><b>物联网项目</b>— — 构建、 测试和部署应用程序对于物联网的设备。你可以写物联网应用程序在使用 C# 中，并将它们部署到树莓派，我们<a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/IoT/Getting-Started\">简单的指令</a>。</li>\n</ul><p>尝试这些功能， <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio 为 Mac 下载</a>并切换到<a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">alpha 通道</a>在 IDE 中。</p>\n<h2>更多动手实验室</h2>\n<p><a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio 为 Mac</a>我们最新的动手实验将帮助您开始使用新功能可用在 7.2 阿尔法。<a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac 实验室 GitHub 回购</a>过去几周的项目，并为移动应用程序开发应用统一的 3D 游戏引擎、 物联网设备、 ASP.NET 核心网站和 Xamarin 的访问。</p>\n<p>今天我们已经发表了两个额外的实验室使用： 码头容器支持和 Azure 功能项目。</p>\n<h2>实验室 5： 部署 ASP.NET 核心到码头集装箱</h2>\n<p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Web/Getting-Started\">实验室 3</a>展示了如何构建、 测试和调试 ASP.NET 核心网站上您的 mac。这个实验室将向你展示如何运行和调试 ASP.NET web 站点和 web API 在码头容器中，通过完成这些 4 项任务：</p>\n<ol><li>创建一个码头启用 ASP.NET 核心 web 站点</li>\n<li>创建一个码头启用 ASP.NET 核心网络 API</li>\n<li>整合两个容器应用程序</li>\n<li>调试多个容器解决方案</li>\n</ol><p>按照<a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Docker/Getting-Started\">说明完成</a>设置了两个 ASP.NET 核心项目，让他们一起工作，和他们同时调试。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" rel=\"noopener noreferrer\"><img title=\"Deploying ASP.NET Core to a Docker Container\" alt=\"Deploying ASP.NET Core to a Docker Container\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" width=\"700\" height=\"522\"></a></p>\n<h2>实验室 6： 无服务器计算与 Azure 功能</h2>\n<p>\"无服务器计算\"是一种新型的在那里你可以承载\"函数\"的云功能而无需担心设置的服务器，或甚至是应用程序，在运行它。简单地生成和部署您的 Azure 函数，它将自动主办和缩放的要求。你只需支付在函数运行一次，它可以响应到应用程序的请求，您可以设置触发器，并且它可以访问许多不同的 Azure 服务。</p>\n<p>若要生成您第一次的 Azure 功能和入门无服务器计算，请按照这 5 个步骤：</p>\n<ol><li>创建 Azure 功能项目</li>\n<li>创建一个 Azure 存储帐户</li>\n<li>创建和调试蔚蓝的功能</li>\n<li>工作与 function.json</li>\n<li>工作与 Azure 表</li>\n</ol><p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Azure-Functions/Getting-Started\">掌握上实验室指示</a>将引导您完成为 Mac 在 Visual Studio 中创建 Azure 功能项目，将其部署到 Azure，和持久化数据与 Azure 表。此功能是如此之新，它是唯一可在 mac 的 Visual Studio<a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">阿尔法频道</a>发布的版本你需要为 Azure 功能，说明将帮助您进行安装的扩展。</p>\n<h2>入门</h2>\n<p>今天，<a href=\"https://www.visualstudio.com/downloads/\">下载 Visual Studio 为 Mac</a>和访问<a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac 实验室回购在 GitHub 上</a>。这周的实验室只是划伤表面所演示的功能： 码头工人支持使新的测试和部署选项，和 Azure 功能开辟了新的、 更容易的途径，与强大的 Azure 服务进行交互。</p>\n<p>与 Visual Studio 社区版很容易和免费入门。<a href=\"https://docs.microsoft.com/visualstudio/mac/\">签出文档</a>的 Mac 和下面的评论去建议额外掌握上实验室对 Visual Studio 更深入信息你想看到。</p>\n<table width=\"600\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td valign=\"top\"><img width=\"299\" height=\"301\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Craig-Dunn.jpg\"></td>\n<td valign=\"top\"><strong>克雷格 · 邓恩</strong>，首席项目经理<br><a target=\"_blank\" href=\"http://@conceptdev/\" rel=\"noopener noreferrer\">@conceptdev</a>\n<p>克雷格在哪里他喜欢写跨平台代码为 iOS、 Android、 Mac 和 Windows 平台与 Visual Studio 和 Xamarin 的移动开发人员工具文档团队工作。</p></td>\n</tr></tbody></table>"},{"Id":91,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-31T00:30:22","Description":"<p>At //BUILD 2017, we shipped an update to the <a href=\"http://aka.ms/CD4VS\">Continuous Delivery Tools for Visual Studio</a>. This update has support for configuring a Continuous Integration and Continuous Delivery pipeline for <a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a> projects with <a href=\"https://www.docker.com/what-container\">container support</a> to an existing <a href=\"https://azure.microsoft.com/en-us/services/service-fabric/\">Azure Service Fabric cluster</a> directly from <a href=\"https://www.visualstudio.com/downloads/\">Visual Studio 2017</a>.</p>\n<p>To configure continuous delivery to a Service Fabric cluster, first you need <a href=\"https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-tutorial-create-cluster-azure-ps\">to create a preview version Service Fabric cluster</a>. Start by creating a security certificate to secure administrative access to the cluster. Open a PowerShell console, login to Azure and select the Azure subscription that you want to deploy the cluster in then create and encrypt a password for the certificate used by Service Fabric to secure access to your cluster by running the following commands:</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>Login-AzureRmAccount</span></span></span><span></span>\n\n<span><span><span>Select-AzureRmSubscription</span></span></span><span><span><span> -SubscriptionId</span></span><span> &lt;</span><span><span>subscription-id</span></span></span><span><span>&gt;</span></span>\n\n<span><span><span>$pwd</span></span></span><span><span> = </span><span><span>\"&lt;your password&gt;\"</span></span><span> | </span><span><span>ConvertTo-SecureString</span></span></span><span><span><span> -AsPlainText -Force</span></span></span><span></span></pre>\n</div>\n<p><span></span></p>\n<p>Keep your PowerShell console running and download the <a href=\"https://aka.ms/securepreviewonelineclustertemplate\">Azure Resource Management Template for Service Fabric</a> azuredeploy.json and the sample azuredeploy.parameters.json locally. Edit the parameters file to name, size and secure your cluster as well as set its location. Ensure that the <i>clusterCodeVersion</i> is set to the preview version <b>255.255.5718.255</b>. Once your configuration files are ready, create the cluster by running the following commands:</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>New-AzureRmServiceFabricCluster</span></span></span><span></span>\n\n<span><span> </span></span><span><span><span>-TemplateFile</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span>azuredeploy.json `</span></span>\n\n<span><span> </span></span><span><span><span>-ParameterFile</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span>azuredeploy.parameters.json `</span></span>\n\n<span><span> </span></span><span><span><span>-CertificateOutputFolder</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span> `</span></span>\n\n<span><span><span> -CertificatePassword</span></span></span><span><span> <span>$pwd</span> `</span></span>\n\n<span><span><span> -CertificateSubjectName </span></span></span><span><span><span>\"<span>&lt;your_cluster_name&gt;</span>.<span>&lt;cluster_location&gt;</span>.cloudapp.azure.com\"</span></span></span><span><span> `</span></span>\n\n<span><span> </span></span><span><span><span>-ResourceGroupName</span></span></span><span><span> </span><span><span>&lt;your_cluster_RGname&gt;</span></span></span></pre>\n</div>\n<p><span></span></p>\n<p>Once the Service Fabric creation is completed, the command will output cluster information to the console window and copy the security certificate to your working folder. Double click on the certificate to import it to the current user certificate store. Remember to <b>mark the certificate key as exportable</b> in the private key protection step and complete the import wizard. This will allow the Configure Continuous Delivery experience to export the key while configuring your release definition.</p>\n<p>With a preview version of the Service Fabric Cluster, you can now configure Continuous Delivery from Visual Studio 2017 with the latest version of the Continuous Delivery Tools for Visual Studio extension. Create or open an existing solution with an ASP.NET or ASP.NET Core project. Add Docker support to the project and ensure that the solution is under version control on VSTS or GitHub. Right click on the solution in Solution Explorer and select Configure Continuous Delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" rel=\"noopener noreferrer\"><img title=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" alt=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" width=\"627\" height=\"332\"></a></p>\n<p>With Service Fabric Cluster as the Target Host type, select your newly created Serviced Fabric cluster to act as a target for continuous delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" width=\"630\" height=\"390\"></a></p>\n<p>Visual Studio will automatically pick up the cluster certificate from your user certificate store and verify the thumbprint. Enter the password for the certificate and select your Azure Container Registry then click OK. Once the configure continuous delivery completes, you will have a configured build and release pipeline for your project to your new Service Fabric Cluster.</p>\n<p>To expose your web service outside its container you need to enable port mapping for your container by modifying the docker-compose.yml file for that project to enable the port mapping for your service. If you have multiple services, you need to do that for each of them.</p>\n<pre><span><code>version: <span>'3'</span>\n\nservices:\n  &lt;your_service_name&gt;:\n    image: <span>&lt;your_image_name&gt;</span>\n    ports:\n   <span> -\t&ldquo;80:80&rdquo;</span>\n    build:\n      context: <span>./&lt;your_service_context&gt;</span>\n      dockerfile: <span>Dockerfile\n</span></code></span></pre>\n<p>To expose these services outside the Service Fabric Cluster, you need to configure your load balancer to do so for each service port. By default, the current sample ARM template and parameter files load balance traffic on port 80 and 8081 for the cluster. If you need to configure other ports you can do so by adding new entries in your ARM template</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"type\": \"int\",\n      \"defaultValue\": 80,\n      \"metadata\": {\n        \"description\": \"Input endpoint1 for the application to use. Replace it with what your application uses\"\n      }\n</pre>\n<p>and modifying the values in your parameters file.</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"value\": 80\n    },\n    \"loadBalancedAppPort2\": {\n      \"value\": 8081\n    },\n</pre>\n<h2>Please keep the feedback coming!</h2>\n<p>Thank you to everyone who has reached out and shared feedback and ideas so far. We&rsquo;re always looking for feedback on where to take this <a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs extension</a> next. There&rsquo;s a <a>Slack channel</a> and a team alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>Ahmed Metwally</strong>, Senior PM, Visual Studio<br><a href=\"https://twitter.com/cd4vs\">@cd4vs</a>\n<p>Ahmed is a Program Manager on the Visual Studio Platform team focused on improving team collaboration and application lifecycle management integration.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-31T00:30:22","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/30/create-a-cicd-pipeline-to-azure-service-fabric/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Create a CI/CD pipeline to Azure Service Fabric","Type":1,"TitleCn":"创建到 Azure 服务织物的 CI/CD 管道","Content":"<p>在 //BUILD 2017年，我们运到<a href=\"http://aka.ms/CD4VS\">Visual Studio 连续交付工具</a>的更新。此更新已支持配置<a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a>工程的持续集成和持续交付的管道与<a href=\"https://www.docker.com/what-container\">容器支持</a>到现有的<a href=\"https://azure.microsoft.com/en-us/services/service-fabric/\">Azure 服务织物群集</a>直接从<a href=\"https://www.visualstudio.com/downloads/\">视觉工作室 2017</a>.</p>\n<p>配置连续传递到服务织物群集，您首先需要<a href=\"https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-tutorial-create-cluster-azure-ps\">创建一个预览版本服务织物的群集</a>。首先创建一个安全证书，以确保对群集的管理访问。打开 PowerShell 控制台，登录到 Azure，并选择您想要部署在群集然后创建加密证书服务织物用于通过运行以下命令来获得您的群集的密码蔚蓝订阅：</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>登录 AzureRmAccount</span></span></span><span></span>\n\n<span><span><span>选择 AzureRmSubscription</span></span></span> <span> <span><span> -SubscriptionId</span></span> <span> &lt;</span><span><span>订阅 id</span></span></span><span><span>&gt;</span></span>\n\n<span><span><span>$pwd</span></span></span><span><span></span><span><span>\"&lt; 密码 &gt;\"</span></span><span><span><span></span></span></span>信仰 SecureString</span> <span><span><span> -AsPlainText-力</span></span></span><span></span></pre>\n</div>\n<p><span></span></p>\n<p>保持你的 PowerShell 控制台运行并下载<a href=\"https://aka.ms/securepreviewonelineclustertemplate\">服务织物 Azure 资源管理模板</a>azuredeploy.json 和样品 azuredeploy.parameters.json 本地。编辑的参数文件名称、 大小和确保您的群集，以及设置其位置。确保将<i>clusterCodeVersion</i>设置为预览版本<b>255.255.5718.255</b>。一旦您的配置文件已准备就绪，创建群集通过运行以下命令：</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>新 AzureRmServiceFabricCluster</span></span></span><span></span>\n\n<span><span></span></span><span><span><span>-TemplateFile</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span>azuredeploy.json '</span></span>\n\n<span><span></span></span><span><span><span>-ParameterFile</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span>azuredeploy.parameters.json '</span></span>\n\n<span><span></span></span><span><span><span>-CertificateOutputFolder</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span> '</span></span>\n\n<span><span><span> -CertificatePassword</span></span></span><span><span><span>$pwd</span>'</span></span>\n\n<span><span><span></span></span></span><span><span><span>\"<span>&lt; your_cluster_name &gt;</span>。<span>&lt; cluster_location &gt;</span>.cloudapp.azure.com\"</span></span></span> <span><span> '</span></span>\n\n<span><span></span></span><span><span><span>-ResourceGroupName</span></span></span><span><span><span><span></span></span></span>&lt; your_cluster_RGname &gt;</span></pre>\n</div>\n<p><span></span></p>\n<p>一旦服务织物创建完成后，该命令将群集信息输出到控制台窗口，并将安全证书复制到您的工作文件夹。双击要导入到当前用户证书存储区的证书。记得到<b>标记为可导出的证书密钥</b>的私钥保护一步和完成导入向导。这将允许配置持续交付经验来配置您的发布定义时导出的密钥。</p>\n<p>与群集服务的织物预览版本，现在您可以配置从 Visual Studio 2017 年开始持续交付与最新版本的 Visual Studio 扩展连续交付工具。创建或打开一个现有的解决方案与 ASP.NET 或 ASP.NET 核心的项目。向项目中添加码头工人支持并确保解决方案在 VSTS 或 GitHub 上的版本控制之下。右键单击解决方案资源管理器中的解决方案并选择配置持续交付。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" rel=\"noopener noreferrer\"><img title=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" alt=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" width=\"627\" height=\"332\"></a></p>\n<p>与群集服务的织物作为目标主机类型，请选择您新创建的服务织物群集作为持续交付的目标。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" width=\"630\" height=\"390\"></a></p>\n<p>Visual Studio 将自动拿起您的用户证书存储区中的群集证书和验证指纹。输入证书的密码并选择您的 Azure 容器注册表然后单击确定。一旦配置连续传递完成后，你将有一个已配置的生成和释放管道为您的项目给你新面料群集服务的。</p>\n<p>使您的 web 服务在其容器外，您需要通过修改该项目，以使您的服务的端口映射的码头工人 compose.yml 文件来启用端口映射为您的容器。如果您有多个服务，您需要为他们每个人都这样做。</p>\n<pre><span><code><span>'3'</span>\n\nservices:\n  &lt;your_service_name&gt;:\n    <span>&lt;your_image_name&gt;</span>\n    ports:\n   <span> -\t&ldquo;80:80&rdquo;</span>\n    build:\n      <span>./&lt;your_service_context&gt;</span>\n      <span>Dockerfile\n</span></code></span></pre>\n<p>若要公开这些织物群集服务之外的服务，您需要配置您的负载平衡器，这样做的每个服务端口。默认情况下，当前的样品臂模板和参数文件负载平衡通信量在端口 80 和 8081 为群集上。如果您需要配置其他端口，你可以在你手臂模板中添加新条目</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"类型\":\"int\"\n      \"默认值\": 80，\n      \"元数据\": {\n        \"说明\":\"输入 endpoint1，应用程序才能使用。它替换为您的应用程序使用\"\n      }\n</pre>\n<p>和修改您的参数文件中的值。</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"价值\": 80\n    }，\n    \"loadBalancedAppPort2\": {\n      \"价值\": 8081\n    }，\n</pre>\n<h2>请保持反馈来 ！</h2>\n<p>谢谢大家有伸出和共享反馈和想法到目前为止。我们一直在寻找反馈在哪里下, 一步采取此<a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs 扩展名</a>。有一种<a>松弛的通道</a>和团队别名<a>vsdevops@microsoft.com</a>在那里你可以伸出，团队和其他人在社区分享关于这一主题的想法。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>艾哈迈德 Metwally</strong>，高级 PM 视觉工作室<br><a href=\"https://twitter.com/cd4vs\">@cd4vs</a>\n<p>艾哈迈德是在 Visual Studio 平台团队专注于改善团队协作和应用程序生命周期管理集成的项目经理。</p></td>\n</tr></tbody></table>"},{"Id":81,"Author":"Andrew Pardoe [MSFT]","Categories":"Visual C++ Team Blog","CreateTime":"2017-08-26T07:50:51","Description":"<p>A new update of C++/WinRT is available on <a href=\"https://github.com/microsoft/cppwinrt\">GitHub</a>! C++/WinRT is a standard C++ language projection for the Windows Runtime, implemented solely in header files.</p>\n<p>The C++/WinRT team has been quiet since their announcements at <a href=\"https://cppcon.org/\">CppCon</a> 2016. They&rsquo;ve made a lot of progress in this update, leading up to the first public release of the CppWinRT compiler. You can read the <a href=\"https://moderncpp.com/2017/08/25/cppwinrt-2017/\">announcement on the ModernCpp website</a>.</p>\n<p>We on the Visual C++ team find C++/WinRT to be one of the best test cases for our compiler as <a href=\"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/c-standards-conformance-from-microsoft/\">MSVC approaches conformance with the C++ Standard</a>. As you try new, standards-conforming features out in MSVC, please be sure to give us your feedback. We can be reached via the comments below, via email (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) and you can provide feedback via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Help &gt; Report A Problem in the product</a>, or via <a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">Developer Community</a>. You can also find us on Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) and Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>).</p>","LastUpdateTime":"2017-08-26T07:50:51","Link":"https://blogs.msdn.microsoft.com/vcblog/2017/08/25/a-new-cwinrt-update-is-available/","MobileContent":null,"PublishId":0,"Status":1,"Title":"A new C++/WinRT update is available","Type":1,"TitleCn":"新的 C + + /cli WinRT 更新是可用","Content":"<p>新更新的 C + + /cli WinRT 是可用在<a href=\"https://github.com/microsoft/cppwinrt\">GitHub</a>上 ！C + + /cli WinRT 是一个标准的 c + + 语言投影为 Windows 运行时，只在头文件中实现。</p>\n<p>C + + /cli WinRT 团队安静以来，他们在<a href=\"https://cppcon.org/\">CppCon</a> 2016 的公告。他们在此更新取得很大的进步，导致第一次公开发布的 CppWinRT 编译器。你可以阅读<a href=\"https://moderncpp.com/2017/08/25/cppwinrt-2017/\">在 ModernCpp 网站上的公告</a>。</p>\n<p>我们在 Visual c + + 团队找到 C + + / WinRT 是我们作为<a href=\"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/c-standards-conformance-from-microsoft/\">MSVC 方法符合 c + + 标准</a>的编译器最佳测试用例之一。当你在 MSVC 尝试新的、 符合标准的特点，请务必给我们您的反馈意见。我们可以通过下面，通过电子邮件 (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) 的评论，你可以提供反馈通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">帮助 &gt; 报告一个问题在产品</a>，或通过<a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">开发者社区</a>。你也可以找到我们在 Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) 和 Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>) 上。</p>"},{"Id":89,"Author":"Immo Landwerth [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-26T05:00:11","Description":"<p>Today, we<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">released the first Preview of Visual Studio 2017 version 15.4</a>. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&rsquo;ll outline what this means for UWP development with .NET.</p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#prerequisites\"></a>Prerequisites</h2>\n<p>In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU) as the minimum version of your UWP project. That&rsquo;s because .NET Standard 2.0 contains many APIs that require FCU to make them work in the context of the UWP execution environment, specifically AppContainer.</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\" alt=\"\" width=\"869\" height=\"354\"></a></p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#whats-new-with-net-standard-20\"></a>What&rsquo;s new with .NET Standard 2.0?</h2>\n<p>.NET Standard is a specification of APIs that all .NET implementations have to implement. UWP is now adding support for .NET Standard 2.0.</p>\n<p>The key advantage of<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET Standard 2.0</a><span>&nbsp;</span>is that it makes .NET implementations of .NET Standard much more similar to .NET Framework. With .NET Standard 2.0,<span>&nbsp;</span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">about 20,000 more APIs</a><span>&nbsp;</span>become available compared to .NET Standard 1.6. The vast majority of them are existing .NET Framework APIs, which includes missing reflection APIs, non-generic collections,<span>&nbsp;</span><code>DataSet</code>, binary serialization, XML Schema, and many more. For a full list, take a look at the<span>&nbsp;</span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">diff between .NET Standard 2.0 and .NET Standard 1.6</a>.</p>\n<p>This makes it much easier to port existing .NET Framework code to UWP. This includes both, copy &amp; pasting existing code, but also extends to referencing existing .NET Framework binaries, via the compatibility mode. Here is an example of using<span>&nbsp;</span><code>DataSet</code><span>&nbsp;</span>inside a UWP application:</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\" alt=\"\" width=\"2155\" height=\"1340\"></a></p>\n<p>For more details, check out my<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">blog post on .NET Standard 2.0</a>.</p>\n<p></p>\n<h2>Summary</h2>\n<p><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">Visual Studio 2017 version 15.4 Preview 1</a><span>&nbsp;</span>adds support for .NET Standard 2.0 in UWP projects that require Fall Creators Update (FCU). Please give it a spin and tell us what you think!</p>","LastUpdateTime":"2017-08-26T05:00:11","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","MobileContent":null,"PublishId":0,"Status":1,"Title":"UWP &#038; .NET Standard 2.0: A preview is now available!","Type":1,"TitleCn":"UWP &.NET 标准 2.0: 预览是现在可用 ！","Content":"<p>今天，我们<span></span><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">发布第一个预览的视觉工作室 2017 15.4 版本</a>。这包括对支持.NET 标准 2.0 UWP 工具的更新。在这篇文章，我将概述这对.NET UWP 发展意味着什么。</p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#prerequisites\"></a>系统必备组件</h2>\n<p>为了在 UWP 中使用.NET 标准 2.0，您需要将秋天创作者更新 (FCU) 作为您的 UWP 项目的最低版本。这是因为.NET 标准 2.0 包含了很多的 Api，需要风机盘管，使他们工作在 UWP 执行环境，特别是 AppContainer 的上下文。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\" alt=\"\" width=\"869\" height=\"354\"></a></p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#whats-new-with-net-standard-20\"></a>新的.NET 2.0 标准是什么？</h2>\n<p>.NET 标准版是一种规范的所有.NET 实现都一定要实现的 Api。UWP 现在添加对.NET 标准 2.0 的支持。</p>\n<p>关键优势<span></span> <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET 标准 2.0</a> <span> </span>，是它让.NET 实现.NET 标准有更多类似到.NET 框架。与.NET 标准 2.0<span> </span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">约 20,000 更多的 Api</a> <span></span>成为可用相比.NET 标准 1.6。其中绝大多数都现有的.NET 框架 Api，包括失踪的反射 Api，非泛型集合，<span> </span> <code>DataSet</code> ，二进制序列化、 XML 架构和更多。有关完整列表，看看<span></span> <a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">.NET 标准 2.0 和.NET 标准 1.6 之间的差异</a>。</p>\n<p>这使它更易于港口现有的.NET 框架代码到 UWP。这包括两个，复制和粘贴现有的代码，但也延伸到引用现有的.NET 框架二进制文件，通过兼容性模式。下面是一个示例使用<span></span> <code>DataSet</code> <span> </span>UWP 应用程序内：</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\" alt=\"\" width=\"2155\" height=\"1340\"></a></p>\n<p>更多详细信息，请查阅我<span></span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">博客上.NET 标准 2.0</a>。</p>\n<p>\n<h2>摘要</h2>\n<p><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">Visual Studio 2017 版本 15.4 预览 1</a><span> </span>UWP 项目需要秋天创作者更新 (FCU) 中添加.NET 标准 2.0 支持。请让它旋转，并告诉我们你的想法 ！</p>"},{"Id":83,"Author":"Steve Dower [MSFT]","Categories":"Python Engineering at Microsoft","CreateTime":"2017-08-26T04:00:31","Description":"<p>It's been a while since we last posted, and we've been hard at work on new features for Python in Visual Studio 2017. Today, the first preview of the next update has been released, which you can install from <a href=\"https://visualstudio.com/vs/preview\" target=\"_blank\">visualstudio.com</a> or by updating your existing Preview install. </p>\n<p>In this post, we'll briefly discuss the new features in this preview, including the secret tricks and exclusive downloads you will need to enable some of them. </p>\n<h1>Ctrl+Click Go To Definition</h1>\n<p>Over the new update you should see this feature coming to most languages in Visual Studio, but we are excited that Python is one of the first to get it. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver-300x127.png\" alt=\"Ctrl+Click Go To Definition turns identifiers into hyperlinks when you hover over them\" width=\"300\" height=\"127\"></a></p>\n<p>You are probably familiar with the Go To Definition feature, either through the editor context menu or the F12 shortcut key, but we have added a new way to use it. While holding the Control key down, the identifier you have the mouse over will turn into a hyperlink if it has definitions you can go to. Clicking on the item will then take you directly to the definition. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options-300x203.png\" alt=\"Options dialog showing settings that can be changed for Ctrl+Click Go To Definition\" width=\"300\" height=\"203\"></a></p>\n<div>If you would prefer to use a key other than Control, the Text Editor options page will let you select an alternative. You can also choose to \"peek\" the definition rather than going to it, which will open a smaller editor window embedded within the current one.</div>\n<p>(Unfortunately, it seems that peek does not work for Python code in this first preview. We're <a href=\"https://github.com/Microsoft/PTVS/issues/2916\" target=\"_blank\">fixing it</a> for preview 2!)</p>\n<h1>Debugging in the Windows Subsystem for Linux</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties-300x189.png\" alt=\"Selecting the WSL launcher from a Python project's properties window\" width=\"300\" height=\"189\"></a></p>\n<p>The <a href=\"https://msdn.microsoft.com/commandline/wsl\" target=\"_blank\">Windows Subsystem for Linux</a> (WSL) is an exciting new technology that lets you use a full Linux distribution on your Windows machine. This is not a virtual machine, but a subsystem similar to the way that 32-bit processes are supported on 64-bit Windows. Follow the link for instructions on how to set it up. </p>\n<p>For this preview, we are releasing a separate extension that enables debugging in WSL. After installing this extension, you can select a new debug launcher in Python project properties. Now, when you press F5, your project will launch under WSL using the most compatible version of Python available (for example, a project using Python 3.6 will try to launch with <tt>python3.6</tt> and then <tt>python3</tt> before returning an error). </p>\n<p>Once running, the debugger will automatically attach, providing the great experience you are used to getting with local or remote debugging.</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint-1024x624.png\" alt=\"Visual Studio stopped at a breakpoint in Python code running in WSL\" width=\"1024\" height=\"624\"></a></p>\n<p>One known issue is that you may see an error dialog appear as well as the Bash shell, but your project does not start. In most cases, attempting to launch again should succeed, so please try that before reporting a problem. Also note that native code debugging is not supported with WSL, even though the checkbox for it appears.</p>\n<p>You can download the extension from here: <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Wsl.VS2017.vsix\">Microsoft.PythonTools.Wsl.VS2017.vsix</a> (64 kB) </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental extension, and we're releasing it separately because we may change it dramatically when fully integrated into Visual Studio, or we may decide not to integrate it at all. You may need to manually uninstall the extension before installing future Visual Studio updates. While this extension is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This download will only be available for a limited time and is only compatible with Visual Studio 15.4 Preview 1.</p></blockquote>\n<h1>Debug C++ project with Python</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug-300x183.png\" alt=\"Debugging Python hosted in a C++ executable\" width=\"300\" height=\"183\"></a></p>\n<p>If you develop native Python extensions, you are likely familiar with our support for <a href=\"https://docs.microsoft.com/visualstudio/python/debugging-mixed-mode\" target=\"_blank\">mixed C/Python debugging</a>. Currently, you can only enable this on a Python project, which meant that if you were developing a C++ project that <a href=\"https://blogs.msdn.microsoft.com/pythonengineering/2016/04/26/cpython-embeddable-zip-file/\" target=\"_blank\">embeds</a> Python, you could not use it. </p>\n<p>Today we are releasing a standalone extension that adds a new debugging option to C++ projects: Python native debugging. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties-300x168.png\" alt=\"Configuring C++ project properties to launch with Python debugging enabled\" width=\"300\" height=\"168\"></a></p>\n<p>Selecting this debugger for your C++ project will launch with support for viewing Python types and stack frames, giving you the best experience for debugging your application. </p>\n<p>You can download the extension from here: <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix\">Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix</a> (331 kB) </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental extension, and we're releasing it separately because we may change it dramatically when fully integrated into Visual Studio, or we may decide not to integrate it at all. You may need to manually uninstall the extension before installing future Visual Studio updates, and you may require administrative privileges to install and remove it. While this extension is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This download will only be available for a limited time and is only compatible with Visual Studio 15.4 Preview 1.</p></blockquote>\n<h1>Disable the completion database</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense-300x185.png\" alt=\"Completions and documentation for pandas without using a completion DB\" width=\"300\" height=\"185\"></a></p>\n<p>Remember when you installed Anaconda and we made you wait hours before giving you IntelliSense? Yeah, we aren't proud of that. Our IntelliSense is based on some really intense static analysis that infers types for every possible variable, and it takes time to get those results. But in many cases, very simple syntax analysis can provide results that will keep you productive, especially when combined with your own expertise. </p>\n<p>So we've been working on a brand new approach that does not rely on generating a completion DB. This means that when you install a new environment or a new package, we will give you great IntelliSense immediately, without having to run the background process at all.   </p>\n<p>This new approach is very experimental right now, and we are actively working on improving the experience. It is included in the current Visual Studio 2017 Preview but disabled by default. You can tell when it is enabled because the IntelliSense dropdown will be missing from the Python Environments window. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments-300x183.png\" alt=\"Python Environments window before and after disabling the completion DB\" width=\"300\" height=\"183\"></a></p>\n<p>To enable this feature, use registry editor to create a key <tt>HKEY_CURRENT_USERSoftwareMicrosoftPythonToolsExperimental</tt> and add a <tt>DWORD</tt> value named <tt>NoDatabaseFactory</tt> and set its value to 1. Then restart Visual Studio. </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental feature, and we do not recommend enabling it in production environments. While Visual Studio is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This registry key is only compatible with Visual Studio 15.4 Preview 1, and newer versions may have alternate.</p></blockquote>\n<h1>Enjoy</h1>\n<p>As usual, feedback is welcome at our <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a> page, and while we don't recommend using previews in production it is <a href=\"https://www.visualstudio.com/vs/preview/#7fed63a0b27bb7fa0\" target=\"_blank\">easy to install both the current preview and the current release</a> of Visual Studio 2017 on the same machine. </p>\n<p>We hope you enjoy these early previews of our current work. We're excited about a future with better C++ integration and no IntelliSense database, and we hope you are too. Thanks for being a Visual Studio user! </p>","LastUpdateTime":"2017-08-26T04:00:31","Link":"https://blogs.msdn.microsoft.com/pythonengineering/2017/08/25/python-updates-in-visual-studio-15-4-preview-1/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Python updates in Visual Studio 15.4 Preview 1","Type":1,"TitleCn":"在 Visual Studio 15.4 预览 1 Python 更新","Content":"<p>自从我们上次张贴，和我们一直努力工作的新特点为 Python 视觉工作室 2017 年，已经有段时间了。今天下, 一次更新的第一个预览已被释放，你可以从<a href=\"https://visualstudio.com/vs/preview\" target=\"_blank\">visualstudio.com</a>安装或通过更新你现有的预览安装。</p>\n<p>在这篇文章，我们将简要讨论此预览，包括秘密技巧和您将需要启用其中一些独家下载中的新功能。</p>\n<h1>Ctrl + 单击转到定义</h1>\n<p>在新的更新，您应该看到大多数语言在 Visual Studio 中，来到此功能，但我们还是兴奋 Python 是第一个获得它。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver-300x127.png\" alt=\"Ctrl+Click Go To Definition turns identifiers into hyperlinks when you hover over them\" width=\"300\" height=\"127\"></a></p>\n<p>您可能熟悉转到定义功能，通过编辑器上下文菜单或 f12 键的快捷键，但是我们增加了新的方式来使用它。同时按住 Control 键，你有鼠标的标识符会变成超链接，如果它有的定义你可以去。点击项目然后将带你直接去定义。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options-300x203.png\" alt=\"Options dialog showing settings that can be changed for Ctrl+Click Go To Definition\" width=\"300\" height=\"203\"></a></p>\n<div>如果您愿意使用非控制的关键，文本编辑器选项页会让你选择一种替代。您也可以选择\"偷看\"定义，而不是去它，它将打开一个小的编辑器窗口嵌入在当前。</div>\n<p>（不幸的是，它似乎，聚醚醚酮并不适用于在此第一次的预览中的 Python 代码。我们<a href=\"https://github.com/Microsoft/PTVS/issues/2916\" target=\"_blank\">搞定它</a>的预览 2 ！）</p>\n<h1>对于 Linux 调试 Windows 子系统中</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties-300x189.png\" alt=\"Selecting the WSL launcher from a Python project's properties window\" width=\"300\" height=\"189\"></a></p>\n<p><a href=\"https://msdn.microsoft.com/commandline/wsl\" target=\"_blank\">Linux 的 Windows 子系统</a>（荣通证券） 是令人兴奋的新技术，让您在您的 Windows 计算机上使用一个完整的 Linux 发行。这不是一个虚拟机，而类似的方式，在 64 位 Windows 上支持 32 位进程中的一个子系统。有关如何将它设置为指示链接。</p>\n<p>对于这个预览，我们发布启用调试在荣通证券的一个独立扩展。后安装此扩展，您可以选择一个新的调试发射器在 Python 项目属性中。现在，当您按 f5 键，您的项目将推出根据荣通证券使用的 Python 提供最兼容的版本 （例如，使用 Python 3.6 项目将尝试启动<tt>python3.6</tt> ，然后<tt>python3</tt>返回错误之前）。</p>\n<p>一次运行时，调试器将自动连接，提供了大量的经验，你习惯了与本地或远程调试。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint-1024x624.png\" alt=\"Visual Studio stopped at a breakpoint in Python code running in WSL\" width=\"1024\" height=\"624\"></a></p>\n<p>一个已知的问题是，您可能会看到错误对话框出现以及 Bash shell 中，但您的项目不能启动。在大多数情况下，尝试启动再应该成功，这样请尝试，之前报告的问题。此外注意到与 — — WSL，不支持本机代码调试即使它的复选框出现。</p>\n<p>你可以从这里下载扩展： <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Wsl.VS2017.vsix\">Microsoft.PythonTools.Wsl.VS2017.vsix</a> (64 kB)</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的扩展，和我们分开就会发布它，因为我们可能会改变它大大时完全集成到 Visual Studio 中，或者我们可能决定不将它集成在所有。您可能需要手动安装 Visual Studio 的未来更新之前卸载扩展。虽然这个扩展是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此下载只会在有限的时间，只是与 Visual Studio 15.4 预览 1 兼容。</p></blockquote>\n<h1>调试与 Python c + + 项目</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug-300x183.png\" alt=\"Debugging Python hosted in a C++ executable\" width=\"300\" height=\"183\"></a></p>\n<p>如果您开发原生 Python 扩展，你可能已经非常了解我们对<a href=\"https://docs.microsoft.com/visualstudio/python/debugging-mixed-mode\" target=\"_blank\">混合的 C/Python 调试</a>的支持。目前，您只能启用这一个 Python 项目，这就意味着，如果您在开发一个 c + + 项目，<a href=\"https://blogs.msdn.microsoft.com/pythonengineering/2016/04/26/cpython-embeddable-zip-file/\" target=\"_blank\">嵌入</a>Python，你不能使用它。</p>\n<p>今天，我们正在推出一个独立的扩展，将一个新的调试选项添加到 c + + 项目： Python 本机调试。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties-300x168.png\" alt=\"Configuring C++ project properties to launch with Python debugging enabled\" width=\"300\" height=\"168\"></a></p>\n<p>选择此调试器为您的 c + + 项目将推出支持查看 Python 类型和堆栈帧，给你最好的体验为调试您的应用程序。</p>\n<p>你可以从这里下载扩展： <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix\">Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix</a> (331 kB)</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的扩展，和我们分开就会发布它，因为我们可能会改变它大大时完全集成到 Visual Studio 中，或者我们可能决定不将它集成在所有。您可能需要手动卸载扩展安装将来的 Visual Studio 更新之前，您可能需要管理权限才能安装和删除它。虽然这个扩展是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此下载只会在有限的时间，只是与 Visual Studio 15.4 预览 1 兼容。</p></blockquote>\n<h1>禁用完成数据库</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense-300x185.png\" alt=\"Completions and documentation for pandas without using a completion DB\" width=\"300\" height=\"185\"></a></p>\n<p>还记得当你安装水蟒，我们让你等前给你智能感知小时吗？是的我们不是骄傲。我们的智能感知基于一些真的很激烈的静态分析，推断类型为每个可能的变量，和它的时间来获得结果。但在许多情况下，很简单的语法分析可以提供时，会注意你生产，特别是结合自己的专业知识的结果。</p>\n<p>所以我们一直在不依赖于生成完成 DB 的全新方法。这意味着，当你安装一个新的环境或一个新的包，我们将立即给你伟大的智能感知，而不必在所有运行的后台进程。</p>\n<p>现在，这种新方法是非常实验，我们正在积极地改善经验。它是包含在当前的 Visual Studio 2017 预览，但默认情况下禁用。你可以告诉它启用时因为从 Python 环境窗口智能感知下拉列表将会丢失。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments-300x183.png\" alt=\"Python Environments window before and after disabling the completion DB\" width=\"300\" height=\"183\"></a></p>\n<p>若要启用此功能，请使用注册表编辑器创建一个密钥<tt>HKEY_CURRENT_USERSoftwareMicrosoftPythonToolsExperimental</tt>并添加一个<tt>DWORD</tt>值，命名为<tt>NoDatabaseFactory</tt> ，并将其值设置为 1。然后重新启动 Visual Studio。</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的功能，和我们不推荐在生产环境中启用它。虽然 Visual Studio 是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此注册表项仅与视觉工作室 15.4 预览 1，兼容，较新的版本可能有备用。</p></blockquote>\n<h1>享受</h1>\n<p>像往常一样，反馈是在我们<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>页，欢迎和我们不建议在生产中使用预览时很<a href=\"https://www.visualstudio.com/vs/preview/#7fed63a0b27bb7fa0\" target=\"_blank\">容易安装当前预览和当前版本</a>的 Visual Studio 2017 同一台计算机上。</p>\n<p>我们希望你喜欢我们目前的工作这些早期预览。我们对未来有更好的 c + + 集成，没有智能感知数据库，感到兴奋，我们希望你也是。谢谢你的 Visual Studio 用户 ！</p>"},{"Id":85,"Author":"Cesar de la Torre [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-26T00:30:50","Description":"<p><img width=\"2355\" height=\"257\" alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/07/Xamarin-Patterns-Banner.png\"></p>\n<p>As part of the series of posts announced at this initial blog post (<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/26/the-new-net-application-architecture-guidance/\">.NET Application Architecture Guidance</a>) that explores each of the&nbsp;architecture areas currently covered by our team,&nbsp;this current blog post focuses on &ldquo;<strong>Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance</strong>&ldquo;.</p>\n<p>Just as a reminder, the four introductory blog posts of this series are (or will be as of today)&nbsp;the following:&nbsp; <span><br></span></p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/?p=13546\">Microservices and Docker containers: Architecture, Patterns and Development guidance</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/09/web-apps-aspnetcore-architecture-guidance/\">Web Applications with ASP.NET Core Architecture and Patterns guidance</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\">Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance</a></li>\n<li>Production Ready Cloud applications with Azure Architecture guidance</li>\n</ul><p><span><span>There are many issues that must be resolved when creating an enterprise mobile app. These include: </span><span><br></span></span></p>\n<ul><li><span>Deciding how to provide a clean separation of concerns between the user interface controls and their logic. </span></li>\n<li><span>Deciding whether to use a dependency injection container. </span></li>\n<li><span>Choosing how components that are inconvenient to link by object and type references can communicate. </span></li>\n<li><span>Deciding how to navigate between pages, including how to invoke navigation and where navigation logic should reside. </span></li>\n<li><span>Deciding how to validate user input for correctness. The decision must include how to validate user input and how to notify the user about validation errors. </span></li>\n<li><span>Deciding how to perform authentication and how to protect resources with authorization. </span></li>\n<li><span>Deciding how to access remote data from web services, including how to reliably retrieve data and how to cache data. </span></li>\n<li><span>Deciding how to unit test the app.</span><span><br></span></li>\n</ul><h3>Introducing the &lsquo;Enterprise Application Patterns using Xamarin.Forms&rsquo; Guide/eBook</h3>\n<p><span>You can download this eBook that offers guidance on core patterns and architectural guidance for developing Xamarin.Forms enterprise apps that are easier to test, maintain, and evolve. Guidance is provided on how to implement the Model-View-ViewModel (MVVM) pattern, dependency injection, navigation, validation, and configuration management, while maintaining loose coupling. In addition, there&rsquo;s also guidance on performing authentication and authorization with IdentityServer, accessing remote data from containerized microservices, and unit testing.<br></span></p>\n<p><span>Free download:<br></span></p>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>http://aka.ms/XamarinPatternsEbook</span></a><span><br></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp16.png\"><span><br></span></p>\n<p><span>The eBook comes with source code for the <strong>eShopOnContainers Xamarin.Forms mobile app</strong>, which is a mobile app that extends the eShopOnContainers microservice/containers scenario. This mobile app includes the following functionality:<br></span></p>\n<ul><li>Authenticating and authorizing with a backend service.</li>\n<li>Browsing a catalog of shirts, coffee mugs, and other marketing items.</li>\n<li>Filtering the catalog.</li>\n<li>Ordering items from the catalog.</li>\n<li>Viewing the user&rsquo;s order history.</li>\n<li>Configuring settings.</li>\n</ul><h3>Who should use this guide</h3>\n<p><span>We wrote this guide for mobile app developers and solution architects who are new to Xamarin.Forms while looking to learn and adopt proven enterprise architectural/design patterns and best development practices for Xamarin.Forms apps.<br></span></p>\n<h3>Related sample mobile Xamarin.Forms app</h3>\n<p><span><span>The eBook focuses on building cross-platform enterprise apps using Xamarin.Forms and uses the <a href=\"http://aka.ms/MicroservicesArchitecture\">eShopOnContainers mobile app</a> as an example. The following diagram shows the pages from the eShopOnContainers mobile app that provide the functionality outlined earlier: </span><span><br></span></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp17.png\"><span><br></span></p>\n<p><span><span>The mobile app consumes the backend services provided by the containerized microservices. However, it can also be configured to consume data from mock services for those who wish to avoid deploying the backend services and just want purely explorer the Xamarin.Forms mobile app without the hassle of deploying a microservice-based backend. </span><span><br></span></span></p>\n<h3>Wrapping up &ndash; Xamarin.Forms Patterns guidance</h3>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>Enterprise Application Patterns using Xamarin.Forms</span></a><span><span> focuses on core patterns and architectural guidance for developing Xamarin.Forms enterprise apps that are easier to test, maintain, and evolve. Guidance is provided on how to implement MVVM, dependency injection, navigation, validation, and configuration management while maintaining loose coupling. In addition, there&rsquo;s also guidance on performing authentication and authorization with IdentityServer, accessing remote data from containerized microservices, and unit testing.&nbsp;</span></span></p>\n<h3>Visit the .NET Application Architecture Center and grab it all!</h3>\n<p>Remember that this&nbsp;<em>&lsquo;Web Applications with ASP.NET Core Architecture and Patterns guidance&rsquo; </em>explained at this blog post is part of a broader .NET Architecture guidance which covers additional subjects and you can&nbsp;<a href=\"http://dot.net/architecture\">check out at the .NET Application Architecture Center page</a>&nbsp;where you can&nbsp;download the multiple eBooks/Guides and visit the reference applications from there, and of course, feel free to provide feedback by dropping a note below or on the feedback form at the architecture page.</p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp2.png\"></p>\n<p>Happy coding from the .NET team!</p>\n<p>Cesar de la Torre</p>\n<p>.NET&nbsp;Product Group</p>\n<p>Twitter:&nbsp;<a href=\"https://twitter.com/cesardelatorre\">@cesardelatorre</a></p>","LastUpdateTime":"2017-08-26T00:30:50","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","Type":1,"TitleCn":"移动应用程序与 Xamarin.Forms： 体系结构和模式的指导","Content":"<p><img width=\"2355\" height=\"257\" alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/07/Xamarin-Patterns-Banner.png\"></p>\n<p>作为系列文章宣布在这个初始博客帖子 （<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/26/the-new-net-application-architecture-guidance/\">.NET 应用程序体系结构指导</a>），探讨了目前我们的团队所涵盖的建筑领域的一部分，这个当前的博客文章侧重于\"<strong>与 Xamarin.Forms 的移动应用程序： 体系结构和模式指导</strong>\"。</p>\n<p>只是作为一个提醒，这一系列的四个介绍性博客 （或者将从今天起） 以下：<span><br></span></p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/?p=13546\">Microservices 和码头集装箱： 体系结构、 模式和发展指导</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/09/web-apps-aspnetcore-architecture-guidance/\">Web 应用程序的 ASP.NET 核心体系结构和模式的指导</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\">移动应用程序与 Xamarin.Forms： 体系结构和模式的指导</a></li>\n<li>生产准备好了云应用程序与 Azure 体系结构指导</li>\n</ul><p><span><span>有创建企业移动应用程序时必须解决的许多问题。这些措施包括：</span><span><br></span></span></p>\n<ul><li><span>决定如何提供干净的用户界面控件和它们的逻辑关系上的分离。</span></li>\n<li><span>决定是否使用依赖注入容器。</span></li>\n<li><span>选择如何沟通不便要链接的对象和类型引用的组件。</span></li>\n<li><span>决定如何导航之间的页面，包括如何调用导航和导航逻辑应存放。</span></li>\n<li><span>决定如何验证用户输入的正确性。这一决定必须包括如何验证用户输入以及如何通知用户有关验证错误。</span></li>\n<li><span>决定如何执行身份验证，以及如何保护资源与授权。</span></li>\n<li><span>决定如何从 web 访问远程数据服务，包括如何可靠地检索数据以及如何缓存数据。</span></li>\n<li><span>决定如何向单元测试应用程序。</span><span><br></span></li>\n</ul><h3>引入企业应用程序模式使用 Xamarin.Forms' 指南/电子书</h3>\n<p><span>您可以下载这本电子书，提供指导意见的核心模式和建筑指导发展 Xamarin.Forms 企业应用程序，更易于测试、 维护和发展。提供了有关如何实现模型-视图-模型 (MVVM) 模式、 依赖注入、 导航、 验证和配置管理，同时保持松散耦合的指导。此外，还指导上有执行身份验证和授权与 IdentityServer，从集装箱的 microservices 和单元测试访问远程数据。<br></span></p>\n<p><span>免费下载：<br></span></p>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>http://aka.ms/XamarinPatternsEbook</span></a><span><br></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp16.png\"><span><br></span></p>\n<p><span>电子书带有源代码为<strong>eShopOnContainers Xamarin.Forms 的手机应用程序</strong>，这是一个扩展 eShopOnContainers microservice/容器场景的移动应用程序。这手机的应用程序包括以下功能：<br></span></p>\n<ul><li>身份验证和授权与后端服务。</li>\n<li>浏览目录的衬衫，咖啡杯和其他营销项目。</li>\n<li>筛选目录。</li>\n<li>订购目录中的项目。</li>\n<li>查看用户的订单历史记录。</li>\n<li>配置设置。</li>\n</ul><h3>谁应该使用本指南</h3>\n<p><span>我们写了本指南为移动应用程序开发人员和解决方案架构师，是新的 Xamarin.Forms 一边寻找学习和采用经验证的企业建筑/设计模式和 Xamarin.Forms 应用程序开发的最佳做法。<br></span></p>\n<h3>相关的示例移动的 Xamarin.Forms 应用程序</h3>\n<p><span><span>电子书可以致力于构建跨平台企业应用程序在使用 Xamarin.Forms 和使用<a href=\"http://aka.ms/MicroservicesArchitecture\">eShopOnContainers 的手机应用程序</a>为例。下面的关系图显示的页面从 eShopOnContainers 移动应用程序提供功能较早时提出：</span><span><br></span></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp17.png\"><span><br></span></p>\n<p><span><span>移动应用程序消耗集装箱 microservices 所提供的后端服务。然而，它也可以配置为使用 mock 服务为那些想要避免部署后端服务的数据，只是想纯粹是资源管理器中 Xamarin.Forms 移动应用程序的部署一个基于 microservice 的后端，免去。</span><span><br></span></span></p>\n<h3>结束了 — — Xamarin.Forms 模式指导</h3>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>企业应用程序模式使用 Xamarin.Forms</span></a><span><span>重点的核心模式和建筑指导发展 Xamarin.Forms 企业应用程序，更易于测试、 维护和发展。提供了有关如何实现 MVVM、 依赖注入、 导航、 验证和配置管理，同时保持松散耦合的指导。此外，还指导上有执行身份验证和授权与 IdentityServer，从集装箱的 microservices 和单元测试访问远程数据。</span></span></p>\n<h3>访问.NET 应用程序体系结构中心，并抓住它所有 ！</h3>\n<p>记得这<em>'Web 应用程序与 ASP.NET 核心体系结构和模式指导'</em>解释在这篇博客是一部分的更广泛的.NET 体系结构指导，涵盖更多的议题，你可以<a href=\"http://dot.net/architecture\">查阅在.NET 应用程序体系结构中心页面</a>在哪里可以下载多个电子书或指南和访问参考应用程序从那里，当然，随时提供反馈通过删除下面的注释或反馈窗体在体系结构页上。</p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp2.png\"></p>\n<p>快乐的编码从.NET 团队 ！</p>\n<p>塞萨尔 · 德拉托雷</p>\n<p>.NET 产品组</p>\n<p>推特： <a href=\"https://twitter.com/cesardelatorre\">@cesardelatorre</a></p>"},{"Id":86,"Author":"Guest Blogger","Categories":"Revolutions","CreateTime":"2017-08-25T00:14:10","Description":"<p><em>by <a href=\"https://www.linkedin.com/in/b%C5%82a%C5%BCej-moska-9a316113a/\">B&#322;a&#380;ej Moska</a>, computer science student and data science intern</em>&nbsp;</p>\n<p>Suppose that we have performed clustering K-means clustering in R and are satisfied with our results, but later we realize that it would also be useful to have a membership matrix. Of course it would be easier to repeat clustering using one of the fuzzy kmeans functions available in R (like <a href=\"https://www.rdocumentation.org/packages/cluster/versions/2.0.6/topics/fanny\"><code>fanny</code></a>, for example), but since it is slightly different implementation the results could also be different and for some reasons we don&rsquo;t want them to be changed. Knowing the equation we can construct this matrix on our own, after using the <a href=\"https://www.rdocumentation.org/packages/stats/versions/3.4.1/topics/kmeans\"><code>kmeans</code></a> function. The equation is defined as follows (source: <a href=\"https://en.wikipedia.org/wiki/Fuzzy_clustering\">Wikipedia</a>):</p>\n<p>$$w_{ij} = frac{1}{ sum_ {k=1}^c ( frac{ | x_{i} - c_{j} | }{ | x_{i} - c_{k} | }) ^{ frac{2}{m-1} } } $$</p>\n<p>(w_{ij}) denotes to what extent the (i)th object belongs to the (j)th cluster. So the total number of rows of this matrix equals number of observation and total number of columns equals number of variables included in clustering. (m) is a parameter, typically set to (m=2). (w_{ij}) values range between 0 and 1 so they are easy and convenient to compare. In this example I will use (m = 2) so the Euclidean distance will be calculated.</p>\n<p>To make computations faster I also used the&nbsp;<a href=\"http://adv-r.had.co.nz/Rcpp.html\">Rcpp package</a>, then I compared speed of execution of function written in R with this written in C++.</p>\n<p>In implementations <code>for</code> loops were used, although it is not a commonly used method in R (see <a href=\"http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html\">this blog post</a> for more information and alternatives), but in this case I find it more convenient.</p>\n<h3>Rcpp (C++ version)</h3>\n<div>\n<pre><span>#include &lt;Rcpp.h&gt;</span>\n<span>#include &lt;math.h&gt;</span>\n<span>using</span> <span>namespace</span> Rcpp;\n\n<span>// [[Rcpp::export]]</span>\nNumericMatrix <span>fuzzyClustering</span>(NumericMatrix data, NumericMatrix centers, <span>int</span> m) {  \n<span>/* data is a matrix with observations(rows) and variables, </span>\n<span>   centers is a matrix with cluster centers coordinates, </span>\n<span>   m is a parameter of equation, c is a number of clusters</span>\n<span>*/</span>\n  \n  <span>int</span> c<span>=</span>centers.rows();\n  <span>int</span> rows <span>=</span> data.rows();\n  <span>int</span> cols <span>=</span> data.cols(); <span>/*number of columns equals number of variables, the same as is in centers matrix*/</span>\n  <span>double</span> tempDist<span>=</span><span>0</span>;        <span>/*dist and tempDist are variables storing temporary euclidean distances */</span>\n  <span>double</span> dist<span>=</span><span>0</span>;      \n  <span>double</span> denominator<span>=</span><span>0</span>;    <span>//denominator of &ldquo;main&rdquo; equation</span>\n  \n  NumericMatrix result(rows,c);    <span>//declaration of matrix of results</span>\n  \n  <span>for</span>(<span>int</span> i<span>=</span><span>0</span>;i<span>&lt;</span>rows;i<span>++</span>){\n    <span>for</span>(<span>int</span> j<span>=</span><span>0</span>;j<span>&lt;</span>c;j<span>++</span>){\n      <span>for</span>(<span>int</span> k<span>=</span><span>0</span>;k<span>&lt;</span>c;k<span>++</span>){\n        <span>for</span>(<span>int</span> p<span>=</span><span>0</span>;p<span>&lt;</span>cols;p<span>++</span>){\n          tempDist <span>=</span> tempDist<span>+</span>pow(centers(j,p)<span>-</span>data(i,p),<span>2</span>);      \n         <span>//in innermost loop an euclidean distance is calculated.</span>\n          dist <span>=</span> dist <span>+</span> pow(centers(k,p)<span>-</span>data(i,p),<span>2</span>);              \n<span>/*tempDist is nominator inside the sum operator in the equation, dist is the denominator inside the sum operator in the equation*/</span>\n        }\n        tempDist <span>=</span> sqrt(tempDist);\n        dist <span>=</span> sqrt(dist);\n        denominator <span>=</span> denominator<span>+</span>pow((tempDist<span>/</span>dist),(<span>2</span><span>/</span>(m<span>-</span><span>1</span>)));\n        tempDist <span>=</span> <span>0</span>;\n        dist <span>=</span> <span>0</span>;\n      }\n      result(i,j) <span>=</span> <span>1</span><span>/</span>denominator;    \n<span>// nominator/denominator in the  main equation</span>\n      denominator <span>=</span> <span>0</span>;                           \n    }\n  }\n  <span>return</span> result;\n}\n</pre>\n</div>\n<p>We can save this in a file with .cpp extension. To compile it from R we can write:</p>\n<pre>sourceCpp(\"path_to_cpp_file\")\n</pre>\n<p>If everything goes right our function <code>fuzzyClustering</code> will then be available from R.</p>\n<h3>R version</h3>\n<div>\n<pre>fuzzyClustering<span>=</span><span>function</span>(data,centers,m){\n\n  c <span>&lt;-</span> nrow(centers)\n  rows <span>&lt;-</span> nrow(data)\n  cols <span>&lt;-</span> ncol(data)\n  result <span>&lt;-</span> matrix(<span>0</span>,nrow<span>=</span>rows,ncol<span>=</span>c)  <span>#defining membership matrix</span>\n  denominator <span>&lt;-</span> <span>0</span>\n  \n  <span>for</span>(i <span>in</span> <span>1</span><span>:</span>rows){\n    <span>for</span>(j <span>in</span> <span>1</span><span>:</span>c){\n      tempDist <span>&lt;-</span> sqrt(sum((centers[j,]<span>-</span>data[i,])<span>^</span><span>2</span>))  <span>#euclidean distance, nominator inside a sum operator </span>\n      <span>for</span>(k <span>in</span> <span>1</span><span>:</span>c){\n        Dist <span>&lt;-</span> sqrt(sum((centers[k,]<span>-</span>data[i,])<span>^</span><span>2</span>))    <span>#euclidean distance, denominator inside a sum operator </span>\n        denominator <span>&lt;-</span> denominator <span>+</span>((tempDist<span>/</span>Dist)<span>^</span>(<span>2</span><span>/</span>(m<span>-1</span>))) <span>#denominator of an equation </span>\n      }    \n      result[i,j] <span>&lt;-</span> <span>1</span><span>/</span>denominator    <span>#inserting value into membership matrix</span>\n      denominator <span>&lt;-</span> <span>0</span>           \n    }\n  }\n  <span>return</span>(result);\n}\n</pre>\n</div>\n<p>Result looks as follows. Columns are cluster numbers (in this case 10 clusters were created), rows are our objects (observations). Values were rounded to the third decimal place, so the sums of rows can be slightly different than 1:</p>\n<pre>          1     2     3     4     5     6     7     8     9    10  \n [1,] 0.063 0.038 0.304 0.116 0.098 0.039 0.025 0.104 0.025 0.188  \n [2,] 0.109 0.028 0.116 0.221 0.229 0.080 0.035 0.116 0.017 0.051  \n [3,] 0.067 0.037 0.348 0.173 0.104 0.066 0.031 0.095 0.018 0.062  \n [4,] 0.016 0.015 0.811 0.049 0.022 0.017 0.009 0.023 0.007 0.031  \n [5,] 0.063 0.048 0.328 0.169 0.083 0.126 0.041 0.079 0.018 0.045  \n [6,] 0.069 0.039 0.266 0.226 0.102 0.111 0.037 0.084 0.017 0.048  \n [7,] 0.045 0.039 0.569 0.083 0.060 0.046 0.025 0.071 0.015 0.046  \n [8,] 0.070 0.052 0.399 0.091 0.093 0.054 0.034 0.125 0.022 0.062  \n [9,] 0.095 0.037 0.198 0.192 0.157 0.088 0.038 0.121 0.019 0.055 \n[10,] 0.072 0.024 0.132 0.375 0.148 0.059 0.025 0.081 0.015 0.067\n</pre>\n<h3>Performance comparison</h3>\n<p>Shown below is the output of <code>Sys.time</code> for the C++ and R versions, running against a&nbsp;simulated matrix with 30000 observations, 3 variables and 10 clusters. <br>The hardware I used was a low-cost notebook Asus R556L with Intel Core i3-5010 2.1 GHz processor and 8 GB DDR3 1600 MHz RAM memory.</p>\n<p>C++ version:</p>\n<pre>  user    system  elapsed\n  0.32    0.00    0.33 \n</pre>\n<p>R version:</p>\n<pre>  user    system  elapsed\n  15.75    0.02     15.94 <br></pre>\n<p>In this example, the function written in C++ executed about 50 times faster than the equivalent function written in pure R.</p>","LastUpdateTime":"2017-08-25T00:14:10","Link":"http://blog.revolutionanalytics.com/2017/08/kmeans-r-rcpp.html","MobileContent":null,"PublishId":0,"Status":1,"Title":"Calculating a fuzzy kmeans membership matrix with R and Rcpp","Type":1,"TitleCn":"计算 R 与 Rcpp kmeans 模糊隶属度矩阵","Content":"<p><em>由<a href=\"https://www.linkedin.com/in/b%C5%82a%C5%BCej-moska-9a316113a/\">Błażej 沦为</a>，计算机科学专业的学生和数据科学实习生</em></p>\n<p>假设，我们进行聚类 K-均值聚类在 R 和满意与我们的结果，但后来我们意识到，它也是有用的隶属度矩阵。当然它会容易重复聚类使用 R 中可用的模糊均值比率函数之一 (像<a href=\"https://www.rdocumentation.org/packages/cluster/versions/2.0.6/topics/fanny\"> <code>fanny</code> </a>，举个例子)，但由于它是略有不同的实现结果也可能不同，因为某些原因，我们不希望它们发生更改。知道该方程我们可以构造这个矩阵对我们自己，之后使用<a href=\"https://www.rdocumentation.org/packages/stats/versions/3.4.1/topics/kmeans\"> <code>kmeans</code> </a>函数。方程的定义如下 (来源：<a href=\"https://en.wikipedia.org/wiki/Fuzzy_clustering\">维基百科</a>):</p>\n<p>$$ w_ {ij} = 压裂 {1} {sum_ {k = 1} ^ c (压裂 {| x_ {i}-c_ {j} |}{| x_ {i}-c_ {k} |})^ {压裂 {2} {m-1}}} $$</p>\n<p>(w_ {ij}) 表示到什么程度 (i) th 对象属于 (j) th 群集。所以这个矩阵行的总数等于观察数和总数目列等于包括聚类中的变量。(m) 是一个参数，通常设置为 (m = 2)。(w_ {ij}) 值介于 0 和 1，所以他们很容易和方便比较。在此示例中将 (m = 2) 因此将计算欧氏距离。</p>\n<p>为了使计算速度更快，也使用<a href=\"http://adv-r.had.co.nz/Rcpp.html\">Rcpp 软件包</a>，然后我比较在 R 用这个写在 c + + 编写的函数的执行速度。</p>\n<p>在实现 <code>for</code> 循环使用了，虽然它不是常用的方法，在 R （请看<a href=\"http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html\">这篇博客</a>更多的信息和备选方案），但是在这种情况下我发现它更方便。</p>\n<h3>Rcpp （c + + 版本）</h3>\n<div>\n<pre><span>#include &lt; Rcpp.h &gt;</span>\n<span>#include 就是 &lt; math.h &gt;</span>\n<span>使用</span><span>命名空间</span>Rcpp;\n\n<span>/ / [[Rcpp::export]]</span>\n<span>fuzzyClustering</span><span>int</span> m) {  \n<span></span>\n<span>   </span>\n<span>   m 是方程参数，c 是簇数目</span>\n<span>* /</span>\n  \n  <span>int</span> c<span>=</span>centers.rows();\n  <span>int</span><span>=</span> data.rows();\n  <span>int</span><span>=</span><span>/ * 列等于数的变量，一样是在中心矩阵 * /</span>\n  <span>双</span>tempDist<span>=</span><span>0</span>;        <span>/ * dist 和 tempDist 是变量存储临时的欧几里得距离 * /</span>\n  <span>双</span>dist<span>=</span><span>0</span>;      \n  <span>双</span>分母<span>=</span><span>0</span>;    <span>\"主要\"方程 //denominator</span>\n  \n  NumericMatrix result(rows,c);    <span>矩阵的结果 //declaration</span>\n  \n  <span>为</span>(<span>int</span> i<span>=</span><span>0</span>; i<span>&lt;</span>行; 我<span>+ +</span>){\n    <span>为</span>（<span>int</span> j<span>=</span><span>0</span>; j<span>&lt;</span>c; j<span>+ +</span>） {\n      <span>为</span>（<span>int</span> k<span>=</span><span>0</span>; k<span>&lt;</span>c; k<span>+ +</span>） {\n        <span>为</span>（<span>int</span> <span>=</span>p<span>0</span>; p<span>&lt;</span>cols; p<span>+ +</span>） {\n          <span>=</span> tempDist<span>+</span>pow(centers(j,p)<span>-</span>data(i,p)，<span>2</span>);      \n         <span>//in 内层循环计算欧氏距离。</span>\n          <span>=</span><span>+</span> pow(centers(k,p)<span>-</span>data(i,p)，<span>2</span>);              \n<span>/ * tempDist 是提名人里面求和算子方程中，dist 是分母内 sum 运算符在方程 * /</span>\n        }\n        <span>=</span> sqrt(tempDist);\n        <span>=</span> sqrt(dist);\n        <span>=</span>分母<span>+</span>战俘 ((tempDist<span>/</span>dist)，(<span>2</span><span>/</span>(<span>-</span>m<span>1</span>)));\n        <span>=</span><span>0</span>;\n        <span>=</span><span>0</span>;\n      }\n      <span>=</span><span>1</span><span>/</span>分母;    \n<span>/ / 提名人或分母在  主要方程</span>\n      <span>=</span><span>0</span>;                           \n    }\n  }\n  <span>返回</span>的结果;\n}\n</pre>\n</div>\n<p>我们可以将它保存在.cpp 扩展名的文件。若要编译它从 R 我们可以编写：</p>\n<pre>sourceCpp(\"path_to_cpp_file\")\n</pre>\n<p>如果一切顺利我们的函数 <code>fuzzyClustering</code> 然后可从。</p>\n<h3>R 版本</h3>\n<div>\n<pre>fuzzyClustering<span>=</span><span>function</span>(data,centers,m){\n\n  <span>&lt;-</span> nrow(centers)\n  <span>&lt;-</span> nrow(data)\n  <span>&lt;-</span> ncol(data)\n  <span>&lt;-</span> matrix(<span>0</span>,nrow<span>=</span>rows,ncol<span>=</span>c)  <span>#defining membership matrix</span>\n  <span>&lt;-</span><span>0</span>\n  \n  <span>for</span><span>in</span><span>1</span><span>:</span>rows){\n    <span>for</span><span>in</span><span>1</span><span>:</span>c){\n      <span>&lt;-</span> sqrt(sum((centers[j,]<span>-</span>data[i,])<span>^</span><span>2</span>))  <span></span>\n      <span>for</span><span>in</span><span>1</span><span>:</span>c){\n        <span>&lt;-</span> sqrt(sum((centers[k,]<span>-</span>data[i,])<span>^</span><span>2</span>))    <span></span>\n        <span>&lt;-</span><span>+</span>((tempDist<span>/</span>Dist)<span>^</span>(<span>2</span><span>/</span>(m<span>-1</span><span> </span>\n      }    \n      <span>&lt;-</span><span>1</span><span>/</span>分母    <span>#inserting 值到隶属度矩阵</span>\n      <span>&lt;-</span><span>0</span>           \n    }\n  }\n  <span>返回</span>（结果）;\n}\n</pre>\n</div>\n<p>结果如下所示。列是的群集数量 （在这种情况下 10 集群创建），行是我们的对象 （意见）。值被舍入到小数第三位，所以行的款项可以比 1 略有不同：</p>\n<pre>          1     2     3     4     5     6     7     8     9    10  \n [1，] 0.063 0.038 0.304 0.116 0.098 0.039 0.025 0.104 0.025 0.188  \n [2，] 0.109 0.028 0.116 0.221 0.229 0.080 0.035 0.116 0.017 为 0.051  \n [3，] 0.067 0.037 0.348 0.173 0.104 0.066 天文 0.031 0.095 0.018 0.062 个  \n [4，] 0.016 0.015 0.811 0.049 0.022 0.017 0.009 0.023 0.007 0.031  \n [5，] 0.063 0.048 0.328 0.169 0.083 0.126 0.041 0.079 0.018 0.045  \n [6，] 0.069 0.039 0.266 0.226 0.102 0.111 0.037 0.084 0.017 0.048  \n [7，] 0.045 0.039 0.569 0.083 0.060 0.046 0.025 0.071 0.015 0.046  \n [8，] 0.070 0.052 0.399 0.091 0.093 按 0.054 0.034 0.125 0.022 0.062 个  \n [9，] 0.095 0.037 0.198 0.192 0.157 0.088 0.038 0.121 0.019 0.055 \n[10，] 0.072 0.024 0.132 0.375 0.148 0.059 0.025 0.081 0.015 0.067\n</pre>\n<h3>性能比较</h3>\n<p>如下图所示是输出的 <code>Sys.time</code> c + + 和 R 版本，针对一个模拟矩阵与 30000 意见、 3 个变量和 10 集群运行。<br>我使用的硬件是一个低成本笔记本 Asus R556L 与英特尔酷睿 i3 5010 2.1 GHz 处理器和 8 GB DDR3 1600 MHz 内存。</p>\n<p>C + + 版本：</p>\n<pre>  用户    系统  经过\n  0.32    0.00    0.33 \n</pre>\n<p>R 版本：</p>\n<pre>  用户    系统  经过\n  15.75    0.02     <br></pre>\n<p>在此示例中，函数写在 c + + 编写的纯 R.等效函数比快执行约 50 倍</p>"},{"Id":87,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-08-24T15:34:55","Description":"Having executed a test &ndash; at a minimum &ndash; we want to know the outcome. But beyond that, we may want to know more. Data collectors and loggers are the key extension mechanisms intended to provide this and other such details for rich reporting. Data collectors and loggers generate information based on listening to events... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/\"> Read More</a>","LastUpdateTime":"2017-08-24T15:34:55","Link":"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Visual Studio Test Platform – upcoming changes to data collectors","Type":1,"TitleCn":"视觉工作室测试平台 — — 即将更改为数据收集器","Content":"在执行测试 — — 至少 — — 我们想要知道结果。但除此之外，我们可能想要知道更多。数据收集器和记录器是旨在为这和其他此类细节丰富报告的关键扩展机制。数据收集器和记录器生成基于侦听事件信息...<a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/\">阅读更多</a>"},{"Id":63,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-24T02:00:20","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%202017%20Version%2015.4%20Preview\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>I&rsquo;m happy to announce that the first Preview of Visual Studio 2017 version 15.4 is now available! You can either <a href=\"https://www.visualstudio.com/vs/preview/\">download it from here</a>, or if you already have Preview installed, you&rsquo;ll receive a notification that the update is available. This latest Preview contains new tools and features in several key workloads such as Universal Windows Platform (UWP) development, .NET desktop development, and Mobile and Game development. It also continues our drive to improve and polish the fundamentals such as productivity and reliability and address customer-reported bugs. Read the feature highlight summary below, and check out the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">Visual Studio 2017 version 15.4 Preview Release notes</a> for a detailed description of the new functionality contained in this Preview.</p>\n<h2>Universal Windows Platform Development &ndash; Windows Fall Creators Update</h2>\n<p>First, Visual Studio 2017 version 15.4 brings first class support for UWP developers targeting the upcoming Windows Fall Creators Update. To start building apps against this new Windows update, first, make sure you are enrolled in the <a href=\"https://insider.windows.com/en-us/\">Windows Insider Program</a>. Once you are enrolled, install the latest pre-release version of the <a href=\"https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK\">Windows Insider Preview SDK</a>.</p>\n<h3>.NET Standard 2.0 Support</h3>\n<p>With the release of the Windows Fall Creators Update, you will be able to leverage the power of <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET Standard 2.0</a> when building UWP applications. .NET Standard 2.0 brings an additional 20,000+ .NET APIs to Windows 10 UWP developers &ndash; many of which will be familiar to Windows Desktop (WPF, Windows Forms, etc&hellip;) developers. .NET Standard 2.0 also allows for easier sharing of code between various .NET project types as project-to-project references, or as NuGet packages. We are starting to see a variety of NuGet packages show up on NuGet.org with support for .NET Standard 2.0, all of which will be available for consumption inside UWP projects.</p>\n<p>To build UWP apps using the new .NET Standard 2.0 APIs, make sure you have the Windows Fall Creators Update Insider SDK Preview installed, and set the <b>minimum</b> version of your project to this version of the SDK.</p>\n<h3>Windows Application Packaging Project</h3>\n<p>In Visual Studio 2017 version 15.4 Preview, you will get the first peek at a <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">new project template</a> that enables Classic Windows Desktop apps created with .NET or C++ to be packaged inside an .appx package for easier distribution via side-loading or submission to the Windows Store. These templates work for both new Classic Windows Desktop projects, as well as for existing projects.</p>\n<h3>XAML Edit &amp; Continue Improvements</h3>\n<p>You can edit or remove XAML resources using XAML Edit &amp; Continue. In addition, you can also add ControlTemplates to your XAML while using XAML Edit &amp; Continue. To leverage these new features, make sure you are running the Windows Fall Creators Update Preview.</p>\n<h2>Mobile and Game Development</h2>\n<h3>Unity</h3>\n<p>In Visual Studio 2017 version 15.4 Preview we have made improvements and bugfixes in the tooling for Unity. There is better support for the latest released Unity 2017.1 runtime. This Preview also supports <a href=\"https://forum.unity3d.com/threads/example-project-assembly-definition-files.482313/\">user-defined managed assemblies</a>, a feature coming in Unity 2017.2 that helps to drastically minimize script compilation times of projects. To help with debugging, you can now &ldquo;Set Instruction Pointer&rdquo;, which allows you to which moves the execution point and sets the next statement of code to be executed.</p>\n<h3>Xamarin</h3>\n<p>The <a href=\"https://www.xamarin.com/live\">Xamarin Live Player</a> is also included in Visual Studio 2017 version 15.4 Preview. This enables developers to develop, test, and debug mobile apps directly on their iOS and Android devices using only Visual Studio and a device. It&rsquo;s meant to simplify getting started with mobile development. For instructions on how to try it out, please refer to the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">Preview Release Notes</a> and, of course, please <a href=\"https://developercommunity.visualstudio.com/\">tell us what you think</a>!</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image0011.gif\"><img width=\"800\" height=\"486\" title=\"Xamarin Live Player\" alt=\"Xamarin Live Player\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image001_thumb1.gif\"></a></p>\n<h2>The Fundamentals</h2>\n<h3>Installer Behavior and Acquisition Experience.</h3>\n<p>Visual Studio 2017 version 15.4 Preview contains some notable install experience improvements. For example, if you encounter any installation errors, we now provide better assistance in discovering solutions. If some component fails to install and someone else had already reported a similar issue, then the installer error message will link back to the <a href=\"https://developercommunity.visualstudio.com/spaces/8/index.html\">Visual Studio Developer Community</a> and point you to info that should help you diagnose and resolve the problem.</p>\n<h3>Productivity Improvements</h3>\n<p>There are a handful of new productivity features that will help you be more efficient and effective as you develop your code. For example, with this Preview, if you&rsquo;re a C#, VB, or Python developer, you can navigate around your project faster because Ctrl+Click will now Go To Definition. We&rsquo;ve continued to improve performance and memory usage as compared to earlier releases. Lastly, we&rsquo;ve refined <a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/03/09/live-unit-testing-in-visual-studio-2017-enterprise/\">Live Unit Testing</a> by making it easier to initiate with a start command in the right click context menu as well as in the Team Explorer window. Live Unit Testing is better integrated with MSTest for use in manual mode. <b></b></p>\n<h3>C++ Development</h3>\n<p>You can now use <a href=\"https://aka.ms/vslinuxcmake\">CMake for Linux C++ development in Visual Studio</a>, which allows you to use CMake based projects that target Windows, Linux, or both. Simply open a folder with your CMake project, select Linux as your target and upon connecting to your Linux machine your sources are synchronized for you. Once the CMake cache generation is complete you&rsquo;ll have full IntelliSense for your project and targets for building, running and debugging within Visual Studio.</p>\n<p>In addition to CMake support for Linux C++ development, with Visual Studio 2017 version 15.4 Preview you can now benefit from CMake version 3.9 and improved support for projects with multiple CMakeLists.</p>\n<h2>Data Science Tooling</h2>\n<p>If you&rsquo;re a Data Scientist using R, we&rsquo;ve added some great new features to Visual Studio 2017 version 15.4 Preview. Now you can use the full power of Visual Studio to connect to an R session running on a remote computer that is running on Linux or Windows. We support running against on-premise and cloud (Azure) computers as well. In the IDE, we&rsquo;ve added error squiggles (inline underlines) that will highlight places where you can improve your R code. Finally, we&rsquo;ve added Live RMarkdown editing, which gives you a live preview of your markdown edits as you<i> </i>type.</p>\n<h2>Try it out today!</h2>\n<p>If you&rsquo;re not familiar with Visual Studio Previews, take a moment to read the <a href=\"https://www.visualstudio.com/en-us/productinfo/vs2017-release-rhythm\">Visual Studio 2017 Release Rhythm</a>. Remember that Visual Studio 2017 Previews will install <em>side by side</em> with released bits, so they should not impact your machine. Previews provide an opportunity for you to receive fixes faster and try out upcoming functionality before it becomes mainstream. Similarly, the Previews enable the Visual Studio Engineering team to validate usage, incorporate suggestions, and detect flaws earlier in the development process. We are highly responsive to feedback coming in through the Previews and look forward to hearing from you.</p>\n<p>Please <a href=\"https://www.visualstudio.com/vs/preview/\">Install the Visual Studio 2017 Preview today</a>, exercise your favorite workloads, and tell us what you think. You can report issues or send feedback to us via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Report a Problem in the IDE</a> or you can share a suggestion on <a href=\"https://visualstudio.uservoice.com/forums/121579\">UserVoice</a>. You can also track your bugs, learn from others, and receive helpful information on the <a href=\"https://developercommunity.visualstudio.com/\">developer community portal</a>.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"357\" height=\"410\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Christine-Ruana-e1498715608219.jpg\"></td>\n<td valign=\"top\" width=\"450\"><strong>Christine Ruana</strong>, Principal Program Manager, Visual Studio\n<p>Christine is on the Visual Studio release engineering team and is responsible for making Visual Studio releases available to our customers around the world.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-24T02:00:20","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/23/visual-studio-2017-version-15-4-preview/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Visual Studio 2017 Version 15.4 Preview","Type":1,"TitleCn":"视觉工作室 2017年版本 15.4 预览","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%202017%20Version%2015.4%20Preview\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>我很高兴地宣布，第一个预览的视觉工作室 2017 15.4 版本现已可用 ！您可以<a href=\"https://www.visualstudio.com/vs/preview/\">下载它从这里</a>要么，或如果您已经安装的预览，您会收到通知有可用的更新。这个新的预览包含新的工具和功能在几个关键工作量普遍 Windows 平台 (UWP) 发展、.NET 桌面开发，和手机和游戏开发等。它还继续我们的驱动器，以改善和提高生产力和可靠性和地址客户报告的 bug 等基本面。阅读功能突出显示摘要如下，并检查了<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">视觉工作室 2017年版本 15.4 预览发行说明</a>的详细说明，此预览中包含的新功能。</p>\n<h2>通用的 Windows 平台开发 — — Windows 下跌创作者更新</h2>\n<p>第一，视觉工作室 2017 版本 15.4 UWP 开发人员针对即将到来的 Windows 秋天创作者更新带来第一类的支持。要开始构建应用程序对此新的 Windows 更新，首先，请确保您注册的<a href=\"https://insider.windows.com/en-us/\">Windows 内幕交易程序</a>。一旦你被录取，安装最新的预发布版本的<a href=\"https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK\">Windows 内幕预览 SDK</a>。</p>\n<h3>.NET 标准 2.0 支持</h3>\n<p>随着 Windows 秋天创作者更新的发布，您将能够利用<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET 标准 2.0</a>的力量，构建 UWP 应用程序时。.NET 2.0 标准 Windows 10 UWP 开发人员 — — 其中许多将熟悉的 Windows 桌面 （WPF 中，Windows 窗体，等等） 开发人员带来了 20000 多.NET Api。.NET 标准 2.0 还允许各种.NET 项目类型作为项目到项目的引用，或作为 NuGet 程序包之间的代码共享更加方便。我们开始看到各种各样 NuGet 程序包的显示在 NuGet.org 与.NET 2.0 标准，支持所有的一切都将供 UWP 项目内部消费。</p>\n<p>若要生成 UWP 应用程序在使用新的.NET 标准 2.0 Api，确保你有 Windows 秋天创作者更新内幕 SDK 预览安装，并将您的项目的<b>最低</b>版本设置为此版本的 SDK。</p>\n<h3>Windows 应用程序包装项目</h3>\n<p>在 Visual Studio 2017 年版本 15.4 预览，你会得到第一的聚醚醚酮在启用经典 Windows 桌面应用程序使用.NET 或 c + + 包装简化分发通过侧加载或提交到 Windows 应用商店.appx 包内创建<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">新的项目模板</a>。这些模板致力为这两个新的经典 Windows 桌面项目，以及现有的项目。</p>\n<h3>XAML 编辑和继续改善</h3>\n<p>您可以编辑或删除 XAML 资源使用 XAML 编辑和继续。此外，您还可以添加 ControlTemplates 您的 xaml 同时使用 XAML 编辑和继续。要利用这些新的功能，请确保您正在运行 Windows 秋天创作者更新预览。</p>\n<h2>移动和游戏开发</h2>\n<h3>团结</h3>\n<p>在 Visual Studio 2017 年版本 15.4 预览在统一的工具而进行了改进和错误修正。还有更好的最新公布的统一 2017.1年运行时支持。此预览还支持<a href=\"https://forum.unity3d.com/threads/example-project-assembly-definition-files.482313/\">用户定义的托管程序集</a>，有助于大幅减少项目脚本编译时间的统一 2017.2年进来的功能。为了帮助调试，您可以现在\"设置指令指针\"，它允许你到哪移动执行点和设置要执行的代码的下一个语句。</p>\n<h3>Xamarin</h3>\n<p><a href=\"https://www.xamarin.com/live\">Xamarin 住球员</a>还包括在 Visual Studio 2017 年版本 15.4 预览。这使开发人员能够开发、 测试和调试手机应用程序直接在他们的 iOS 和 Android 设备只使用 Visual Studio 和设备上。这意味着为了简化移动开发入门。有关如何试试看说明，请参阅<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">预览发行说明</a>，而且，当然，请<a href=\"https://developercommunity.visualstudio.com/\">告诉我们你的想法</a>！</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image0011.gif\"><img width=\"800\" height=\"486\" title=\"Xamarin Live Player\" alt=\"Xamarin Live Player\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image001_thumb1.gif\"></a></p>\n<h2>基本面</h2>\n<h3>安装程序行为和习得经验。</h3>\n<p>视觉工作室 2017年版本 15.4 预览包含一些显著的安装体验的改进。例如，如果你遇到任何安装错误，我们现在提供更好的援助，在发现解决方案。如果某些组件安装失败，其他人已经报告了类似的问题，然后安装程序错误消息将链接回<a href=\"https://developercommunity.visualstudio.com/spaces/8/index.html\">Visual Studio 开发人员社区</a>和点你到信息应该可以帮助您诊断和解决问题。</p>\n<h3>生产力的提高</h3>\n<p>有少量的新的生产力功能，将帮助你更有效地为您开发您的代码。例如，这个预览，如果你是一个 C#、 VB，或者 Python 的开发人员，您可以导航与围绕您的项目更快因为 Ctrl + 单击将现在转到定义。我们一直以提高性能和内存使用情况与早期版本相比。最后，我们已经<a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/03/09/live-unit-testing-in-visual-studio-2017-enterprise/\">生活单元测试</a>精制而成使它更容易着手在右键单击上下文菜单在团队资源管理器窗口中启动命令。单元测试是更好地配合 MSTest 在手动模式下使用。<b></b></p>\n<h3>C + + 开发</h3>\n<p>您现在可以使用<a href=\"https://aka.ms/vslinuxcmake\">Visual Studio 中的 Linux c + + 开发的 CMake</a>，它允许您使用针对 Windows、 Linux，或两者的 CMake 基础项目。只需打开一个文件夹与您的 CMake 项目、 选择 Linux 作为你的目标并连接到您的 Linux 机器你源同步为您。CMake 缓存生成完成后你得为您的项目的完整智能感知和生成、 运行和调试 Visual Studio 中的目标。</p>\n<p>除了 Linux c + + 开发的 CMake 支持，与视觉工作室 2017年 15.4 预览你的版本现在可以受益于 CMake 版本 3.9 和改进对于具有多个 CMakeLists 项目的支持。</p>\n<h2>数据科学工具</h2>\n<p>如果你是一名使用 R 的数据科学家，我们已经添加一些伟大的新功能到 Visual Studio 2017 版本 15.4 预览。现在你可以使用 Visual Studio 的全部力量来连接到运行在 Linux 或 Windows 的远程计算机上运行的 R 会话。我们支持针对运行的前提和云 (Azure) 计算机以及。在 IDE 中，我们已经添加了错误的花体字 （内联下划线），将突出在哪里你可以提高你 R 代码的地方。最后，我们添加了住 RMarkdown 编辑，让你有你降价编辑作为你的实时预览<i></i>类型。</p>\n<h2>今天试一下 ！</h2>\n<p>如果你不熟悉 Visual Studio 预览，花时间来阅读<a href=\"https://www.visualstudio.com/en-us/productinfo/vs2017-release-rhythm\">视觉工作室 2017年释放节奏</a>。还记得视觉工作室 2017年预览将释放位，安装<em>肩并肩</em>，所以他们应该不会影响您的机器。预览提供机会让你更快地获得补丁程序，尝试一下即将到来的功能之前它成为主流。同样，预览启用视觉工作室工程团队验证用法，采纳建议，并找出不足，早些时候在发展过程中。我们高度响应反馈通过预览进来，期待着你的听力。</p>\n<p>请<a href=\"https://www.visualstudio.com/vs/preview/\">安装 Visual Studio 2017 预览今天</a>，行使您最喜欢的工作负载，并告诉我们你的想法。您可以报告问题或通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">报告在 IDE 中的问题</a>向我们发送反馈您可以共享<a href=\"https://visualstudio.uservoice.com/forums/121579\">UserVoice</a>建议。此外可以跟踪您的 bug、 向他人学习，和得到有用的信息，<a href=\"https://developercommunity.visualstudio.com/\">开发人员社区门户</a>上。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"357\" height=\"410\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Christine-Ruana-e1498715608219.jpg\"></td>\n<td valign=\"top\" width=\"450\"><strong>陆恭 Ruana</strong>，首席项目经理，视觉工作室<p>克里斯蒂娜在 Visual Studio 的版本工程学团队并负责使我们世界各地的客户可以使用 Visual Studio 的版本。</p></td>\n</tr></tbody></table>"},{"Id":57,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-23T00:30:15","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Create%20a%20CI%2FCD%20pipeline%20for%20containerized%20ASP.NET%20Core%20projects\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>At //BUILD 2017, we <a href=\"http://aka.ms/cd4vsblog4\">shipped</a> an update to the <a href=\"http://aka.ms/CD4VS\">Continuous Delivery Tools for Visual Studio</a> with support for configuring a Continuous Integration and Continuous Delivery pipeline for <a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a> projects with <a href=\"https://www.docker.com/what-container\">container support</a> to an existing <a href=\"https://docs.microsoft.com/en-us/azure/app-service-web/app-service-linux-intro\">Azure App Service on Linux</a> directly from <a href=\"https://www.visualstudio.com/downloads/\">Visual Studio 2017</a>. With the latest update to the extension we introduced the ability to create a new Azure App Service On Linux while configuring continuous delivery.</p>\n<p>To configure continuous delivery to App Service on Linux, create or open an existing solution with an ASP.NET Core project. Add Docker support to the project and ensure that the solution is under version control on VSTS or GitHub. Right click on the solution in Solution Explorer and select Configure Continuous Delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\" rel=\"noopener noreferrer\"><img width=\"612\" height=\"616\" title=\"Select Configure Continuous Delivery in Solution Explorer\" alt=\"Select Configure Continuous Delivery in Solution Explorer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\"></a></p>\n<p>Then, select App Service (Linux) as the Target Host type and use the default newly created app service or select an existing Azure App Service to act as a target for continuous delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img width=\"780\" height=\"492\" title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\"></a></p>\n<p>You can click the &ldquo;Edit&hellip;&rdquo; link beside the App Service field to edit the new App Service configuration. You can change the Location, Resource Group, App Service Plan and Service Plan size using the &ldquo;Edit App Service&rdquo; dialog.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\" rel=\"noopener noreferrer\"><img width=\"549\" height=\"327\" title=\"Edit App Service Dialog\" alt=\"Edit App Service Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\"></a></p>\n<p>If you are not using an existing App Service as your target host, the registry settings for that App Service should match your selected container registry as the VSTS release definition only updates the image name and tag, not the full container registry settings. With the latest update to the extension, you now get an error that the container registry settings must change for continuous delivery to work successfully.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\" rel=\"noopener noreferrer\"><img width=\"744\" height=\"430\" title=\"Warning for container registry settings\" alt=\"Warning for container registry settings\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\"></a></p>\n<p>Clicking &ldquo;Allow App Service settings change to a private registry&rdquo;, will enable the Configure Continuous Delivery Dialog to update the selected App Service settings when you click OK to configure continuous delivery</p>\n<h3>Please keep the feedback coming!</h3>\n<p>Thank you to everyone who has reached out and shared feedback and ideas so far. We&rsquo;re always looking for feedback on where to take this <a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs extension</a> next. There&rsquo;s a <a>Slack channel</a> and a team alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>Ahmed Metwally</strong>, Senior PM, Visual Studio<br>\n@cd4vs (<a href=\"https://twitter.com/cd4vs)\">https://twitter.com/cd4vs)</a>\n<p>Ahmed is a Program Manager on the Visual Studio Platform team focused on improving team collaboration and application lifecycle management integration.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-23T00:30:15","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/22/create-a-cicd-pipeline-for-containerized-asp-net-core-projects/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Create a CI/CD pipeline for containerized ASP.NET Core projects","Type":1,"TitleCn":"创建一个 CI/CD 管道集装箱 ASP.NET Core 项目","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Create%20a%20CI%2FCD%20pipeline%20for%20containerized%20ASP.NET%20Core%20projects\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>在 //BUILD 2017 年，我们<a href=\"http://aka.ms/cd4vsblog4\">运</a>到<a href=\"http://aka.ms/CD4VS\">Visual Studio 连续交付工具</a>与支持配置<a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET 核心</a>持续集成和持续交付管道更新项目<a href=\"https://www.docker.com/what-container\">容器支持</a>到现有的<a href=\"https://docs.microsoft.com/en-us/azure/app-service-web/app-service-linux-intro\">Azure 应用程序服务在 Linux 上</a>直接从<a href=\"https://www.visualstudio.com/downloads/\">2017 年开始工作室视觉</a>。与最新的更新到扩展我们介绍了配置持续交付时创建一个新 Azure 应用程序服务对 Linux 的能力。</p>\n<p>在 Linux 上配置连续传递到应用程序服务，请创建或打开一个现有的解决方案与 ASP.NET 核心项目。向项目中添加码头工人支持并确保解决方案在 VSTS 或 GitHub 上的版本控制之下。右键单击解决方案资源管理器中的解决方案并选择配置持续交付。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\" rel=\"noopener noreferrer\"><img width=\"612\" height=\"616\" title=\"Select Configure Continuous Delivery in Solution Explorer\" alt=\"Select Configure Continuous Delivery in Solution Explorer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\"></a></p>\n<p>然后，选择应用程序服务 (Linux) 作为目标主机类型和使用新创建的应用程序服务的默认值或选择现有的 Azure 应用程序服务，作为持续交付的目标。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img width=\"780\" height=\"492\" title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\"></a></p>\n<p>您可以单击要编辑的新的应用程序服务配置的应用程序服务字段旁边的\"编辑...\"链接。您可以更改位置、 资源组、 应用程序服务计划和服务计划的大小，使用\"编辑应用程序服务\"对话框。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\" rel=\"noopener noreferrer\"><img width=\"549\" height=\"327\" title=\"Edit App Service Dialog\" alt=\"Edit App Service Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\"></a></p>\n<p>如果您不使用现有的应用程序服务作为您的注册表设置，应用程序服务应与匹配的目标主机您选定的容器注册表 VSTS 释放定义只会更新图像名称和标记、 不完整的集装箱注册表设置。随着延长至最新的更新，你现在得到的容器注册表设置必须更改为持续的交付工作成功的错误。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\" rel=\"noopener noreferrer\"><img width=\"744\" height=\"430\" title=\"Warning for container registry settings\" alt=\"Warning for container registry settings\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\"></a></p>\n<p>单击\"允许应用程序服务设置更改到私有注册中心\"，将启用配置连续交付对话框以更新所选的应用程序服务设置，当您单击确定以配置连续传递</p>\n<h3>请保持反馈来 ！</h3>\n<p>谢谢大家有伸出和共享反馈和想法到目前为止。我们一直在寻找反馈在哪里下, 一步采取此<a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs 扩展名</a>。有一种<a>松弛的通道</a>和团队别名<a>vsdevops@microsoft.com</a>在那里你可以伸出，团队和其他人在社区分享关于这一主题的想法。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>艾哈迈德 Metwally</strong>，高级 PM 视觉工作室<br>@cd4vs (<a href=\"https://twitter.com/cd4vs)\">https://twitter.com/cd4vs)</a>\n<p>艾哈迈德是在 Visual Studio 平台团队专注于改善团队协作和应用程序生命周期管理集成的项目经理。</p></td>\n</tr></tbody></table>"},{"Id":35,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-22T02:30:04","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Committing%20with%20Confidence%3A%20Commit%20Time%20Code%20Quality%20Information%20Updated\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>In the earlier post <a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/05/22/committing-with-confidence-getting-code-quality-information-at-commit-time/\">&ldquo;Committing with Confidence: Getting Code Quality Information at Commit Time&rdquo;</a> , we introduced the new Build and Code Analysis Results panel, which gives you a heads-up reminder at commit-time of issues detected by any code analysis tool that puts results in the error list. This means you can take care of those issues before they propagate into your team&rsquo;s CI/CD process, and commit with confidence.</p>\n<p>The panel shows results both for live edit-time analysis (e.g. C#/VB Analyzers) and, via the Refresh Analysis button, for batch-style static analysis (e.g. C++ Static Analysis tools). It is supported on Visual Studio 2017 Enterprise. At present it supports code being committed to a Git Repo.</p>\n<h2>Focus on the issues that relate to your changed files</h2>\n<p>In response to your feedback, we have just released a new version of the <a href=\"http://aka.ms/cd4vs\">Continuous Delivery Tools for Visual Studio</a> extension which updates the panel to show issue counts <b>only for files that are changed in the set of files you are committing</b>, so that you can focus only on the issues related to your changes.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Team-Explorer.png\" rel=\"noopener noreferrer\"><img title=\"Commit Time Code Quality Information Updated - Team Explorer \" alt=\"Commit Time Code Quality Information Updated - Team Explorer \" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Team-Explorer.png\" width=\"403\" height=\"430\"></a></p>\n<p>The View Issues link will take you straight to a view of the Error List filtered to just the changed files too:</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Focus-on-issues-related-to-changed-files.png\" rel=\"noopener noreferrer\"><img title=\"Commit Time Code Quality Information Updated - Focus on issues related to changed files\" alt=\"Commit Time Code Quality Information Updated - Focus on issues related to changed files\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Focus-on-issues-related-to-changed-files.png\"></a></p>\n<h3>Please continue to share your feedback!</h3>\n<p>Please download and try the <a href=\"http://aka.ms/cd4vs\">Continuous Delivery Tools for Visual Studio</a> extension, try out the updated Build and Code Analysis Results panel and let us know what you think of the change, as well as the overall experience.</p>\n<p>Tell us more about what you think about this by filling out a short <a href=\"https://aka.ms/vs2017cqcigeneral\">survey</a></p>\n<p>We&rsquo;re always looking for feedback on where to take this Microsoft DevLabs extension next; features from the extension have already been refined using that feedback and incorporated into the core Visual Studio product in updates. There&rsquo;s a <a href=\"https://aka.ms/cd4vs_slack\">Slack channel</a> and a team email alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"2\" width=\"650\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2016/11/Mark-Wilson-Thomas.jpg\"></td>\n<td valign=\"top\" width=\"400\"><strong>Mark Wilson-Thomas</strong>, Senior Program Manager, Visual Studio IDE Team<br><a target=\"_blank\" href=\"https://twitter.com/MarkPavWT\" rel=\"noopener noreferrer\">@MarkPavWT</a>\n<p>Mark is a Program Manager on the Visual Studio IDE team, where he&rsquo;s been building developer tools for nearly 10 years. He currently looks after the Visual Studio Editor. Prior to that, he worked on tools for Office, SQL, WPF and Silverlight.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-22T02:30:04","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/21/committing-with-confidence-commit-time-code-quality-information-updated/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Committing with Confidence: Commit Time Code Quality Information Updated","Type":1,"TitleCn":null,"Content":null},{"Id":59,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-22T00:30:06","Description":"<p>You may have heard the industry buzzword &ldquo;serverless computing.&rdquo; Whether you are already a serverless ninja, or still on the fence about the bizarre name, read on! How does it work? Why should you care? Is it just a fad, or a real trend in computing?</p>\n<h2>Serverless computing defined</h2>\n<p>Serverless computing generally encompasses three things: 1) abstraction of servers, 2) event-driven scale and 3) micro-billing.</p>\n<ol><li><b>Abstraction of servers.</b> Serverless computing is fully managed. Users never explicitly reserve server instances; this is handled by the platform. Each function execution could run on a different compute instance, and this is completely transparent to your code.</li>\n<li><b>Event-driven scale. </b>Serverless is an excellent fit for workloads that respond to incoming events. Events include timers (e.g., run this function everyday at 10 am), HTTP (API and WebHook scenarios), queues (e.g., order processing), and much more. Instead of writing an entire application, you author a &ldquo;function,&rdquo; which contains both code and metadata about its triggers and bindings. The platform automatically schedules your function to run and scales the number of compute instances based on the rate of incoming events. Triggers define how a function is invoked. <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings\">Input and output bindings</a> provide a declarative way to connect to services from within your code. For example, suppose you want to write a new file to Azure Blob Storage every five minutes. You would use a <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-scheduled-function\">Timer trigger</a> and a <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob\">blob output binding</a>:\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\" rel=\"noopener noreferrer\"><img title=\"Azure Functions for DotNet Developers - Event Driven Scale\" alt=\"Azure Functions for DotNet Developers - Event Driven Scale\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\"></a></p>\n</li>\n<li><b>Micro-billing. </b>In traditional computing, there is a notion of per-second billing, but that&rsquo;s often not as useful as it sounds. Even if you have a website that gets only 1 hit a day, you must still pay for a full day&rsquo;s worth of availability. With serverless, you pay only when your code is executing. If there are no active function executions, you are not charged. For example, if your code runs once a day for 2 minutes, you are charged for 1 execution and 2 minutes of computing. For more details on billing, see <a href=\"https://azure.microsoft.com/en-us/pricing/details/functions/\">Azure Functions pricing</a>.</li>\n</ol><p>Together, these features enable you to focus on apps, not servers. That means you&rsquo;ll have reduced DevOps and a more productive computing environment. Customers have found that they are able to deploy solutions much more quickly than before. <a href=\"https://customers.microsoft.com/en-us/story/fujifilm-software-co-ltd\">Projects can now be completed in days or weeks, rather than months</a>.</p>\n<p>Azure Functions is Microsoft&rsquo;s serverless computing platform. Serverless involves more than just computing; it includes databases, messaging, and workflows. To learn more about the entire Azure serverless platform, see <a href=\"https://azure.com/serverless\">azure.com/serverless</a>.</p>\n<h2>Why serverless matters</h2>\n<p>More so than any other cloud computing paradigm, serverless frees you from managing infrastructure and enables you to focus on your business problem. Though serverless is still in its infancy, there are now many vendors who offer serverless platforms.</p>\n<p>Serverless is not just a fad or buzzword. Rather, serverless represents a dramatic shift in how developers think about cloud computing. With serverless, you need only worry about your code and how it is triggered. The platform takes care of the rest.</p>\n<h2>Serverless and tooling</h2>\n<p>When most cloud vendors launched their serverless offerings, there were many barriers to developer productivity. There was no support for debugging, there was no local development experience, and monitoring functions was hard. Despite this, the new programming model was so productive that serverless become a popular trend.</p>\n<p>As you might expect, Azure Functions included productivity features from the start. We have a tooling and local development experience that is unique among vendors. You can run the Azure Functions runtime on your local machine. Aside from the scale-out, it&rsquo;s the same runtime as in the cloud. You can even trigger off events in Azure, enabling a hybrid debugging experience.</p>\n<p>For monitoring, Azure Functions provides <a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2017/04/06/azure-functions-application-insights/\">Azure Application Insights integration</a>, an unparalleled monitoring experience. You can connect to a live event stream, see runtime metrics, and log your own custom metrics. Application Insights supports a rich query language, and you can create automated alerts.</p>\n<h2>.NET support on Azure Functions</h2>\n<p>Since its initial preview, Azure Functions has had first-class C# support. We now support <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-csharp\">C#</a> and <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-fsharp\">F# scripting</a> as well as <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library\">C# class libraries</a>. The Function portal focuses on the scripting experience, while the Visual Studio tooling is based on class libraries.</p>\n<p><a>The Visual Studio Functions project is a regular .NET class library that references the Functions NuGet package </a><a href=\"https://www.nuget.org/packages/Microsoft.NET.Sdk.Functions\">Microsoft.NET.Sdk.Functions</a>. All standard Visual Studio features are supported, such as unit testing, debugging, and publishing to Azure.</p>\n<p>Azure Functions also supports other languages, such as JavaScript, PowerShell, and Python.</p>\n<h2>Try it out</h2>\n<p>We&rsquo;ve recently released the RTW version of the Azure Functions tools in Visual Studio 2017 Update 3. Azure Functions tooling is included in the <a href=\"https://docs.microsoft.com/visualstudio/install/install-visual-studio#install-workloads\">Azure workload</a>. Follow this tutorial to get started in 5 minutes: <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-your-first-function-visual-studio\">Create your first function using Visual Studio</a>.</p>\n<h2>Learn more</h2>\n<p>Check out the following videos:</p>\n<ul><li><a href=\"https://channel9.msdn.com/Shows/Cloud+Cover/Episode-231-Azure-Functions-Local-Debugging-and-More-with-Donna-Malayeri\">Cloud Cover: Azure Functions Local Debugging and More</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/XamarinShow/Episode-28-Azure-Functions-for-Mobile-Apps-with-Donna-Malayeri\">The Xamarin Show: Azure Functions for Mobile Apps</a></li>\n<li><a href=\"https://channel9.msdn.com/Blogs/Azure/Build-apps-faster-with-Azure-Serverless?term=azure%20functions\">Microsoft Mechanics: Build apps faster with Azure Serverless</a></li>\n<li><a href=\"https://channel9.msdn.com/events/Build/2017/T6003?term=donna%20malayeri\">BUILD 2017: A day in the life of an Azure serverless developer</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/Tuesdays-With-Corey/Tuesdays-with-Cory-Azure-Functions-Proxies-extravaganza?term=donna%20malayeri\">Tuesdays with Cory: Azure Functions Proxies extravaganza</a></li>\n</ul><p>Connect with us:</p>\n<ul><li>For product news, follow <a href=\"https://twitter.com/AzureFunctions\">@AzureFunctions</a>.</li>\n<li>For technical questions, post on the <a href=\"https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=azurefunctions\">MSDN forums</a> or <a href=\"https://stackoverflow.com/questions/tagged/azure-functions\">StackOverflow</a>. The entire Functions engineering team monitors these questions, so you&rsquo;re sure to get an expert answer.</li>\n<li>To report bugs or file feature requests, open an issue on the <a href=\"https://github.com/Azure/Azure-Functions\">Azure-Functions</a> GitHub repo. Include &ldquo;Visual Studio&rdquo; in the issue title.</li>\n</ul><table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td width=\"150\" valign=\"top\"><img width=\"350\" height=\"350\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Donna-Malayeri.jpg\"></td>\n<td width=\"500\" valign=\"top\">Donna Malayeri, Program Manager, Azure Functions<br><a target=\"_blank\" href=\"https://twitter.com/lindydonna\" rel=\"noopener noreferrer\">@lindydonna</a>\n<p>Donna Malayeri is a program manager on the Azure Functions team, where she is responsible for the developer experience and the Visual Studio tooling. She previously worked on products such as Azure Mobile Services, Reactive Extensions (Rx), Visual F#, and Scala. She holds a PhD in programming languages from Carnegie Mellon University.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-22T00:30:06","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/21/why-you-should-care-about-serverless-computing/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Why you should care about serverless computing","Type":1,"TitleCn":"为什么你要关心无服务器计算","Content":"<p>你可能听说过行业的时髦\"无服务器计算\"。你已经是一个无服务器的忍者，还是仍在犹豫奇怪的名字，请继续阅读 ！它是如何工作的？你为什么要在乎？它只是一种时尚或在计算一个真正的趋势？</p>\n<h2>无服务器计算定义</h2>\n<p>无服务器计算一般包括三件事： 1） 服务器、 2） 事件驱动的规模和 3） 微计费的抽象。</p>\n<ol><li><b>服务器抽象。</b>无服务器计算是完全托管的。用户从未明确保留服务器实例;这是由平台处理。每个函数执行可以在不同的计算实例上运行，这是对您的代码完全透明。</li>\n<li><b>事件驱动规模。</b>无服务器是为响应传入事件的工作负载非常适合这个职位。事件包括计时器 （例如，运行此功能每天在 10 上午），HTTP （API 和 WebHook 方案），队列 （例如，订单处理），和更多。而不是编写整个应用程序，您创作\"功能，\"包含代码和其触发器和绑定有关的元数据。平台自动安排你去运行这个函数和扩展的基于传入的事件发生率的计算实例数。触发器定义如何调用函数。<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings\">的输入和输出绑定</a>提供的声明性方式连接到您的代码中的服务。例如，假设您想要写一个新的文件到 Azure Blob 存储每隔五分钟。您将使用一个<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-scheduled-function\">计时器触发</a>和<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob\">blob 输出绑定</a>：<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\" rel=\"noopener noreferrer\"><img title=\"Azure Functions for DotNet Developers - Event Driven Scale\" alt=\"Azure Functions for DotNet Developers - Event Driven Scale\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\"></a></p>\n</li>\n<li><b>微计费。</b>在传统计算中，是有概念的每秒计费，但这往往不是像它听起来的那么有用。甚至如果你有一个网站，获取只有 1 打一天，你仍然必须支付一整天的价值的可用性。与无服务器，你支付只有当您的代码执行。如果没有积极的函数的执行，你都不收费。例如，如果您的代码运行 2 分钟一天一次，你被指控为 1 执行和 2 分钟的计算。在帐单上的更多详细信息，请参阅<a href=\"https://azure.microsoft.com/en-us/pricing/details/functions/\">Azure 功能定价</a>。</li>\n</ol><p>在一起，这些功能使您能够专注于应用程序，不是服务器。这意味着你会减少了 DevOps 和更有效率的计算环境。客户发现，他们能够比以前更快地部署解决方案。<a href=\"https://customers.microsoft.com/en-us/story/fujifilm-software-co-ltd\">项目现在可以在天或数周，而不是几个月中完成</a>。</p>\n<p>蔚蓝的功能是微软的无服务器的计算平台。无服务器涉及到不仅仅计算;它包括数据库、 消息传递和工作流。要了解整个 Azure 无服务器平台的更多信息，请参阅<a href=\"https://azure.com/serverless\">azure.com/serverless</a>。</p>\n<h2>为什么无服务器问题</h2>\n<p>更多比任何其他云无服务器的计算范例，可以让你免于管理基础设施，使您可以专注于您的业务问题。虽无服务器仍然处于起步阶段，现在有许多供应商提供无服务器平台。</p>\n<p>无服务器是不只是时尚或流行词。相反，无服务器代表了戏剧性的在开发人员如何看待云计算。与无服务器，你需要只担心你的代码和它的触发方式。该平台照顾的休息。</p>\n<h2>无服务器和工具</h2>\n<p>当大多数的云供应商推出了其无服务器的服务时，那里有许多的障碍，开发人员的生产力。没有用于调试的支持，有了没有地方发展经验，和监测职能很难。尽管这样，新的编程模型是生产效率非常高，无服务器成为一种流行趋势。</p>\n<p>正如你可能期望，Azure 职能包括生产力功能从一开始。我们有供应商中是独一无二的模具和地方发展经验。您可以在本地计算机上运行 Azure 函数运行时。除了规模进行，它是同一运行时如云。你甚至可以触发事件在 Azure，使混合调试经验。</p>\n<p>监测，Azure 功能提供了<a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2017/04/06/azure-functions-application-insights/\">Azure 应用程序见解一体化</a>，无与伦比的监测经验。你可以连接到现场的事件流，看到运行时的度量，并登录您自己自定义的度量标准。应用的见解支持一种丰富的查询语言，并且您可以创建自动发出警报。</p>\n<h2>Azure 函数的.NET 支持</h2>\n<p>自其初始的预览，Azure 功能已经有一流的 C# 支持。我们现在支持<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-csharp\">C#</a>和<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-fsharp\">F # 脚本</a>，以及<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library\">C# 类库</a>。功能门户侧重于脚本的经验，而 Visual Studio 工具基于类库。</p>\n<p><a>Visual Studio 功能项目是一个普通的.NET 类库引用函数 NuGet 包</a><a href=\"https://www.nuget.org/packages/Microsoft.NET.Sdk.Functions\">Microsoft.NET.Sdk.Functions</a>.支持所有标准的 Visual Studio 功能，如单元测试、 调试和发布到 Azure。</p>\n<p>蔚蓝的功能还支持其他语言，如 JavaScript、 PowerShell 和 Python。</p>\n<h2>试试看</h2>\n<p>我们最近已经发布在 Visual Studio 2017 更新 3 Azure 功能工具的 RTW 版本。模具的蔚蓝职能列入<a href=\"https://docs.microsoft.com/visualstudio/install/install-visual-studio#install-workloads\">蔚蓝的工作量</a>。本教程要在 5 分钟内开始：<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-your-first-function-visual-studio\">创建您的第一个函数使用 Visual Studio</a>。</p>\n<h2>了解更多信息</h2>\n<p>看看下面的视频：</p>\n<ul><li><a href=\"https://channel9.msdn.com/Shows/Cloud+Cover/Episode-231-Azure-Functions-Local-Debugging-and-More-with-Donna-Malayeri\">云量： 蔚蓝功能本地调试和更多</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/XamarinShow/Episode-28-Azure-Functions-for-Mobile-Apps-with-Donna-Malayeri\">Xamarin 显示： 蔚蓝功能为移动应用程序的</a></li>\n<li><a href=\"https://channel9.msdn.com/Blogs/Azure/Build-apps-faster-with-Azure-Serverless?term=azure%20functions\">微软力学： 与 Azure 无服务器更快地构建应用程序</a></li>\n<li><a href=\"https://channel9.msdn.com/events/Build/2017/T6003?term=donna%20malayeri\">生成 2017: 蔚蓝无服务器开发人员的生活中的一天</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/Tuesdays-With-Corey/Tuesdays-with-Cory-Azure-Functions-Proxies-extravaganza?term=donna%20malayeri\">科里 · 相约： 蔚蓝功能代理盛会</a></li>\n</ul><p>与我们连接：</p>\n<ul><li>产品新闻，请按照<a href=\"https://twitter.com/AzureFunctions\">@AzureFunctions</a>。</li>\n<li>由于技术问题，在<a href=\"https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=azurefunctions\">MSDN 论坛</a>或<a href=\"https://stackoverflow.com/questions/tagged/azure-functions\">计算器</a>上张贴。整个功能工程团队监测这些问题，所以你一定要得到专家的解答。</li>\n<li>若要报告 bug 或文件功能请求，请打开<a href=\"https://github.com/Azure/Azure-Functions\">Azure 功能</a>GitHub 回购问题。包括问题标题中的\"Visual Studio\"。</li>\n</ul><table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td width=\"150\" valign=\"top\"><img width=\"350\" height=\"350\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Donna-Malayeri.jpg\"></td>\n<td width=\"500\" valign=\"top\">唐娜马拉耶里，项目经理，Azure 功能<br><a target=\"_blank\" href=\"https://twitter.com/lindydonna\" rel=\"noopener noreferrer\">@lindydonna</a>\n<p>唐娜马拉耶里是 Azure 职能团队，项目经理，她负责为开发人员的体验和 Visual Studio 工具。她曾 Azure 移动服务、 无功扩展 (Rx)、 Visual F #，和 Scala 等产品。她在编程语言从卡内基 · 梅隆大学博士学位。</p></td>\n</tr></tbody></table>"},{"Id":47,"Author":"Rich Lander [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-19T05:38:29","Description":"<p>A new update for .NET Framework is now available for the <a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext class</a>. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10.</p>\n<p>The <a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext class</a> was introduced in the <a href=\"https://blogs.msdn.microsoft.com/dotnet/2015/07/20/announcing-net-framework-4-6/#appcontext\">.NET Framework 4.6</a>. It&rsquo;s primary use is to enable developers to opt into new behavior in the .NET Framework that is not enabled by default. The regression prevents developers from opting into new behavior.</p>\n<p>You are only encouraged to install this update if you have used the AppContext class directly and are experiencing problems. Otherwise, you will&nbsp;get this update in one of&nbsp;the regular broader releases over the next one to two months.</p>\n<h2><a href=\"https://blogs.msdn.microsoft.com/dotnet#getting-the-update\"></a>Getting the Update</h2>\n<p>This update is available via the Microsoft Update Catalog.</p>\n<h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#downloading-kbs-from-microsoft-update-catalog\"></a>Downloading KBs from Microsoft Update Catalog</h3>\n<p>You can download patches from the table below. See <a href=\"https://blogs.msdn.microsoft.com/dotnet/2016/10/11/net-framework-monthly-rollups-explained/\">.NET Framework Monthly Rollups Explained</a> for an explanation on how to use this table to download patches from Microsoft Update Catalog.</p>\n<table><thead><tr><th>Product Version</th>\n<th>Preview of Quality Rollup KB</th>\n</tr></thead><tbody><tr><td><strong>Windows 8.1<br>\nWindows RT 8.1<br>\nWindows Server 2012 R2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038922\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></td>\n</tr><tr><td><strong>Windows Server 2012</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038921\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></td>\n</tr><tr><td><strong>Windows 7<br>\nWindows Server 2008 R2 SP1</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr><tr><td><strong>Windows Server 2008 SP2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr></tr><tr><td>.NET Framework 4.6</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr></tbody></table><h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#previous-rollups-and-updates\"></a>Previous Rollups and Updates</h3>\n<p>The last few .NET Framework Monthly updates are listed below for your convenience:</p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\">August 2017 Preview of Quality Rollup</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/08/net-framework-august-2017-security-and-quality-rollup/\">August 2017 Security and Quality Rollup</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/01/net-framework-july-2017-cumulative-quality-update-for-windows-10/\">July 2017 Cumulative Quality Update for Windows 10</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/25/net-framework-july-2017-quality-update\">July 2017 Quality Update for WPF</a></li>\n</ul>","LastUpdateTime":"2017-08-19T05:38:29","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","MobileContent":null,"PublishId":0,"Status":1,"Title":".NET Framework Update for AppContext","Type":1,"TitleCn":".NET 框架更新为 AppContext 的","Content":"<p>.NET 框架的新更新现供<a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext 类</a>。AppContext 类的行为，最近回归。更新返回到正确的行为的类。此更新影响 4.6 及更高版本的.NET 框架。更新不是需要 Windows 10。</p>\n<p>在<a href=\"https://blogs.msdn.microsoft.com/dotnet/2015/07/20/announcing-net-framework-4-6/#appcontext\">.NET 框架 4.6</a>介绍了<a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext 类</a>。它的主要用途是使开发人员可以选择在默认情况下不启用.NET 框架的新行为。回归防止开发人员选择到新的行为。</p>\n<p>你只是鼓励要安装此更新，如果你有直接使用 AppContext 类和遇到的问题。否则，你会得到此更新在未来的一到两个月的定期更广泛版本之一。</p>\n<h2><a href=\"https://blogs.msdn.microsoft.com/dotnet#getting-the-update\"></a>获取更新</h2>\n<p>此更新程序可通过 Microsoft 更新目录。</p>\n<h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#downloading-kbs-from-microsoft-update-catalog\"></a>从微软更新目录下载 KBs</h3>\n<p>您可以从下面的表下载修补程序。解释如何使用此表可从 Microsoft Update 目录下载修补程序，请参阅<a href=\"https://blogs.msdn.microsoft.com/dotnet/2016/10/11/net-framework-monthly-rollups-explained/\">.NET 框架每月汇总解释</a>。</p>\n<table><thead><tr><th>产品版本</th>\n<th>预览质量汇总 KB</th>\n</tr></thead><tbody><tr><td><strong>Windows 8.1<br>Windows RT 8.1<br>Windows 服务器 2012 R2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038922\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></td>\n</tr><tr><td><strong>Windows 服务器 2012</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038921\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></td>\n</tr><tr><td><strong>Windows 7<br>了 Windows Server 2008 R2 SP1</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr><tr><td><strong>Windows 服务器 2008 SP2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr></tr><tr><td>.NET 框架 4.6</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr></tbody></table><h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#previous-rollups-and-updates\"></a>以前的汇总和更新</h3>\n<p>下面列出了最后几个.NET 框架每月更新，为您提供便利：</p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\">质量汇总 8 月 2017年预览</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/08/net-framework-august-2017-security-and-quality-rollup/\">8 月 2017年安全和质量汇总</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/01/net-framework-july-2017-cumulative-quality-update-for-windows-10/\">7 月 2017年累积质量更新为 Windows 10 的</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/25/net-framework-july-2017-quality-update\">WPF 的 7 月 2017年质量更新</a></li>\n</ul>"},{"Id":44,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-08-18T22:13:59","Description":"Updating off pre-RTM bits once RTM ships ought to be routine. But if you have not already done so in the case of the .NET Core based Test projects, let me give you a reason to do so. vstest delegates discovery and execution of tests to test-framework-specific adapters. Adapters indicate the kind of test containers... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/\"> Read More</a>","LastUpdateTime":"2017-08-18T22:13:59","Link":"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/","MobileContent":null,"PublishId":0,"Status":1,"Title":"The TestContainer Capability","Type":1,"TitleCn":"容器的能力","Content":"更新了预 RTM 位一旦 RTM 船应该是常规。但如果你不已经在基于.NET 核心的情况下测试项目，让我给你个理由这样做。vstest 代表的发现和执行测试的测试框架特定适配器。适配器指示类型的测试容器...<a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/\">阅读更多</a>"}]
[{"Id":98,"Author":"Andrew Pardoe [MSFT]","Categories":"Visual C++ Team Blog","CreateTime":"2017-09-12T09:28:11","Description":"<p><em>This post written by Tanveer Gani, Stephan T. Lavavej, Andrew Marino, Gabriel Dos Reis, and Andrew Pardoe</em></p>\n<p>&ldquo;Two-phase name lookup&rdquo; is an informal term that refers to a set of rules governing the resolution of names used in a template declaration. <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">These rules were formalized</a> more than two decades ago in an attempt to reconcile two opposing compilation models for templates: the inclusion model (what most developers know of templates today), and the separation model (the basis of the original design for templates). You can find the genesis of dependent names in the foundational paper <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1992/N0209.pdf\">Proposed Revisions to the Template Specification</a>, firmly grounded in the One Definition Rule principle. If you&rsquo;re interested in diving into the glorious details, you can find these rules in modern terms in section 17.6&nbsp;(stable name [temp.res]) of the <a href=\"https://wg21.link/N4659\">C++17 draft standard</a>. In the last few months the MSVC compiler has come from having no support for two-phase name lookup to being usable on most code. We&rsquo;ll finish complete support for this feature in a future Visual Studio 2017 update.</p>\n<p>You&rsquo;ll need to use the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><code>/permissive-</code> conformance switch</a> to enable two-phase lookup in the MSVC compiler included with Visual Studio 2017 &ldquo;15.3&rdquo;. Two-phase name lookup drastically changes the meaning of some code so the feature is not enabled by default in the current version of MSVC.</p>\n<p>This post examines exactly what two-phase name lookup entails, what&rsquo;s currently implemented in MSVC, and how to make effective use of MSVC&rsquo;s partial but substantial support for two-phase name lookup. We&rsquo;ll also tell you how to opt-out of two-phase lookup, even if you want the rest of your code to strictly conform to the Standard. Lastly, we&rsquo;ll explain a bit about why it took us so long to get here&mdash;these rules are at least 25 years old!</p>\n<h3>What is &ldquo;two-phase name lookup&rdquo;?</h3>\n<p>The original design of templates for C++ meant to do exactly what the term &ldquo;template&rdquo; implied: a template would stamp out families of classes and functions. It allowed and encouraged, but did not require, early checking of non-dependent names. Consequently, identifiers didn&rsquo;t need to be looked up during parsing of the template definition. Instead, compilers were allowed to delay name lookup until the template was instantiated. Similarly, the syntax of a template didn&rsquo;t need to be validated until instantiation. Essentially, the meaning of a name used in a template was not determined until the template was instantiated.</p>\n<p>In accordance with these original rules, previous versions of MSVC did very limited template parsing. &nbsp;In particular, function template bodies were not parsed at all until instantiation. The compiler recorded the body of a template as a stream of tokens that was replayed when it was needed during instantiation of a template where it might be a candidate.</p>\n<p>Let&rsquo;s consider what this means by looking at a piece of code. Links are provided to online compilers so you can play with the code as you read through this post.</p>\n<pre>\n#include &lt;cstdio&gt;\n\nvoid func(void*) { std::puts(\"The call resolves to void*\") ;}\n\ntemplate&lt;typename T&gt; void g(T x)\n{\n    func(0);\n}\n\nvoid func(int) { std::puts(\"The call resolves to int\"); }\n\nint main() \n{\n    g(3.14);\n}\n</pre>\n<p>To which of these overloads does the call on line 7 resolve? The <code>void*</code> overload was already declared at the point the template was written on line 5. The function <code>void func(int)</code> didn&rsquo;t exist when the template was written. Therefore, the call on line 14 to the function template <code>void g(T x)</code> on line 5 should resolve to function <code>void func(void*)</code> on line 3.</p>\n<p>When compiled with a compiler that conforms to the standard, this program prints &ldquo;<code>The call resolves to void*</code>&ldquo;. You can <a href=\"http://rextester.com/YCHV46514\">see this behavior in GCC</a> using the Rextester online compiler. <a href=\"http://rextester.com/JAO93001\">Using the MSVC from Visual Studio 2015</a>, without support for two-phase name lookup, the program prints &ldquo;The call resolves to int&rdquo;.</p>\n<p>Why did MSVC get this wrong? The mechanics we used to parse templates worked when templates were simple, but limited what the compiler could do when two-phase name lookup came into play. MSVC previously recorded the body of the template as a stream of tokens and stored that stream away to be replayed at instantiation time. The behavior of MSVC&rsquo;s template substitution from a recorded token stream somewhat resembled the behavior of macro substitution in that limited analysis was done of a template&rsquo;s body.</p>\n<p>In this example, MSVC stored a token stream for the function template <code>void g(T x)</code>. If the compiler had analyzed the function call at the point where it was encountered, only the declaration for <code>void func(void*)</code> would have been in the overload set. (Note that is a valid match for the call <code>func(0)</code> because C++ allows <code>0</code> to represent a <a href=\"http://en.cppreference.com/w/cpp/language/implicit_conversion\">null pointer constant that can be converted to any pointer type</a>.)</p>\n<p>The function overload <code>void func(int)</code> would also be a match for the call <code>func(0)</code> except that it should not be in the overload set at the point the function template <code>void g(T x)</code> was evaluated. But MSVC didn&rsquo;t evaluate the body of the template until the point of instantiation&mdash;after the declaration for <code>void func(int)</code> had been added to the overload set. At that point, the compiler picked the better match for an integer argument: <code>int</code> rather than <code>void*</code>.</p>\n<p>You can see both of the compilers in action in <a href=\"https://godbolt.org/g/PP71ed\">this code sample on the online Compiler Explorer</a>. GCC refuses to compile the code sample when line 3 is commented out, whereas MSVC happily matches a function that wasn&rsquo;t even defined at the point the template was written. It would be recognized as illegal code if it were not a template, but our broken template substitution mechanics allowed the compiler to accept this code.</p>\n<p>The C++ standards committee realized that code written in templates should not be subtly affected by the surrounding context, while also upholding the ODR. They <a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">introduced the notion of <em>dependent</em> and <em>non-dependent</em> names</a> in the rules for name-binding in templates because it would be surprising behavior to have the function written on line 10 change the meaning of the code above it.</p>\n<p>The rules in the [temp.res] section of the standard list three kinds of names:</p>\n<ol><li>The name of the template and names declared in the template</li>\n<li>Names that depend upon a template&rsquo;s parameter</li>\n<li>Names from scopes that are visible inside the template&rsquo;s definition</li>\n</ol><p>The first and third categories are non-dependent names. They&rsquo;re bound at the point of the template&rsquo;s definition and stay bound in every instantiation of that template. They are never looked up when a template is instantiated. (See &sect;17.6 [temp.res]/10 and &sect;17.6.3 [temp.nondep] in the <a href=\"https://wg21.link/N4659\">Draft Standard</a> for details.)</p>\n<p>The second category are dependent names. Dependent names are not bound at the point of the template&rsquo;s definition. Instead, these names are looked up when the template is instantiated. For function calls with a dependent function name, the name is bound to the set of functions that are visible at the point of the call in the template&rsquo;s definition. Additional overloads from argument-dependent lookup are added at both the point of the template definition and the point of where the template is instantiated. (See &sect;17.6.2 [temp.dep], &sect;17.6.4 [temp.dep.res], and &sect;17.6.4.2 [temp.dep.candidate] in the <a href=\"https://wg21.link/N4659\">Draft Standard</a> for details.)</p>\n<p>It&rsquo;s important to note that overloads declared after the point of the template&rsquo;s definition but before the point of the template&rsquo;s instantiation are only considered if they are found through argument-dependent lookup. MSVC previously didn&rsquo;t do argument-dependent lookup separately from ordinary, unqualified lookup so this change in behavior may be surprising.</p>\n<p>Consider this code sample, which is also <a href=\"https://wandbox.org/permlink/7AbIQS19ZItMMRkb\">available on the Wandbox online compiler</a>:</p>\n<pre>\n#include &lt;cstdio&gt; \n\nvoid func(long) { std::puts(\"func(long)\"); }\n\ntemplate &lt;typename T&gt; void meow(T t) {\n    func(t);\n}\n\nvoid func(int) { std::puts(\"func(int)\"); }\n\nnamespace Kitty {\n    struct Peppermint {};\n    void func(Peppermint) { std::puts(\"Kitty::func(Kitty::Peppermint)\"); }\n}\n\nint main() {\n    meow(1729);\n    Kitty::Peppermint pepper;\n    meow(pepper);\n}\n</pre>\n<p>The call <code>meow(1729)</code> resolves to the <code>void func(long)</code> overload, not <code>void func(int)</code> overload, because the unqualified <code>func(int)</code> is declared after the definition of the template and not found through argument-dependent lookup. But <code>void func(Peppermint)</code> does participate in argument-dependent lookup, so it is added to the overload set for the call <code>meow(pepper)</code>.</p>\n<p>From the above examples, you can see that the two phases of &ldquo;two-phase lookup&rdquo; are the lookup for non-dependent names at the time of template definition and lookup for dependent names at the time of template instantiation.</p>\n<p><a></a></p>\n<h3>MSVC behavior prior to Visual Studio 2017 &ldquo;15.3&rdquo;</h3>\n<p>Historically, when a template was encountered, the MSVC compiler took the following steps:</p>\n<ul><li>When parsing a class template, MSVC previously parsed only the template declaration, the class head, and the base class list. The template body was captured as a token stream. No function bodies, initializers, default arguments, or <code>noexcept</code> arguments were parsed. The class template was pseudo-instantiated on a &ldquo;tentative&rdquo; type to validate that the declarations in the class template were correct.Take for example this class template: <code>template &lt;typename T&gt; class Derived : public Base&lt;T&gt; { ... }</code>. The template declaration, <code>template &lt;typename T&gt;</code>, the class head, <code>class Derived</code>, and the base-class list, <code>public Base&lt;T&gt;</code> are parsed but the template body, <code>{ ... }</code>, is captured as a token stream.</li>\n<li>When parsing a function template, MSVC previously parsed only the function signature. The function body was never parsed&mdash;it was captured as a token stream. Consequently, if the template body had syntax errors and the template was never instantiated the errors were never diagnosed.</li>\n</ul><p>An example of how this behavior caused incorrect parsing can be seen with how MSVC did not require the keywords <code>template</code> and <code>typename</code> everywhere they C++ Standard requires them. These keywords are needed in some positions to disambiguate how compilers should parse a dependent name during the first phase of lookup. For example, consider this line of code:</p>\n<pre>\nT::Foo&lt;a || b&gt;(c); \n</pre>\n<p>Is this code a call to a function template with an argument of <code>a || b</code>? Or is this a logical-or expression with <code>T::foo &lt;</code> a as the left operand and <code>b &gt; (c)</code> as the right operand?</p>\n<p>A conforming compiler will parse Foo as a variable in the scope of T, meaning this code is an or operation between two comparisons. If you meant to use <code>Foo</code> as a function template, you must indicate that this is a template by adding the template keyword, e.g.,</p>\n<pre>\nT::template Foo&lt;a || b&gt;(c); \n</pre>\n<p>Prior to Visual Studio 2017 &ldquo;15.3&rdquo;, MSVC allowed this code <em>without</em> the template keyword because it parsed templates in a very limited fashion. The code above would not have been parsed at all in the first phase. During the second phase there&rsquo;s enough context to tell that <code>T::Foo</code> is a template rather than a variable so MSVC did not enforce use of the keyword.</p>\n<p>This behavior can also be seen by eliminating the keyword <code>typename</code> before names in function template bodies, initializers, default arguments, and <code>noexcept</code> arguments. Consider this code:</p>\n<pre>\ntemplate&lt;typename T&gt;\ntypename T::TYPE func(typename T::TYPE*)\n{\n    typename T::TYPE i;\n}\n</pre>\n<p>If you remove the keyword <code>typename</code> in the function body on line 4, MSVC would have still compiled this code whereas a conforming compiler would reject the code. You need the <code>typename</code> keyword to indicate that the <code>TYPE</code> is dependent. Because MSVC previously didn&rsquo;t parse the body it didn&rsquo;t require the keyword. <a href=\"https://godbolt.org/g/PZNK6B\">You can see this example in the online Compiler Explorer</a>. Since compiling such code under the MSVC conformance mode, (<code>/permissive-</code>), will result in errors, as you move forward to MSVC versions 19.11 and beyond, make sure to look for places like this where the <code>typename</code> keyword is missing.</p>\n<p>Similarly, in this code sample:</p>\n<pre>\ntemplate&lt;typename T&gt;\ntypename T::template X&lt;T&gt;::TYPE func(typename T::TYPE)\n{\n    typename T::template X&lt;T&gt;::TYPE i;\n}\n</pre>\n<p>MSVC previously only required the <code>template</code> keyword on line 2. A conforming compiler requires the <code>template</code> keyword on line 4 as well to indicate that <code>T::X&lt;T&gt;</code> is a template. Uncomment the keyword in <a href=\"https://godbolt.org/g/yMazjQ\">this example on the Compiler Explorer</a> to see the error in action. Again, keep this missing keyword in mind as you move your code forward.</p>\n<h3>Two Phase Name Lookup in Visual Studio 2017 &ldquo;15.3&rdquo;</h3>\n<p>We introduced a &ldquo;conformance mode&rdquo; switch with Visual Studio 2017. In the v141 compiler toolset released with VS2017 you can use the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><span>/permissive-<span> switch</span></span></a> to turn on this conformance mode. (In the next major compiler revision, conformance mode will be on by default. At that point you&rsquo;ll be able to use the /permissive switch to request the conformance mode (without the <code>-</code>) much like the <code>-fpermissive</code> switch in other compilers.) One of the big features missing when we introduced the <code>/permissive-</code> switch was two-phase name lookup, which has now been partially implemented in the compiler that ships with VS2017 &ldquo;15.3&rdquo;.</p>\n<p>There are a few missing parts to our two-phase name lookup support&mdash;see the section <a href=\"https://blogs.msdn.microsoft.com/vcblog#What's%20coming%20next\">&ldquo;What&rsquo;s coming next&rdquo;</a> below for details. But the MSVC compiler now parses correctly and enforces syntax rules strictly for:</p>\n<ul><li>Class templates</li>\n<li>Bodies of function templates and member functions of class templates</li>\n<li>initializers, including member initializers</li>\n<li>default arguments</li>\n<li><code>noexcept</code> arguments</li>\n</ul><p>Additionally, the MSVC implementation of the STL is fully two-phase clean (validated by <code>/permissive-</code> in MSVC as well as Clang&rsquo;s <code>-fno-ms-compatibility -fno-delayed-template-parsing</code>). We&rsquo;ve recently gotten ATL to be two-phase clean; if you find any lingering bugs please be sure to let us know!</p>\n<p>But what do you do for your legacy code that may rely on the old, incorrect MSVC behavior? You can still use <code>/permissive-</code> for the rest of the conformance improvements even if your code isn&rsquo;t quite yet ready to have template bodies parsed and dependent names bound correctly. Just throw the <code>/Zc:twoPhase-</code> switch to turn off template parsing and dependent name binding. Using this switch will cause the MSVC compiler to use the old behavior with non-standard semantics, giving you a chance to fix your code to compile correctly with a conforming MSVC compiler.</p>\n<p>If you are using the Windows RedStone2 (&ldquo;Creators Update&rdquo;) SDK with the <code>/permissive-</code> switch, you&rsquo;ll need to temporarily disable two-phase name lookup by using the <code>/Zc:twoPhase-</code> switch until the Windows RedStone 3 (&ldquo;Fall Creators Update&rdquo;) SDK is available. This is because the Windows team has been working with the MSVC team to make the SDK headers work properly with two-phase name lookup. Their changes will not be available until the RedStone3 Windows SDK is released, nor will the changes for two-phase name lookup be ported back to the RedStone2 Windows SDK.</p>\n<p><a></a></p>\n<h3>What&rsquo;s coming next</h3>\n<p>MSVC&rsquo;s support for two-phase name lookup is a work in progress. Here&rsquo;s a list of what&rsquo;s left to come in future updates to MSVC in Visual Studio 2017. Remember that you need to use the <code>/permissive-</code> switch with these examples to enable two-phase lookup.</p>\n<ol><li>Undeclared identifiers in templates are not diagnosed. E.g.\n<pre>\ntemplate&lt;class T&gt;\nvoid f()\n{\n    i = 1; // Missing error: `i` not declared in this scope\n}\n</pre>\n<p>MSVC does not emit an error that <code>`i`</code> is not declared and the code compiles successfully. Adding an instantiation of <code>f</code> causes the correct errors to be generated:</p>\n<pre>\ntemplate&lt;class T&gt;\nvoid f()\n{\n    i = 1; // Missing error: `i` not declared in this scope\n}\n\nvoid instantiate()\n{\n    f&lt;int&gt;();\n}\n</pre>\n<pre>\nC:tmp&gt; cl /c /permissive- /diagnostics:caret one.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\none.cpp\nc:tmpone.cpp(4,5): error C2065: 'i': undeclared identifier\n    i = 1;\n    ^\nc:tmpone.cpp(9): note: see reference to function template instantiation 'void f&lt;int&gt;(void)' being compiled\n    f&lt;int&gt;();\n</pre>\n</li>\n<li>The MSVC compiler with VS 2017 &ldquo;15.3&rdquo; will generate an error for missing <code>template</code> and <code>typename</code> keywords but will not suggest adding these keywords. Newer compiler builds give more informative diagnostics.\n<pre>\ntemplate &lt;class T&gt;\nvoid f() {\n   T::Foo&lt;int&gt;();\n}\n</pre>\n<p>The MSVC compiler shipped with VS 2017 &ldquo;15.3&rdquo; gives this error:</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret two.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25506 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\ntwo.cpp\ntwo.cpp(3,16): error C2187: syntax error: ')' was unexpected here\n   T::Foo&lt;int&gt;();\n               ^\n</pre>\n<p>Builds of the compiler that will ship with future updates of VS 2017 give a more informative error:</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret two.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\ntwo.cpp\ntwo.cpp(3,7): error C7510: 'Foo': use of dependent template name must be prefixed with 'template'\n   T::Foo&lt;int&gt;();\n      ^\ntwo.cpp(3,4): error C2760: syntax error: unexpected token 'identifier', expected 'id-expression'\n   T::Foo&lt;int&gt;();\n   ^\n</pre>\n</li>\n<li><!-- THREE -->The compiler is not properly looking up functions during argument-dependent lookup. This can result in the wrong function being called at runtime.\n<pre>\n#include &lt;cstdio&gt;\n\nnamespace N\n{\n    struct X {};\n    struct Y : X {};\n    void f(X&amp;) \n    { \n        std::puts(\"X&amp;\"); \n    }\n}\n\ntemplate&lt;typename T&gt;\nvoid g()\n{\n    N::Y y;\n    f(y); // This is non-dependent but it is not found during argument-dependent lookup so it is left unbound.\n}\n\nvoid f(N::Y&amp;)\n{\n    std::puts(\"Y&amp;\");\n}\n\nint main()\n{\n    g&lt;int&gt;();\n}\n</pre>\n<p>The output from running this program is the above is <code>Y&amp;</code> when it should be <code>X&amp;</code>.</p>\n<pre>\nC:tmp&gt;cl /permissive- /diagnostics:caret three.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25506 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nthree.cpp\nMicrosoft (R) Incremental Linker Version 14.11.25506.0\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\n/out:three.exe\nthree.obj\n\nC:tmp&gt;three\nY&amp;\n</pre>\n</li>\n<li>Non-type dependent expressions involving local declarations aren&rsquo;t analyzed correctly. The MSVC compiler currently parses the type as dependent causing an incorrect error.\n<pre>\ntemplate&lt;int&gt; struct X \n{ \n    using TYPE = int; \n};\n\ntemplate&lt;typename&gt;\nvoid f()\n{\n    constexpr int i = 0;\n    X&lt;i&gt;::TYPE j;\n}\n</pre>\n<p>A syntax error is issued because the <code>i</code> is not properly analyzed to be a non-value dependent expression when the value of the expression on line 9 is not type-dependent.</p>\n<pre>\nC:tmp&gt;cl /c /permissive- /diagnostics:caret four.cpp\nMicrosoft (R) C/C++ Optimizing Compiler Version 19.11.25618 for x64\nCopyright (C) Microsoft Corporation.  All rights reserved.\n\nfour.cpp\nfour.cpp(10,16): error C2760: syntax error: unexpected token 'identifier', expected ';'\n    X&lt;i&gt;::TYPE j;\n               ^\nfour.cpp(10,5): error C7510: 'TYPE': use of dependent type name must be prefixed with 'typename'\n    X&lt;i&gt;::TYPE j;\n    ^\n</pre>\n</li>\n<li>Neither redeclaration of template parameters and redefinition of template function arguments as local names are reported as errors.\n<pre>\ntemplate&lt;class T&gt;\nvoid f(int i)\n{\n    double T = 0.0; // Missing error: Declaration of `T` shadows template parameter\n    float i = 0;    // Missing error: Redefinition of `i` with a different type\n}\n</pre>\n</li>\n<li><!-- SIX -->The MSVC compiler misidentifies the current instantiation in some cases. Using the keyword <code>typename</code> is legal and helps the compiler to correctly identify the current instantiation.\n<pre>\ntemplate&lt;class T&gt; struct A {\n    typedef int TYPE;\n    A::TYPE c1 = 0;    // Incorrectly fails to compile\n    A&lt;T&gt;::TYPE c2 = 0; // Incorrectly fails to compile\n};\n</pre>\n<p>Adding the keyword <code>typename</code> before each instance of <code>A</code> allows this code to compile:</p>\n<pre>\ntemplate&lt;class T&gt; \nstruct A \n{\n    typedef int TYPE;\n    typename A::TYPE c1 = 0;\n    typename A&lt;T&gt;::TYPE c2 = 0;\n};\n</pre>\n</li>\n<li>Undeclared default arguments are not diagnosed. This example demonstrates a case where the MSVC compiler is still doing one-phase lookup. It is using the declaration of <code>SIZE</code> found after the template declaration as if it were declared before the template.\n<pre>\ntemplate&lt;int N = SIZE&gt; // Missing diagnostic: Use of undeclared identifier `SIZE`\nstruct X\n{\n    int a[N];\n};\n\nconstexpr int SIZE = 42;\n\nX&lt;&gt; x;\n</pre>\n</li>\n</ol><p>All of the above issues are planned to be fixed in the next major update of MSVC in Visual Studio 2017.</p>\n<h3>Why did it take so long?</h3>\n<p>Other compilers have had two-phase name lookup implemented for quite some time. Why is MSVC just now getting it right?</p>\n<p>Implementing two-phase name lookup required fundamental changes in MSVC&rsquo;s architecture. The biggest change was to <a href=\"https://aka.ms/CompilerRejuvenation\">write a new recursive descent parser to replace the YACC-based parser</a> that we&rsquo;ve used for over 35 years.</p>\n<p>We decided early on to follow an incremental path rather than rewriting the compiler from scratch. Evolving the aged MSVC code base into a more modern code base instead of &ldquo;going dark&rdquo; on a big rewrite allowed us to make huge changes without introducing subtle bugs and breaking changes when compiling your existing code. Our &ldquo;compiler rejuvenation&rdquo; work required carefully bridging the old code and the new code, making sure all the time that large test suites of existing code continued to compile exactly the same (except where we intentionally wanted to make a change to introduce conforming behavior.) It took a bit longer to do the work in this fashion but that allowed us to deliver incremental value to developers. And we have been able to make major changes without unexpectedly breaking your existing code.</p>\n<h3>In closing</h3>\n<p>We&rsquo;re excited to finally have support for two-phase name lookup in MSVC. We know that the compiler still won&rsquo;t compile some template code correctly&mdash;if you find a case not mentioned in this post, please reach out to us so that we can fix the bug!</p>\n<p>All of the code samples in this post now compile (or fail to compile, when appropriate) correctly according to the Standard. You&rsquo;ll see this new behavior with Visual Studio 2017 &ldquo;15.3&rdquo;, or you can try it out right now <a href=\"https://aka.ms/dailymsvc\">using a daily build of the MSVC compiler</a>.</p>\n<p>Now is a good time to start using the <a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><code>/permissive-</code> switch</a> to move your code forward. Remember when you run into template parsing errors that adding the keywords <code>template</code> and <code>typename</code> that MSVC did not previously require (<a href=\"https://blogs.msdn.microsoft.com/vcblog#MSVC%20behavior%20prior%20to%20Visual%20Studio%202017%2015.3\">see above</a>) might fix the error.</p>\n<p>If you have any feedback or suggestions for us, let us know. We can be reached via the comments below, via email (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) and you can provide feedback via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Help &gt; Report A Problem in the product</a>, or via <a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">Developer Community</a>. You can also find us on Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) and Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>).</p>","LastUpdateTime":"2017-09-12T09:28:11","Link":"https://blogs.msdn.microsoft.com/vcblog/2017/09/11/two-phase-name-lookup-support-comes-to-msvc/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Two-phase name lookup support comes to MSVC","Type":1,"TitleCn":"两相名称查找支持来到 MSVC","Content":"<p><em>这篇文章写的坦维尔简一、 篇幅、 安德鲁 · 马里诺，加布里埃 Dos Reis，和安德鲁 Pardoe</em></p>\n<p>\"两相名称查找\"是一个非正式的术语，指的是一套规则的模板声明中使用的名称解析。<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">这些规则被正式确定</a>两个以上几十年前在试图调和两个对立模板编译模型: （大多数开发人员知道模板的今天），包含模型和分离模型 （原始设计的依据为模板）。你可以找到从属名称成因本文基础<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1992/N0209.pdf\">模板规范提出修订</a>，牢固地植根于一个定义规则原则。如果你有兴趣在深入光荣的细节，你可以在部分 17.6 （稳定名称 [temp.res]） 的<a href=\"https://wg21.link/N4659\">C + + 17 草案标准</a>在现代术语找到这些规则。在过去几个月 MSVC 编译器来自具有两相的名称查找到被大多数代码可用于不支持。我们会完成完整的支持，为此在未来的视觉工作室 2017年更新的功能。</p>\n<p>您需要使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"> <code>/permissive-</code> 一致性开关</a>，使两相 MSVC 编译器附带视觉工作室 2017\"15.3\"中的查找。两相名称查找彻底改变一些代码的含义，所以 MSVC 的当前版本默认情况下不启用功能。</p>\n<p>这篇文章探讨到底什么两相名称查找需要什么目前实施 MSVC，以及如何善用 MSVC 的部分，但大量支持两相名称查找。我们会告诉你如何选择退出的两相查找，即使你想其余的您的代码以严格符合标准。最后，我们会解释一下，为什么我们花了这么长时间来这儿 — — 这些规则都至少 25 岁 ！</p>\n<h3>\"两相名称查找\"是什么？</h3>\n<p>C + + 模板的原始设计意味着要做\"模板\"一词意味着什么： 一个模板将杜绝家庭的类和函数。它允许和鼓励，但不是要求，早期的非依赖名称检查。因此，标识符不需要在模板定义的分析过程中抬头。相反，编译器被允许延迟名称查找，直到模板被实例化。同样，模板的语法不需要实例化之前验证。基本上，在模板中使用的名称的含义不是确定直到模板被实例化。</p>\n<p>根据这些原始的规则，以前版本的 MSVC 了非常有限的模板解析。 尤其是，函数模板机构都不被解析所有直到实例化。编译器作为标记流是重播期间实例化模板在需要的时候它可能存在的候选记录模板的身体。</p>\n<p>让我们考虑一下这意味着什么，看一段代码。所以你可以玩的代码，当你读完这篇文章，对在线编译器提供链接。</p>\n<pre>\n#include &lt; cstdio &gt;\n\n无效 func(void*) {std::puts （\"调用解析为 void *\"）;}\n\n&lt; typename T &gt; 模板无效 g(T x)\n{\n    func(0);\n}\n\n空 func(int) {std::puts （\"调用解析为 int\"）;}\n\nmain （) int \n{\n    g(3.14);\n}\n</pre>\n<p>在第 7 行调用，这些重载解决？<code>void*</code>过载已经宣布在模板写在 5 号线的点。函数 <code>void func(int)</code> 编写模板时并不存在。因此，调用函数模板到第 14 行 <code>void g(T x)</code> 线上 5 应解决功能 <code>void func(void*)</code> 第 3 行。</p>\n<p>符合标准的编译器在编译时该程序打印\" <code>The call resolves to void*</code> \"。你可以<a href=\"http://rextester.com/YCHV46514\">看到这种行为在 GCC</a>使用 Rextester 在线编译器。<a href=\"http://rextester.com/JAO93001\">使用 MSVC 从 Visual Studio 2015 年</a>，没有支持的两相的名称查找该程序打印\"是调用解析到 int\"。</p>\n<p>MSVC 为什么这错了？我们用来解析模板力学工作时模板简单，但有限的编译器两相名称查找来玩的时候能做些什么。MSVC 以前记录模板的身体作为一个标号流，并存储该流走了，在实例化时重播。从记录的标记流 MSVC 的模板替换的行为有点类似宏替换的行为在这的模板正文进行有限的分析。</p>\n<p>在此示例中，MSVC 存储为函数模板的标记流 <code>void g(T x)</code> 。如果编译器分析了函数调用它遇到点只有宣言 》 为 <code>void func(void*)</code> 将已经重载中套。(请注意，是有效的匹配项调用 <code>func(0)</code> 因为 c + + 允许 <code>0</code> 来表示一个<a href=\"http://en.cppreference.com/w/cpp/language/implicit_conversion\">空指针常量，可以转换为任何指针类型</a>.)</p>\n<p>函数重载 <code>void func(int)</code> 也将调用匹配 <code>func(0)</code> 在点设置的除外，它不应该在重载函数模板 <code>void g(T x)</code> 进行了评价。但 MSVC 没有实例化之前评估模板的身体 — — 后宣言 》 <code>void func(int)</code> 也加入了重载集。此时，编译器拿一个整型参数的更好匹配： <code>int</code> 而不是 <code>void*</code> 。</p>\n<p>你可以看到两个编译器在<a href=\"https://godbolt.org/g/PP71ed\">此项上在线编译器资源管理器中的示例代码</a>中的行动。海合会拒绝编译代码示例，当第 3 行注释掉了，而 MSVC 愉快地匹配甚至不在点定义一个函数模板写。它将被视为非法的代码如果不是一个模板，但我们破碎的模板替换力学允许编译器接受此代码。</p>\n<p>C + + 标准委员会意识到，在模板中编写的代码应该不会巧妙地受到周围的环境，同时还要维护 ODR。他们<a href=\"http://www.open-std.org/JTC1/SC22/WG21/docs/papers/1996/N0906.pdf\">的<em>依赖性</em>和<em>非依赖性</em>名称概念</a>中模板的名称绑定规则中因为它会令人惊讶行为要写在第 10 行的函数更改它上面代码的含义。</p>\n<p>规则的标准 [temp.res] 节中列出三种名称：</p>\n<ol><li>在模板中声明的名称的模板和名称</li>\n<li>依赖于模板参数的名称</li>\n<li>从可见里面的模板定义的作用域的名称</li>\n</ol><p>第一和第三类是非依赖名称。他们注定在模板的定义和留的约束，在每个实例化该模板。实例化模板时，他们永远不会看着。（见 §17.6 [temp.res]/10，§17.6.3 [temp.nondep] 在<a href=\"https://wg21.link/N4659\">草案标准</a>的详细信息）</p>\n<p>第二类是从属名称。从属名称不在模板定义绑定。相反，抬头这些名称实例化模板时。对于具有关联函数名称的函数调用，绑定到可见的模板定义中调用的函数集的名称。在模板定义的点和点的实例化模板时添加其他重载从参数相关的查找。（见 §17.6.2 [temp.dep]、 [temp.dep.res]，§17.6.4 和 §17.6.4.2 [temp.dep.candidate] 在<a href=\"https://wg21.link/N4659\">草案标准</a>的详细信息）。</p>\n<p>它是定义的重要的是定义的注意点的模板，但点之前的模板实例化后宣布的重载是否他们定义的通过参数相关的查找找到只会被视为。MSVC 以前没做参数相关的查找分别从普通、 不合格的查找所以此行为变化可能令人惊讶。</p>\n<p>这也是<a href=\"https://wandbox.org/permlink/7AbIQS19ZItMMRkb\">上 Wandbox 在线编译器可用</a>的代码示例，请考虑：</p>\n<pre>\n#include &lt; cstdio &gt; \n\n无效 func(long) {std::puts(\"func(long)\")};\n\n&lt; typename T &gt; 模板无效喵 (T t) {\n    func(t);\n}\n\n空 func(int) {std::puts(\"func(int)\")};\n\n命名空间的小猫 {\n    结构薄荷 {};\n    空 func(Peppermint) {std::puts(\"Kitty::func(Kitty::Peppermint)\")};\n}\n\nint main （) {\n    meow(1729);\n    Kitty::Peppermint 胡椒;\n    meow(pepper);\n}\n</pre>\n<p>调用 <code>meow(1729)</code> 将解析为 <code>void func(long)</code> 过载，不 <code>void func(int)</code> 重载，因为不合格 <code>func(int)</code> 声明后模板的定义并不通过参数相关的查找找到。但是 <code>void func(Peppermint)</code> 并参与参数相关的查找，因此它添加到设置为调用的重载 <code>meow(pepper)</code> 。</p>\n<p>从上面的例子，你可以看到\"两相查找\"这两个阶段是对非依赖名称时的模板定义的查找和查找从属名称在模板实例化的时候。</p>\n<p><a></a></p>\n<h3>视觉工作室 2017\"15.3\"前 MSVC 行为</h3>\n<p>从历史上看，当遇到一个模板，MSVC 编译器采取了以下步骤：</p>\n<ul><li>当解析一个类模板，MSVC 以前解析只有模板声明、 类的头和基类列表。模板正文被俘作为令牌流。没有函数体，初始值设定项，默认参数，或 <code>noexcept</code> 参数都被解析。类模板是伪实例化要验证中的类模板的声明是正确的\"暂定\"类型。例如采取此类模板： <code>template &lt;typename T&gt; class Derived : public Base&lt;T&gt; { ... }</code> 。模板声明， <code>template &lt;typename T&gt;</code> ，类的头， <code>class Derived</code> ，和基底类别列表中， <code>public Base&lt;T&gt;</code> 模板正文，但解析 <code>{ ... }</code> ，作为令牌流捕获。</li>\n<li>当解析函数模板，MSVC 以前解析只有函数签名。函数体永远不会解析 — — 它被捕获作为令牌流。因此，如果模板正文有语法错误和模板永远不会实例化错误从来没有确诊。</li>\n</ul><p>怎么这种行为引起的不正确解析的示例可以看到如何 MSVC 不需要关键字 <code>template</code> 和 <code>typename</code> 无处不在他们 c + + 标准要求他们。这些关键字在一些职位需要消除歧义如何编译器查找第一阶段就应解析依赖的名称。例如，考虑下面这行代码：</p>\n<pre>\nT::Foo &lt; | |b &gt; (c); \n</pre>\n<p>这个代码是函数模板的参数调用 <code>a || b</code> 吗？或这是一种逻辑-或表达与 <code>T::foo &lt;</code> 的左操作数和 <code>b &gt; (c)</code> 为右操作数？</p>\n<p>符合的编译器将解析 Foo 中的 T，意思这段代码范围的变量或两个比较操作。如果你打算使用 <code>Foo</code> 作为一个函数模板，您必须指示这是一个模板，通过添加模板关键字，例如，</p>\n<pre>\nT::template 美孚 &lt; | |b &gt; (c); \n</pre>\n<p>在 Visual Studio 2017 年\"15.3\"之前, MSVC 允许此代码<em>没有</em>模板关键字因为它解析模板在非常有限的时尚。上面的代码会没有分析在所有第一阶段。在第二阶段还有足够的上下文说 <code>T::Foo</code> 是一个模板，而不是一个变量，所以 MSVC 不执行使用的关键字。</p>\n<p>这种行为还可以被消除的关键字 <code>typename</code> 之前在函数模板体，初始值设定项，默认参数名称和 <code>noexcept</code> 参数。请考虑此代码：</p>\n<pre>\n模板 &lt; typename T &gt;\ntypename T::TYPE func (typename T::TYPE *)\n{\n    typename T::TYPE;\n}\n</pre>\n<p>如果你移除相应的关键字 <code>typename</code> 4 号线在函数体内，MSVC 会有仍然编译此代码而符合的编译器会拒绝代码。你需要 <code>typename</code> 关键字来表明， <code>TYPE</code> 是依赖。因为 MSVC 以前没有解析人体不需要的关键字。<a href=\"https://godbolt.org/g/PZNK6B\">您可以看到此在线编译器资源管理器中的示例</a>。自编译 MSVC 一致性模式下，此类代码 ( <code>/permissive-</code> )，将导致错误，因为你向前移动到 MSVC 版本 19.11 和超越，一定要找地方这哪里像 <code>typename</code> 关键字是缺掉的。</p>\n<p>同样地，在此代码示例：</p>\n<pre>\n模板 &lt; typename T &gt;\ntypename T::template X &lt; T &gt;:: 类型 func (typename T::TYPE)\n{\n    typename T::template X &lt; T &gt;:: 第一类;\n}\n</pre>\n<p>此前仅要求 MSVC <code>template</code> 关键字上第 2 行。符合标准的编译器需要 <code>template</code> 以及表明，4 号线上的关键字 <code>T::X&lt;T&gt;</code> 是一个模板。取消注释<a href=\"https://godbolt.org/g/yMazjQ\">此示例对编译器资源管理器</a>来查看操作中的错误中的关键字。再次，牢记此缺少关键字你向前移动您的代码。</p>\n<h3>两相在 Visual Studio 2017 年\"15.3\"名称查找</h3>\n<p>我们介绍了视觉工作室 2017年\"一致性模式\"开关。在释放与 VS2017 v141 编译器工具集，您可以使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"><span>/ 许可-<span>切换</span></span></a>打开这个一致性模式。（在接下来的主要编译器修订中，一致性模式会在默认情况下。At that point，你将能够使用 / 许可开关要求一致性模式 (没有 <code>-</code> ) 喜欢 <code>-fpermissive</code> 开关在其他编译器。)失踪时我们介绍的大功能之一 <code>/permissive-</code> 开关是两相名称查找，现在已部分执行船舶与 VS2017 的编译器中\"15.3\"。</p>\n<p>有几个缺少对我们两相名称查找支持的部分 — — 请参阅下面的<a href=\"https://blogs.msdn.microsoft.com/vcblog#What's%20coming%20next\">\"下一个什么\"</a>的详细信息。但 MSVC 编译器现在正确地解析和强制执行严格的语法规则：</p>\n<ul><li>类模板</li>\n<li>函数模板和类模板的成员函数的尸体</li>\n<li>初始值设定项，包括成员初始值设定项</li>\n<li>默认参数</li>\n<li><code>noexcept</code>参数</li>\n</ul><p>此外，STL MSVC 实施清洁是完全两相 (通过验证 <code>/permissive-</code> MSVC 一样铿锵的 <code>-fno-ms-compatibility -fno-delayed-template-parsing</code> )。我们最近得到了 ATL 是两相清洁;如果您发现任何挥之不去的错误请务必让我们知道 ！</p>\n<p>但你做什么你可能依赖于旧的、 不正确 MSVC 行为的遗留代码吗？您仍然可以使用 <code>/permissive-</code> 余生的一致性改进，即使您的代码还没完全准备好了模板机构解析和从属名称正确绑定。只是扔 <code>/Zc:twoPhase-</code> 开关关闭模板解析和从属名称绑定。使用此开关将导致 MSVC 编译器使用的旧的行为与非标的语义，给你一个机会来解决您的代码以使用符合的 MSVC 编译器编译正确。</p>\n<p>如果您使用的 Windows RedStone2 （\"创作者更新\"） SDK 与 <code>/permissive-</code> 开关，您需要暂时禁用两相名称查找通过使用 <code>/Zc:twoPhase-</code> 开关直到 Windows 红石 3 （\"秋天创作者更新\"） SDK 是可用。这是因为 Windows 团队一直与 MSVC 团队作出的 SDK 头与两相名称查找一起正常工作。他们的更改将不可用，直到 RedStone3 Windows SDK 释放，也不会回到 RedStone2 Windows SDK 移植两相名称查找所做的更改。</p>\n<p><a></a></p>\n<h3>下一个什么</h3>\n<p>两相名称查找 MSVC 的支持是进行中的工作。这里是一个列表的什么留下来在未来更新 MSVC 视觉工作室 2017 年。请记住，您需要使用 <code>/permissive-</code> 开关使用这些示例，以使两相的查找。</p>\n<ol><li>在模板中的未申报的标识符才得到确诊。例如<pre>\n&lt; T 类 &gt; 模板\n无效 f （）\n{\n    我 = 1; / / 缺少错误: '我' 不在此范围内声明\n}\n</pre>\n<p>MSVC 不会发出错误， <code>`i`</code> 不声明和代码编译成功。添加实例化 <code>f</code> 导致生成正确的错误：</p>\n<pre>\n&lt; T 类 &gt; 模板\n无效 f （）\n{\n    我 = 1; / / 缺少错误: '我' 不在此范围内声明\n}\n\n无效 instantiate()\n{\n    &lt; int &gt; f （);\n}\n</pre>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret one.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\none.cpp\nc:tmpone.cpp(4,5)： 错误 C2065: '我': 未声明的标识符\n    我 = 1;\n    ^\nc:tmpone.cpp(9)： 注： 请参阅参考，函数模板实例化 '无效 f &lt; int &gt; (void) 正在编译\n    &lt; int &gt; f （);\n</pre>\n</li>\n<li>与 VS 2017\"15.3\"MSVC 编译器将生成一个错误找不到 <code>template</code> 和 <code>typename</code> 关键字，但不是会建议添加这些关键字。较新的编译器生成给更多的信息诊断。<pre>\n&lt; T 类 &gt; 模板\n无效 f （） {\n   T::Foo &lt; int &gt; （);\n}\n</pre>\n<p>MSVC 编译器附带 VS 2017\"15.3\"给出了此错误：</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret two.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25506 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\ntwo.cpp\ntwo.cpp(3,16): C2187 错误： 语法错误: ')' 在这里出乎意料\n   T::Foo &lt; int &gt; （);\n               ^\n</pre>\n<p>生成的编译器，将船舶的 VS 2017 给未来更新更详细的错误：</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret two.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\ntwo.cpp\ntwo.cpp(3,7)： 错误 C7510: Foo： 使用依赖的模板名称必须与模板为前缀\n   T::Foo &lt; int &gt; （);\n      ^\ntwo.cpp(3,4): C2760 错误： 语法错误： 意外的令牌标识符，预期的 'id 表达'\n   T::Foo &lt; int &gt; （);\n   ^\n</pre>\n</li>\n<li><!-- THREE -->编译器不正确查找功能期间参数相关的查找。这可能导致错误的函数在运行时被调用。<pre>\n#include &lt; cstdio &gt;\n\n命名空间 N\n{\n    结构 X {};\n    结构 Y: X {};\n    无效的 f(X&amp;) \n    { \n        std::puts (\"X &amp;\"); \n    }\n}\n\n模板 &lt; typename T &gt;\n无效 g()\n{\n    N::Y y;\n    f(y);这是非依赖但它找不到在参数相关的查找过程中所以就是未绑定。\n}\n\n无效的 f(N::Y&amp;)\n{\n    std::puts (\"Y &amp;\");\n}\n\nmain （) int\n{\n    g &lt; int &gt; （);\n}\n</pre>\n<p>运行此程序的输出是以上就是 <code>Y&amp;</code> 时，它应该是 <code>X&amp;</code> 。</p>\n<pre>\nC:tmp &gt; cl / 许可-/diagnostics:caret three.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25506 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\nthree.cpp\nMicrosoft （R） 增量链接器版本 14.11.25506.0\n版权所有 （C) Microsoft Corporation。  版权所有。\n\n/out:three.exe\nthree.obj\n\nC:tmp &gt; 三\nY &amp;\n</pre>\n</li>\n<li>非类型取决于表达式涉及局部声明不正确分析。MSVC 编译器目前分析作为依赖导致不正确的错误类型。<pre>\n&lt; int &gt; 模板结构 X \n{ \n    使用类型 = int; \n};\n\n模板 &lt; typename &gt;\n无效 f （）\n{\n    constexpr int 我 = 0;\n    X &lt; i &gt;:: 类型 j;\n}\n</pre>\n<p>语法错误发出因为 <code>i</code> 没有正确分析要非值取决于表达式时在第 9 行的表达式的值不是类型相关。</p>\n<pre>\nC:tmp &gt; cl /c / 许可-/diagnostics:caret four.cpp\nMicrosoft （R） C/c + + 优化编译器版本 19.11.25618 x64\n版权所有 （C) Microsoft Corporation。  版权所有。\n\nfour.cpp\nfour.cpp(10,16): C2760 错误： 语法错误： 意外的标记 '标识符' 预期 ';'\n    X &lt; i &gt;:: 类型 j;\n               ^\nfour.cpp(10,5)： 错误 C7510: TYPE： 使用依赖类型名称必须以 typename 为前缀\n    X &lt; i &gt;:: 类型 j;\n    ^\n</pre>\n</li>\n<li>既不重定义的模板参数和重新定义的模板函数参数作为本地名称都报告为错误。<pre>\n&lt; T 类 &gt; 模板\n无效 f(int i)\n{\n    双 T = 0.0; / / 缺少错误: 宣言 》 不 ' 阴影模板参数\n    浮我 = 0;    缺少错误： 重新界定与不同类型的 ' 我'\n}\n</pre>\n</li>\n<li><!-- SIX -->MSVC 编译器错在某些情况下的当前实例。使用关键字 <code>typename</code> 是合法的可以帮助编译器正确识别当前实例化。<pre>\n&lt; T 类 &gt; 模板结构 A {\n    typedef int 类型;\n    A::TYPE c1 = 0;    不正确地编译失败\n    &lt; T &gt;:: 类型 c2 = 0; / / 不正确编译失败\n};\n</pre>\n<p>添加关键字 <code>typename</code> 之前的每个实例 <code>A</code> 允许编译此代码：</p>\n<pre>\n&lt; T 类 &gt; 模板 \n结构 A \n{\n    typedef int 类型;\n    typename A::TYPE c1 = 0;\n    typename &lt; T &gt;:: 类型 c2 = 0;\n};\n</pre>\n</li>\n<li>未申报的默认参数才得到确诊。此示例演示在哪 MSVC 编译器仍然做一个阶段查找案件。它利用宣言 》 的 <code>SIZE</code> 模板声明之后发现，好像它被宣布之前的模板。<pre>\n模板 &lt; int N = 大小 &gt; / / 缺少诊断： 使用未声明的标识符 '大小'\n结构 X\n{\n    int [N];\n};\n\nconstexpr int 大小 = 42;\n\nX&lt;&gt; x;\n</pre>\n</li>\n</ol><p>所有上述问题计划在 MSVC 视觉工作室 2017 年的下一个重大更新中予以解决。</p>\n<h3>为什么花这么长时间？</h3>\n<p>其他编译器有两相名称查找实施相当一段时间。为什么 MSVC 刚才得到它正确？</p>\n<p>实施两相名称查找所需 MSVC 的体系结构的根本变化。最大的变化是<a href=\"https://aka.ms/CompilerRejuvenation\">写新的递归下降分析器，以取代基于 YACC 分析器</a>，我们已经使用超过 35 年。</p>\n<p>我们早就决定遵循增量的路径，而不是重写编译器从零开始。老年的 MSVC 代码库演变成一个更加现代的代码库而不是\"走出黑暗\"大重写允许我们自己没有引入微妙的 bug 和重大更改，您的现有代码进行编译时做出重大改变。我们需要仔细地弥合旧代码和新代码，以确保大型测试套件的现有代码继续编译完全一样的 （除了在哪里我们故意想要做一个改变，引入的所有时间的\"编译器复兴\"工作符合标准的行为）。花了更长时间去做这项工作以这种方式，但能让我们向开发商交付增量价值。我们已经能够做出重大更改，而不会意外破坏现有的代码。</p>\n<h3>在闭幕</h3>\n<p>我们都很兴奋终于在 MSVC 有两相名称查找支持。我们知道，编译器仍然不会编译一些模板代码正确 — — 如果你发现在这篇文章中没有提到一个案例，请向我们伸出，我们可以修复这个 bug ！</p>\n<p>所有的代码样本在这篇文章现在编译 （或不能编译，适当的时候） 正确的标准。你会看到这一新行为与视觉工作室 2017\"15.3\"，或者你可以试试现在<a href=\"https://aka.ms/dailymsvc\">使用 MSVC 编译器每日构建</a>。</p>\n<p>现在是好的时候，要开始使用<a href=\"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/\"> <code>/permissive-</code> 切换</a>前进您的代码。记得当你遇到模板解析错误，添加关键字 <code>template</code> 和 <code>typename</code> ，MSVC 以前不要求 （<a href=\"https://blogs.msdn.microsoft.com/vcblog#MSVC%20behavior%20prior%20to%20Visual%20Studio%202017%2015.3\">见上文</a>） 可能会修复此错误。</p>\n<p>如果您有任何反馈或建议，让我们，让我们知道。我们可以通过下面，通过电子邮件 (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) 的评论，你可以提供反馈通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">帮助 &gt; 报告一个问题在产品</a>，或通过<a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">开发者社区</a>。你也可以找到我们在 Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) 和 Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>) 上。</p>"},{"Id":97,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-12T02:35:22","Description":"<p>The XAML designers in Visual Studio and Blend have been powerful tools for developers and designers alike to build beautiful user experiences for Windows applications. Initially designed for WPF development in 2007, we have made significant changes to support a wide variety of XAML platforms over the last decade. We&rsquo;ve also added new features along the way to increase developer productivity. Unfortunately, with all these changes, the performance and reliability of the designer have become less than ideal. We&rsquo;ve heard the community <a href=\"https://visualstudio.uservoice.com/forums/121579-visual-studio-ide/suggestions/2204137-improve-the-xaml-designer-performance\">loud and clear</a> and we are working hard to fix that.</p>\n<p>Read below to find out what&rsquo;s new, and try out the updates to the XAML Designer by building UWP applications targeting the upcoming Windows 10 Fall Creators Update in the latest <a href=\"https://www.visualstudio.com/vs/preview/\">Visual Studio Preview release</a>! If you want to see all the details, check out the <a href=\"https://www.visualstudio.com/news/releasenotes/vs2017-preview-relnotes\">release notes</a>.</p>\n<h2>Important note about this release</h2>\n<p>This release of the updated XAML designer is a very early preview of what&rsquo;s to come and might be rough around the edges. The drastic nature of the changes has resulted in us disabling some of the features that previously existed in the XAML designer, as well as shipping with known issues (called out in the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">release notes</a>). As a result, we are only releasing the updated designer for a small subset of XAML scenarios &ndash; specifically, for developers building UWP applications that target the Fall Creators Update. If you were building a WPF application or a UWP application targeting the existing Windows 10 Creators Update or earlier, your experience will remain unchanged.</p>\n<h2>Design considerations</h2>\n<p>We have received a lot of community feedback on the XAML designer, and based on the feedback, we&rsquo;ve prioritized the below design consideration:</p>\n<ol><li>Improve the designer performance in a significantly visible way (I can&rsquo;t reiterate enough how much we are emphasizing performance)</li>\n<li>Highest possible fidelity of the designer surface &ndash; especially focused on rendering artifacts introduced by the new <a href=\"https://fluent.microsoft.com/\">Windows Fluent Design System</a></li>\n<li>Fewer designer exceptions to keep you as productive in the design surface as possible</li>\n<li>While we rapidly iterate on this new experience, do not break or change existing XAML development in Visual Studio and Blend</li>\n<li>Last but not the least, create the tools that help you be more productive building Windows experiences</li>\n</ol><p>We believe we have made significant progress to achieve these goals and are excited to share our first iteration for you to try and provide feedback. Our ultimate goal is to make the designer load as fast as your app, and offer tooling experiences for your page to render the contents of any of your controls at design time.</p>\n<h3>Performance</h3>\n<p>Much of our efforts have been directed at making the design surface process as thin and lightweight as possible. Effectively a wrapper around your UI code, the XAML Designer will now load nearly as fast as your app itself.</p>\n<p>You can see this in action below. On the left, we have a project targeting the Fall Creators Update (therefore, leveraging the changes we have made to the designer). On the right, we have an identical project targeting the Creators Update (therefore, using the XAML design experience that you would see today). After reopening the solution, you can tell the XAML designer changes we have made result in an exponentially faster loading time. The designer on the right may look like it is stuck, but if you look closely you can see the loading bar at the top of the designer. Be patient and you&rsquo;ll see it load eventually!</p>\n<p><strong><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\" rel=\"noopener noreferrer\"><img width=\"1774\" height=\"1097\" title=\"XAML Designer PerformanceXAML Designer Performance - side by side comparison\" alt=\"XAML Designer Performance - side by side comparison\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\"></a></strong></p>\n<h3>Fidelity</h3>\n<p>At the Build 2017 event back in May, Microsoft announced the new UI design system known as <a href=\"https://fluent.microsoft.com/\">Fluent</a>. With the Fall Creators Update, we are beginning to introduce new controls built on this new universal design language. Fluent places heavy emphasis on the core building blocks: light, depth, motion, material, and scale. To achieve these UI effects, heavy use of composition is necessary.</p>\n<p>The existing XAML designer does not execute code in the design process that leverages composition APIs and therefore cannot render many of these new experiences. A clearly visible example is demonstrated below, with the new Fall Creators Update &lsquo;AcrylicBrush&rsquo; resource. The left shows the XAML designer in this preview and the right shows the XAML designer as you would have experienced it in a previous release.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\" rel=\"noopener noreferrer\"><img width=\"1773\" height=\"975\" title=\"XAML Designer\" alt=\"XAML Designer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\"></a></p>\n<h3>Reliability</h3>\n<p>Previously, the XAML designer always executed against the desktop .NET Framework. Since UWP is built on top of .NET Core, this would sometimes result in reliability issues as the design process had problems with .NET Core types (e.g. <a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>). Going forward, the XAML Designer will always execute against the .NET runtime environment used by your application, so type forwarding issues are mitigated and general reliability of the designer should be improved.</p>\n<p>The XAML designer has been successful at providing a meaningful design-time preview of your UI because we try to execute your code as close as possible to the runtime environment of your app. One side effect of this is that misbehaved code doesn&rsquo;t work well, something that you can continue to protect with <a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">design mode APIs</a>.</p>\n<p>With that in mind, there are still cases where code in development may cause exceptions and crash the designer. By investing in making the designer load in just a couple of seconds, we believe it will be much easier to iterate more quickly on your work-in-progress code.</p>\n<h2>Built from the Ground Up</h2>\n<p>For us to be able to make a big impact on our top priorities, the XAML Designer needed to undergo a drastic architectural change. In addition, we wanted to provide investments that would improve all XAML development experiences, including XAML Edit &amp; Continue. With that in mind, we decided to use the same technology that powers XAML Edit &amp; Continue to power the future of the XAML Designer.</p>\n<p>Let&rsquo;s take a deeper look at some of the other big changes that warrant a reinvestment. This next section is for those of you interested in knowing the nitty-gritty details of the changes we are making to the XAML designer.</p>\n<h3>Architecture Changes</h3>\n<p>At a high-level, the architecture change consists of a redesign of the designer surface process (UwpSurface.exe) to be as lightweight and small as possible. The xdesproc.exe process, used by the existing XAML designer, did a lot &ndash; it contained the code to all the XAML editor and design features (in WPF), it would load in type metadata for your app and the developer&rsquo;s ViewModels, and it also executed actual design process to show the preview in the XAML designer. If any one of those had a problem, the design process would crash. Restarting the designer (or opening a new page) would take too long because the process itself would be doing so much work every time you load a new page.</p>\n<p>With this XAML designer update, we are making the design surface process (UwpSurface.exe) as thin and lightweight as possible. It is effectively a wrapper around your app&rsquo;s UI code (this is where the technology that enables XAML Edit &amp; Continue comes in). Since the process itself is doing so little, loading the XAML designer should be as fast as launching your application when we are all done with the effort.</p>\n<p>Since UwpSurface.exe will still run your controls, you need to be careful with your code behind to not crash the designer &ndash; for instance, you must still not dereference your application object at design time. With the redesign, UwpSurface.exe offers additional rendering capability so we have introduced a new design mode API: Windows.ComponentModel.DesignMode.IsDesignMode2Enabled. This allows you to control runtime code execution for the new designer surface process, and continue to offer checks when the same code executes in the existing designer. Our expectation is that you will be able to relax many of the design time checks you might have added in the past. Check out the <a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">docs</a> for more information.</p>\n<p>In addition, xdesproc.exe had a significant dependency on the desktop .NET runtime. For UWP applications, this hasn&rsquo;t had a large impact in the past. Much of the .NET API surface area for UWP was just a subset of the desktop .NET Framework, but xdesproc.exe still had problem instantiating types that did not existing in the desktop .NET Framework (like <a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>).</p>\n<p>With the introduction of the Fall Creators Update and <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\">.NET Standard 2.0</a>, this problem becomes worse and needs to be a fundamental design principle. If you were trying to leverage a new .NET API available in .NET Standard 2.0 that wasn&rsquo;t available in the desktop .NET Framework (e.g. Span&lt;T&gt;), the design surface would have crashed. With this preview of the XAML designer, we are executing your code against the runtime that matches your app &ndash; so a UWP application will execute against the .NET runtime environment for UWP.</p>\n<h3>Feature Impact</h3>\n<p>It is worth calling out again that this is a very early preview of the XAML Designer, primarily designed to get feedback around your reliability and performance, in addition to helping us identify the tools you rely on most for productivity. The set of functionality that we enabled in this preview was identified as the tools and features that you currently use the most.</p>\n<p>The XAML designer <i>does not </i>support the below features:</p>\n<ul><li>Edit Current Style</li>\n<li>Device preview settings that allow testing for high contrast, themes, etc&hellip;</li>\n<li>Visual State Management tools</li>\n<li>Animation tooling</li>\n<li>Sample data, but designer instance is supported</li>\n<li>Ordering commands</li>\n<li>Alignment commands</li>\n<li>Group into commands</li>\n<li>Combine commands</li>\n<li>Path commands</li>\n<li>Make Into Control</li>\n<li>Text edit tool</li>\n<li>Resource panels in Blend</li>\n<li>Data panels in Blend</li>\n<li>Design time resource dictionary</li>\n<li>Some of the tools in Blend tool pane</li>\n<li>Editing inside of a template</li>\n<li>Designer extensions</li>\n<li>Behaviors tooling in Blend</li>\n</ul><h3>Known Issues with this Release</h3>\n<p>As we called out earlier, this is a <b>very </b>early preview of what&rsquo;s to come. In order to get customer input as early as possible, we had to make some hard engineering decisions. With that in mind, we are aware of several issues with the new XAML Designer that are called out in the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes#known-issues\">release notes</a>.</p>\n<h2>Roadmap</h2>\n<p>As we continue to acquire feedback from our early preview releases of the XAML designer, we will continue to prioritize reimplementing the top requested tools. We will continue to improve the XAML designer with heavy emphasis on our design considerations. When we have confidence that the designer provides more productivity than the existing designer and does not break any existing workflows, we will deliver these benefits by default for an increasing number of XAML scenarios.</p>\n<p>In addition, we will be collaborating with top designer extension developers as we reimplement the XAML designer extensibility model in support of their goals.</p>\n<p>We look forward to building the best XAML designer for developers by engaging with the community early and heavily prioritizing our investments around their feedback.</p>\n<h2>Conclusion</h2>\n<p>We&rsquo;ve made a lot of progress with our updates to the XAML designer, but there is still a lot of work to be done in reimplementing the tools you have known and love. For us to provide the most meaningful design-time tooling for all XAML developers, we need your feedback!</p>\n<p>If you&rsquo;d like to help us shape the future of the XAML designer, go ahead and give it a try by creating a UWP project that targets the Fall Creators Update. If you encounter any unexpected behavior, or find that tools that you rely on are missing, please let us know by using the <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Visual Studio Report-a-Problem tool</a>. In addition, we would love to talk to you about your experience or help you with any blocking issues. Feel free to reach out to us via email at <a>xamldesignerfeedback@microsoft.com</a>. We&rsquo;re eager to hear what you think!</p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/03/daniel.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>Daniel Jacobson, </b>Program Manager for Visual Studio<br><a target=\"_blank\" href=\"https://twitter.com/pmatmic\" rel=\"noopener noreferrer\">@pmatmic</a>\n<p>Daniel is a Program Manager on Visual Studio focused on tools for Universal Windows Platform developers and NuGet. He found his passion in software development after graduating with an M.S. in Mechanical Engineering from Case Western Reserve University in 2014.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-12T02:35:22","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/09/11/a-significant-update-to-the-xaml-designer/","MobileContent":null,"PublishId":0,"Status":1,"Title":"A significant update to the XAML Designer","Type":1,"TitleCn":"一个重大更新到 XAML 设计器","Content":"<p>XAML 设计器在 Visual Studio 和混合一直对于开发人员和设计者来说，打造美丽的用户体验对于 Windows 应用程序的强大工具。最初设计用于 WPF 开发 2007 年，我们取得了重大的变化，过去十年支持各种各样的 XAML 平台。我们已经添加了一路走来提高开发人员工作效率的新功能。不幸的是，所有这些变化，性能和可靠性的设计器，已成为不甚理想。我们听说过的社区<a href=\"https://visualstudio.uservoice.com/forums/121579-visual-studio-ide/suggestions/2204137-improve-the-xaml-designer-performance\">响亮而清晰</a>，我们正在努力解决这个问题。</p>\n<p>继续阅读以下内容，以找出什么是新的并通过建立针对即将 Windows 10 秋季创作者更新在<a href=\"https://www.visualstudio.com/vs/preview/\">Visual Studio 预览发布</a>最新的 UWP 应用程序尝试对 XAML 设计器的更新 ！如果你想要看到所有的细节，查阅<a href=\"https://www.visualstudio.com/news/releasenotes/vs2017-preview-relnotes\">发行说明</a>。</p>\n<h2>有关此版本的重要说明</h2>\n<p>此版本的更新的 XAML 设计器是一个非常早期的预演，是什么来，可能是粗糙的边缘。急剧变化的性质使得我们禁用一些特性以前存在的 XAML 设计器，以及航运 （称为中的<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">发行说明</a>） 的已知问题。因此，我们只发布更新设计器对于 XAML 方案一小部分 — — 具体而言，为开发人员构建 UWP 应用程序这一指标下降创作者更新。如果你要建造一个 WPF 应用程序或应用程序针对现有 Windows 10 创作者更新或更早版本的 UWP，你的经验将保持不变。</p>\n<h2>设计考虑事项</h2>\n<p>我们收到很多社区，XAML 设计器上的反馈和基于反馈，我们优先考虑以下设计审议：</p>\n<ol><li>改进的设计器的性能明显可见的方式 （不能重申够多少我们都在强调性能）</li>\n<li>最可能的高保真度的设计器图面 — — 尤其被集中在呈现项目由新<a href=\"https://fluent.microsoft.com/\">Windows 流利设计系统</a>介绍</li>\n<li>更少的设计师异常，让您尽可能设计图面中的丰硕成果</li>\n<li>虽然我们迅速循环这种新的经验，不要打破或更改现有 XAML 开发 Visual Studio 和混合</li>\n<li>最后但并非最不重要的是，创建工具，帮助您会更有成效构建 Windows 体验</li>\n</ol><p>我们相信我们已取得重大进展，为实现这些目标，很高兴能够分享我们第一次迭代为您尝试并提供反馈。我们的最终目标是要尽快在您的应用程序，使设计器加载和提供模具经验为您的页面在设计时呈现任何您的控件的内容。</p>\n<h3>性能</h3>\n<p>很多我们的努力一直在针对工序的设计表面薄以及尽可能地轻量。有效地在 UI 代码周围的包装，XAML 设计器，将现在几乎快作为您自己的应用程序的加载。</p>\n<p>你可以看到这在下面的行动。在左边，我们有一个针对秋天创作者更新项目 （因此，利用到设计器的更改）。在右边，我们有相同的项目，针对创作者更新 （因此，使用 XAML 设计你会看到今天的经验）。重新打开解决方案，你可以告诉 XAML 设计器更改我们取得结果指数更快的加载时间。在右边设计师可能看起来像它卡住了，但如果你仔细看你可以看到顶部的设计器加载栏。耐心点，你会看到它加载最终 ！</p>\n<p><strong><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\" rel=\"noopener noreferrer\"><img width=\"1774\" height=\"1097\" title=\"XAML Designer PerformanceXAML Designer Performance - side by side comparison\" alt=\"XAML Designer Performance - side by side comparison\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer-Performance.gif\"></a></strong></p>\n<h3>富达</h3>\n<p>在生成 2017年事件早在今年五月份，微软宣布新的 UI 设计系统称为<a href=\"https://fluent.microsoft.com/\">流利</a>。与秋天创作者更新，我们开始介绍对这种新的通用设计语言中内置的新控件。流利的地方重重点核心构造块： 光、 深度、 运动、 材料和规模。为了实现这些用户界面效果，组成重使用是必要的。</p>\n<p>现有的 XAML 设计器不会执行代码，在设计过程中，利用组成的 Api，因此无法呈现很多这些新的经验。一个明显的例子示，新的秋天创作者更新 'AcrylicBrush' 资源。左边显示的 XAML 设计器在此预览和权显示 XAML 设计器作为你会经历它在以前的版本中。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\" rel=\"noopener noreferrer\"><img width=\"1773\" height=\"975\" title=\"XAML Designer\" alt=\"XAML Designer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/XAML-Designer.png\"></a></p>\n<h3>可靠性</h3>\n<p>以前，XAML 设计器总是针对桌面.NET 框架执行。由于 UWP 建立在.NET 核心，这有时会造成在可靠性问题，作为设计过程有.NET 核心类型 (例如<a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>) 的问题。展望未来，XAML 设计器将始终执行针对.NET 运行时环境使用您的应用程序，所以类型转发问题减轻和应提高一般可靠性的设计器。</p>\n<p>XAML 设计器已成功在提供有意义的设计时预览的 UI，因为我们试着去执行你的代码到您的应用程序的运行时环境尽可能接近。这的一个副作用是，行为不检点的代码不太好使，你可以继续保护与<a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">设计模式 Api</a>的东西。</p>\n<p>考虑到这一点，仍有的情况下发展中的代码可能会导致异常崩溃设计器。通过投资于设计器加载在仅仅几秒钟，我们相信它将循环更快地在工作中进步代码上要容易得多。</p>\n<h2>从地面建立</h2>\n<p>我们要能够在我们最高优先事项上取得很大的影响，XAML 设计器需要进行建筑的剧变。此外，我们想要提供将提高所有 XAML 的发展经验，包括 XAML 编辑和继续投资。考虑到这一点，我们决定那力量 XAML 编辑和继续使用相同的技术来驱动未来的 XAML 设计器。</p>\n<p>让我们更深层次看一些其他值得再投资的大变化。这下一节是给那些对你有兴趣知道我们到 XAML 设计器所做的更改的细节。</p>\n<h3>体系结构更改</h3>\n<p>在高级别，体系结构更改包括流程重新设计的设计器表面 (UwpSurface.exe) 是作为轻量级和尽可能小。Xdesproc.exe 的过程中，利用现有的 XAML 设计器中，做了很多 — — 它所载的所有 XAML 编辑器和设计功能 （在 WPF) 代码，它会在您的应用程序和开发人员的 Viewmodel 类型元数据加载和它也执行到实际设计过程在 XAML 设计器中显示预览。如果其中的任何一个有问题，会崩溃的设计过程。重新启动设计器 （或打开新的一页） 要花费很长的因为这个过程本身会做这么多工作，每次你加载新的一页。</p>\n<p>此 XAML 设计器的更新，我们正在设计表面过程 (UwpSurface.exe) 作为薄，尽可能地轻量。它实际上是您的应用程序的 UI 代码 （这是技术，使 XAML 编辑 &amp; 继续进来的地方） 的包装。由于这个过程本身做那么少，加载 XAML 设计器应尽快启动您的应用程序，当我们正在做的努力。</p>\n<p>因为 UwpSurface.exe 仍将运行您的控件，您需要小心你背后的代码不能崩溃设计器 — — 例如，你必须仍然不取消引用您的应用程序对象在设计时。与重新设计，UwpSurface.exe 提供额外的渲染能力，所以我们已经引入了一种新的设计模式 API: Windows.ComponentModel.DesignMode.IsDesignMode2Enabled。这允许您控制运行时代码执行的新的设计器表面过程中，并继续提供检查时，在现有的设计器中执行相同的代码。我们的期望是，你将能够放宽了许多过去添加设计时检查。签出<a href=\"https://docs.microsoft.com/en-us/uwp/api/Windows.ApplicationModel.DesignMode\">文档</a>的详细信息。</p>\n<p>此外，xdesproc.exe 桌面.NET 运行库的有关有显著的相关性。对于 UWP 应用程序，这并没有在过去了很大影响。很多.NET API 表面积为 UWP 感到只是一个子集桌面.NET 框架，但 xdesproc.exe 仍有问题实例化类型，没有现有的桌面.NET 框架 （如<a href=\"https://developercommunity.visualstudio.com/content/problem/102282/when-adding-any-ui-effects-from-uwp-toolkid-the-xa.html\">System.Numerics.Vector2</a>) 中。</p>\n<p>与秋天创作者更新和<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/\">.NET 标准 2.0</a>的介绍，这个问题变得更糟糕的是，需要有一个基本的设计原则。如果你想要利用新的.NET API 在.NET 不是桌面.NET 框架中提供的标准 2.0 中可用 (例如跨度 &lt; T &gt;)，设计图面就坠毁了。与 XAML 设计器这个预览，我们在执行对匹配您的应用程序 — — 所以为 UWP UWP 应用程序将执行针对.NET 运行时环境的运行时代码。</p>\n<h3>功能的影响</h3>\n<p>它值得再次呼唤，这是一个非常早期的 XAML 设计器预览，主要目的是获取反馈周围的可靠性和性能，以及帮助我们找出你依赖最大的生产力的工具。我们在此预览中启用的功能集被认定为的工具和你目前使用最多的功能。</p>\n<p>XAML 设计器<i>不</i>支持以下功能：</p>\n<ul><li>编辑当前样式</li>\n<li>允许为高对比度、 主题等测试的设备预览设置...</li>\n<li>可视状态管理工具</li>\n<li>动画工具</li>\n<li>示例数据，但设计器实例被支持</li>\n<li>排序命令</li>\n<li>对齐命令</li>\n<li>分组到命令</li>\n<li>组合命令</li>\n<li>路径命令</li>\n<li>使成为控制</li>\n<li>文本编辑工具</li>\n<li>共混物中的资源面板</li>\n<li>共混物中的数据面板</li>\n<li>设计时间资源字典</li>\n<li>一些在混合工具窗格中的工具</li>\n<li>在模板编辑</li>\n<li>设计器扩展</li>\n<li>模具在共混物的行为</li>\n</ul><h3>此版本的已知的问题</h3>\n<p>我们早些时候叫，这是一个<b>非常</b>的早期预览是什么来。为了得到客户的输入作为尽早，我们不得不做出一些努力工程的决定。这一点，我们所知的与新的 XAML 设计器叫出的<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes#known-issues\">发行说明</a>中的几个问题。</p>\n<h2>路线图</h2>\n<p>随着我们继续获得反馈我们早期的预览版本的 XAML 设计器中，我们将继续优先考虑重新实现顶级请求的工具。我们将继续提高我们设计考虑重的 XAML 设计器。当我们有信心设计器提供了更多的生产力，比现有的设计师并不会中断任何现有的工作流程时，我们将默认情况下，越来越多的 XAML 方案提供这些好处。</p>\n<p>此外，我们将合作与顶尖的设计器扩展开发人员为我们重新实现 XAML 设计器扩展性模型以支持他们的目标。</p>\n<p>我们期待建立最佳的 XAML 设计器开发商与社区早期和严重优先我们投资在他们的反馈意见进行。</p>\n<h2>结论</h2>\n<p>我们已经很大的进步与我们更新到 XAML 设计器，但仍有大量工作要做在重新实现的工具你已经知道和爱。为我们提供了最有意义的设计时间为所有 XAML 开发人员工具，我们需要您的反馈 ！</p>\n<p>如果你想要帮助我们塑造未来的 XAML 设计器，往前走，给它一个尝试通过创建 UWP 项目秋季创作者更新为目标。如果你遇到任何意外的行为，或者发现丢失了你依赖的工具，请让我们知道通过使用<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Visual Studio 报告一个问题的工具</a>。此外，我们很乐意跟你谈谈你的经验或帮助您解决任何阻塞的问题。请随时通过电子邮件在<a>xamldesignerfeedback@microsoft.com</a>向我们伸出。我们急切地想听到你的想法 ！</p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/03/daniel.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>丹尼尔 · 雅各布森</b>Visual studio 项目经理<br><a target=\"_blank\" href=\"https://twitter.com/pmatmic\" rel=\"noopener noreferrer\">@pmatmic</a>\n<p>丹尼尔是 Visual Studio 专注工具为通用 Windows 平台开发人员和 NuGet 程序经理。他在软件开发中在 2014 年从凯斯西储大学的机械工程硕士毕业后，发现他的激情。</p></td>\n</tr></tbody></table>"},{"Id":96,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-12T00:00:23","Description":"<p>Join me <b>on Thursday, September 21 at 9 am PT / 12 pm ET / 4 pm UTC for my &ldquo;Exploring UrhoSharp 3D with Xamarin Workbooks&rdquo; webinar</b>, where I&rsquo;ll combine my love of graphics programming with my passion for helping developers build better apps. Whether you&rsquo;re just getting started or an experienced developer, you&rsquo;ll learn how to use your .NET and C# skills to create native mobile apps, complete with 3D graphics.</p>\n<h5 align=\"center\"><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">[REGISTER]</a></h5>\n<p><a target=\"_blank\" href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\" rel=\"noopener noreferrer\"><img align=\"center\" width=\"300\" height=\"187\" title=\"Xamarin University Logo\" alt=\"Xamarin University Logo\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Xamarin-University-Logo-M.png\"></a></p>\n<p>Lately, I&rsquo;ve been exploring UrhoSharp, Xamarin&rsquo;s C# and .NET wrapper of Urho3D. Urho3D is a sophisticated, powerful open-source 3D game engine written in C++ &mdash; and it allows developers to build 3D visualization and augmented reality applications. You can easily integrate UrhoSharp code into your Windows .NET and Xamarin apps, including Android, iOS, Mac, and more.</p>\n<p>Part of the reason I&rsquo;m excited about UrhoSharp: I love how graphics programming allows you to visualize something in your mind, then see it on the computer screen. About 10 years ago, I was heavy into 3D programming in the Windows Presentation Foundation, and I imagined a little two-lane highway in the form of a M&ouml;bius strip, with cars driving on the top, bottom, and sides. It looked great in theory, but I never found the time to code it.</p>\n<p>As I became more familiar with UrhoSharp, the M&ouml;bius mental image came back, and I was determined to make it real.</p>\n<p>I knew the math would be tricky, so I needed an immediate and interactive programming environment &ndash; and, with UrhoSharp and Xamarin Workbooks, my vision and my code came together. Xamarin Workbooks &ndash; an interactive blend of code and documentation that integrates C# code blocks into step-by-step guides &ndash; simplify learning mobile development, but it&rsquo;s also great for coding and testing out new ideas. As you add C# code blocks, you&rsquo;ll immediately see it executed on the screen, helping you learn as you go and make rapid changes to your apps&rsquo; appearance.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\" rel=\"noopener noreferrer\"><img title=\"Urho Sharp\" alt=\"Urho Sharp\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\"></a></p>\n<p>I&rsquo;ll dig into the code for this project, share my advice for getting started, and I &ndash; plus other Xamarin University instructors and mobile experts &ndash; will be on hand to answer your questions.</p>\n<p><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">Register now</a> and join me on <b>Thursday, September 21, at 9 am PT / 12 pm ET / 4 pm UTC </b>for a M&ouml;biusly graphical 3D experience.</p>\n<p><i>We encourage all registrants to attend the webinar live, as we will be answering questions throughout the event. However, we will share recordings with registrants after the session, so sign up even if you&rsquo;re unable to join us at the scheduled time. You can view an assortment of past sessions</i><i> </i><a href=\"https://aka.ms/xam-u-webinar-recordings\"><u>here</u></a><i>. </i></p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Charles-Petzold.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>Charles Petzold, </b>Senior Content Developer, Xamarin University, Microsoft\n<p>Charles Petzold has been working with the documentation team at Xamarin since 2014, focusing primarily on Xamarin.Forms and writing the free downloadable book Creating Mobile Apps with Xamarin.Forms. Prior to joining Xamarin, Charles wrote several books on Windows programming, as well as two unique explorations of computer concepts and technology: Code: The Hidden Language of Computer Hardware and Software and The Annotated Turing: A Guided Tour through Alan Turing&rsquo;s Historic Paper on Computability and the Turing Machine. He often spends his weekends working on a book about the origins of analog computing. Web site: charlespetzold.com</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-12T00:00:23","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/09/11/new-xamarin-university-webinar-exploring-urhosharp-3d-with-xamarin-workbooks/","MobileContent":null,"PublishId":0,"Status":1,"Title":"New Xamarin University Webinar: Exploring UrhoSharp 3D with Xamarin Workbooks","Type":1,"TitleCn":"新的 Xamarin 大学网络研讨会： 探索 UrhoSharp 3D 与 Xamarin 工作簿","Content":"<p>加入我<b>在 9 月 21 日，星期四在 9 am PT / 12 下午 ET / 4 下午 UTC 表示我\"探索 UrhoSharp 3D 与 Xamarin 工作簿\"网络研讨会的</b>，在那里会将图形编程我爱结合成我的热情，帮助开发人员构建更好的应用程序。无论您是刚开始还是有经验的开发人员，您将学习如何使用您的.NET 和 C# 技能创建本机移动应用程序，完整的 3D 图形。</p>\n<h5 align=\"center\"><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">[注册]</a></h5>\n<p><a target=\"_blank\" href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\" rel=\"noopener noreferrer\"><img align=\"center\" width=\"300\" height=\"187\" title=\"Xamarin University Logo\" alt=\"Xamarin University Logo\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Xamarin-University-Logo-M.png\"></a></p>\n<p>最近，我一直一直在探索 UrhoSharp、 Xamarin 的 C# 和.NET 包装的 Urho3D。Urho3D 是一个复杂、 功能强大的开源 3D 游戏引擎 c + + 编写 — — 它允许开发人员构建三维可视化和增强现实应用程序。你很容易可以融入您 Windows.NET 和 Xamarin 的应用程序，包括 Android、 iOS、 Mac 和更多的 UrhoSharp 代码。</p>\n<p>我兴奋 UrhoSharp 的原因的一部分： 我爱如何图形编程允许您想象中的东西在你的头脑，然后在电脑屏幕上看到它。大约 10 年前，我是重入 3D 编程在 Windows 演示文稿基础上，和我想象小小的双车道公路的莫比乌斯带，形式与在顶部、 底部和面上行驶的汽车。它看起来很好的理论，但我永远不会发现它的代码的时间。</p>\n<p>当我变得更加熟悉 UrhoSharp，莫比乌斯的心理图像回来了，和我决心要使它变为现实。</p>\n<p>我知道数学会非常棘手，所以我需要一种即时的和互动的编程环境 — — 与 UrhoSharp 和 Xamarin 工作簿，我的视野和我的代码来在一起。Xamarin 工作簿 — — 一个交互式的融合代码和 C# 代码块集成的分步指南的文档 — — 简化学习移动开发，但它也是伟大的编码和测试一些新的想法。C# 代码块添加时，您会立即看到它执行在屏幕上，帮助你学习作为你去和快速更改您的应用程序的外观。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\" rel=\"noopener noreferrer\"><img title=\"Urho Sharp\" alt=\"Urho Sharp\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Urho-Sharp.png\"></a></p>\n<p>我会挖到此项目的代码，分享我的忠告的入门知识，和我 — — 再加上其他 Xamarin 大学教员和移动专家 — — 将手头要回答你的问题。</p>\n<p><a href=\"https://www.xamarin.com/webinars/register/exploring-urhosharp-3d-with-xamarin-workbooks?utm_medium=Blog&amp;utm_source=VS&amp;utm_campaign=webinar_UrhoSharp_Workbooks\">现在注册</a>并同我一起上<b>9 月 21 日，星期四，在 9 am PT / 12 下午 ET / 4 下午 UTC </b>Möbiusly 图形的 3D 体验。</p>\n<p><i>我们鼓励所有登记参加网络研讨会现场，因为我们将回答在整个事件的问题。然而，我们会会议结束后与注册人分享录音，所以签约，即使你不能和我们一起在预定的时间。您可以查看过去的会话分类</i><i> </i><a href=\"https://aka.ms/xam-u-webinar-recordings\"><u>在这里</u></a><i>.</i></p>\n<table border=\"0\" cellspacing=\"0\" cellpadding=\"2\" width=\"600\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"482\" height=\"348\" src=\"https://msdnshared.blob.core.windows.net/media/2017/09/Charles-Petzold.jpg\"></td>\n<td valign=\"top\" width=\"450\"><b>查尔斯 Petzold</b>高级内容开发人员，Xamarin 大学，微软<p>Charles Petzold 一直与文档团队在 Xamarin 自 2014 年，主要集中于 Xamarin.Forms 和编写免费下载的书籍创建移动应用程序与 Xamarin.Forms。加盟 Xamarin，查尔斯写了几本书在 Windows 编程，以及计算机的概念和技术的两个独特探索： 代码： 隐藏语言的计算机软硬件及注明图灵： 导游通过艾伦图灵在可计算性和图灵机的历史论文。他经常过周末他在写一本书关于起源的模拟计算。网站： charlespetzold.com</p></td>\n</tr></tbody></table>"},{"Id":95,"Author":"Bing Team","Categories":"Bing blogs","CreateTime":"2017-09-07T00:37:15","Description":"<p>GeoJSON is a common file format used for storing spatial data as a JSON object and is easy to import and export in Bing Maps V8 using the GeoJSON module. This file format tends to be more compact then its XML equivalents. This results in a much smaller file size, making it ideal for transferring spatial data to web and mobile applications. These files typically use a <b>.js</b> or <b>.json </b>file extensions, however occasionally you may come across some files that use <b>.geojson</b>. The following is an example of a GeoJSON file containing the location of New York.</p>\n\n<pre>\n{\n    \"type\": \"FeatureCollection\",\n    \"features\": [\n      {\n          \"type\": \"Feature\",\n          \"geometry\": {\n              \"type\": \"Point\",\n              \"coordinates\": [-74.006393, 40.714172]\n          },\n          \"properties\": {\n              \"name\": \"New York\",\n              \"description\": \"New York\"\n          }\n      }\n    ]\n}\n</pre>\n\n<p>Additional information on this file format specification can be found <a href=\"http://geojson.org/geojson-spec.html\">here</a>.</p>\n\n<h3>Drag and Drop a GeoJSON file</h3>\n\n<p>From time to time I come across an interesting data set in GeoJSON format that I want to quickly view in Bing Maps. The Bing Maps API&rsquo;s make it easily read these files, but if I just want to quickly view the data I don&rsquo;t really want to write an app each time I want to view a GeoJSON file. With this in mind we will take a look at how to create a reusable app where we can simply drag and drop GeoJSON files onto the map and have them load.</p>\n\n<p>To accomplish this, the HTML5 FileReader and Drag &amp; Drop API&rsquo;s will be used. Good documentation on how to use these API&rsquo;s together can be found <a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/#toc-selecting-files-dnd\">here</a>. Our application will first need to load the map then the GeoJSON module. From there we will attach drag and drop events to the maps main DOM element. When one or more files are dropped onto the map we will loop through each of them, attempt to read them as a GeoJSON file and then add the data to the map.</p>\n\n<pre>\n&lt;!DOCTYPE html&gt;\n&lt;html&gt;\n&lt;head&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;meta charset=\"utf-8\" /&gt;\n    &lt;script type='text/javascript'&gt;\n    var map;\n\n    function GetMap() {\n        map = new Microsoft.Maps.Map('#myMap', {\n            credentials: 'Your Bing Maps Key',\n            zoom: 1\n        });\n\n        //Load the GeoJSON module.\n        Microsoft.Maps.loadModule('Microsoft.Maps.GeoJson', function () {\n\n            //Setup the drag &amp; drop listeners on the map.\n            var dropZone = document.getElementById('myMap');\n            dropZone.addEventListener('dragover', handleDragOver, false);\n            dropZone.addEventListener('drop', handleFileSelect, false);\n        });\n    }\n\n    function handleDragOver(evt) {\n        //Stop the browser from performing its default behavior when a file is dragged and dropped.\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = 'copy';\n    }\n\n    function handleFileSelect(evt) {\n        //Stop the browser from performing its default behavior when a file is dragged and dropped.\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        //Remove any existing data from the map.\n        map.entities.clear();\n\n        //The list of files that have been dragged and dropped onto the map.\n        var files = evt.dataTransfer.files; \n\n        //Keep track of the bounding box of all the data from all files dropped into the map.\n        var dataBounds = null;\n\n        //Loop through and attempt to read each file. \n        for (var i = 0; i &lt; files.length; i++) {\n            var reader = new FileReader();\n\n            reader.onload = function (e) {\n                try {\n                    var geoJsonText = e.target.result;\n\n                    //Attempt to parse the file as GeoJSON and add the shapes to the map.\n                    var shapes = Microsoft.Maps.GeoJson.read(geoJsonText);\n                    map.entities.push(shapes);\n                    \n                    //Calculate the bounding box of the data in the single file. \n                    var bounds = Microsoft.Maps.LocationRect.fromShapes(shapes);\n\n                    //If data is already loaded from another GeoJSON file, merge the bounding boxes together.\n                    if (dataBounds) {\n                        dataBounds = Microsoft.Maps.LocationRect.merge(dataBounds, bounds);\n                    } else {\n                        dataBounds = bounds;\n                    }\n\n                    //Update the map view to show the data.\n                    map.setView({ bounds: dataBounds, padding: 50 });\n                } catch (e) {\n                    alert('Unable to read file as GeoJSON.');\n                }\n            };\n\n            //Read the file as text.\n            reader.readAsText(files[i]);\n        }\n    }\n    &lt;/script&gt;\n    &lt;script type='text/javascript' src='https://www.bing.com/api/maps/mapcontrol?callback=GetMap' async defer&gt;&lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=\"myMap\" style=\"position:relative;width:800px;height:600px;\"&gt;&lt;/div&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</pre>\n\n<p>The following image shows the neighborhood boundaries of Los Angeles that came from a GeoJSON file that was downloaded from the <a href=\"http://boundaries.latimes.com/sets/\">Los Angeles Times Boundary API</a>.</p>\n\n<p><img alt=\"\" src=\"https://blogs.bing.com/BingBlogs/media/MapsBlog/2016/03/LATimesGeoJSON.png\"></p>\n\n<p align=\"center\"><a href=\"http://bingmapsv8samples.azurewebsites.net/#GeoJson%20Drag%20and%20Drop\">Try it now</a></p>\n\n<h3>Additional Resources</h3>\n\n<ul><li><a href=\"http://bingmapsv8samples.azurewebsites.net/\">Bing Maps V8 Code Samples</a></li>\n\t<li><a href=\"http://www.bing.com/api/maps/sdkrelease/mapcontrol/isdk\">Bing Maps V8 Interactive SDK</a></li>\n\t<li><a href=\"https://msdn.microsoft.com/en-us/library/mt712542.aspx\">Bing Maps V8 Documentation</a></li>\n</ul>","LastUpdateTime":"2017-09-07T00:37:15","Link":"https://blogs.bing.com/maps/2017-09/Drag-and-Drop-GeoJSON-files-onto-Bing-Maps-V8","MobileContent":null,"PublishId":0,"Status":1,"Title":"Drag and Drop GeoJSON files onto Bing Maps V8","Type":1,"TitleCn":"拖动和删除 GeoJSON 文件到 Bing 地图 V8","Content":"<p>GeoJSON 是一种常见的文件格式用于存储空间数据作为一个 JSON 对象，很容易导入和导出在 Bing 地图 V8 中使用 GeoJSON 模块。这种文件格式趋于更加紧凑然后 XML 的同类。这会导致很多较小文件大小，使它成为理想的将空间数据传输到 web 和移动应用程序。这些文件通常使用<b>.js</b>或<b>.json</b>的文件扩展名，但是偶尔你可能碰到一些使用<b>.geojson</b>的文件。以下是包含位置信息的纽约的 GeoJSON 文件的一个示例。</p>\n\n<pre>\n{\n    \"类型\":\"FeatureCollection\"\n    \"功能\": [\n      {\n          \"类型\":\"功能\"，\n          \"几何形状\": {\n              \"类型\":\"点\"\n              \"坐标\": [-74.006393，40.714172]\n          }，\n          \"属性\": {\n              \"名称\":\"纽约\"，\n              \"描述\":\"纽约\"\n          }\n      }\n    ]\n}\n</pre>\n\n<p>此文件格式规范的其他信息可以发现<a href=\"http://geojson.org/geojson-spec.html\">在这里</a>。</p>\n\n<h3>拖放式 GeoJSON 文件</h3>\n\n<p>次又一次我遇到一个有趣的数据集，在我想要快速查看在 Bing Maps 的 GeoJSON 格式。Bing 地图 API 使它很容易读取这些文件，但如果我只是想要快速查看数据我真的不想写一个应用程序每的次要查看 GeoJSON 文件。我们将看看如何创建一个可重用的应用程序，在那里我们可以简单地拖放到地图上的 GeoJSON 文件，让他们铭记这加载。</p>\n\n<p>要实现此目的，将使用 HTML5 FileReader 和拖放 API。可以找到好的文档关于如何使用这些 API 一起<a href=\"http://www.html5rocks.com/en/tutorials/file/dndfiles/#toc-selecting-files-dnd\">在这里</a>。首先，我们的应用程序将需要加载地图然后 GeoJSON 模块。从那里我们将附加拖和放到地图主要 DOM 元素事件。当一个或多个文件拖到我们将遍历每个地图时，尝试读他们作为一个 GeoJSON 文件，然后将数据添加到地图。</p>\n\n<pre>\n&lt; ！DOCTYPE html &gt;\n&lt; html &gt;\n&lt; 头 &gt;\n    &lt; 标题 &gt;&lt; / 标题 &gt;\n    &lt; meta charset =\"utf-8\"/ &gt;\n    &lt; 脚本类型 =' 文本/javascript ' &gt;\n    var 地图;\n\n    功能 GetMap() {\n        地图 = 新 Microsoft.Maps.Map ('#myMap'，{\n            凭据: ' 你必应地图的钥匙 '，\n            放大： 1\n        });\n\n        GeoJSON 模块加载。\n        Microsoft.Maps.loadModule ('Microsoft.Maps.GeoJson'，函数 （） {\n\n            //Setup 拖和放在地图上的监听器。\n            var dropZone = document.getElementById('myMap');\n            dropZone.addEventListener （'dragover'，handleDragOver，false）;\n            dropZone.addEventListener （'放下'，handleFileSelect，false）;\n        });\n    }\n\n    功能 handleDragOver(evt) {\n        //Stop 浏览器从执行它的默认行为，当一个文件拖放式。\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        evt.dataTransfer.dropEffect = '复制';\n    }\n\n    功能 handleFileSelect(evt) {\n        //Stop 浏览器从执行它的默认行为，当一个文件拖放式。\n        evt.stopPropagation();\n        evt.preventDefault();\n\n        从映射中移除任何现有的数据。\n        map.entities.clear();\n\n        已拖动和放置到地图上的文件的列表。\n        var 文件 = evt.dataTransfer.files; \n\n        跟踪的定界框的跌入到映射中的所有文件的所有数据。\n        var dataBounds = null;\n\n        循环遍历，并尝试读取每个文件。 \n        为 (var 我 = 0; 我 &lt; files.length; i + +) {\n            var 读者 = 新 FileReader();\n\n            reader.onload = 函数 (e) {\n                试 {\n                    var geoJsonText = e.target.result;\n\n                    尝试解析为 GeoJSON 文件，并将形状添加到地图。\n                    var 形状 = Microsoft.Maps.GeoJson.read(geoJsonText);\n                    map.entities.push(shapes);\n                    \n                    计算单文件中的数据的边界框。 \n                    var 界限 = Microsoft.Maps.LocationRect.fromShapes(shapes);\n\n                    如果从另一个 GeoJSON 文件已经加载数据，则将合并在一起的外框。\n                    如果 (dataBounds) {\n                        dataBounds = Microsoft.Maps.LocationRect.merge （dataBounds，界限）;\n                    } 其他 {\n                        dataBounds = 界限;\n                    }\n\n                    更新地图视图来显示数据。\n                    map.setView ({界限： dataBounds，填充： 50});\n                }赶上 (e) {\n                    警报 (' 无法读取文件作为 GeoJSON.');\n                }\n            };\n\n            读文件作为文本。\n            reader.readAsText(files[i]);\n        }\n    }\n    &lt; / 脚本 &gt;\n    &lt; 脚本类型 =' 文本/javascript ' src = 'https://www.bing.com/api/maps/mapcontrol?callback=GetMap' 异步推迟 &gt;&lt; / 脚本 &gt;\n&lt; / 头 &gt;\n&lt; 身体 &gt;\n    &lt; div id =\"网\"风格 =\"位置：相对; 宽度： 800px; 高度： 600px;\"&gt;&lt; / div &gt;\n&lt; / 身体 &gt;\n&lt; / html &gt;\n</pre>\n\n<p>下图显示了来自 GeoJSON 下载文件，从<a href=\"http://boundaries.latimes.com/sets/\">洛杉矶时报边界 API</a>的洛杉矶的邻域边界。</p>\n\n<p><img alt=\"\" src=\"https://blogs.bing.com/BingBlogs/media/MapsBlog/2016/03/LATimesGeoJSON.png\"></p>\n\n<p align=\"center\"><a href=\"http://bingmapsv8samples.azurewebsites.net/#GeoJson%20Drag%20and%20Drop\">现在试一试</a></p>\n\n<h3>更多的资源</h3>\n\n<ul><li><a href=\"http://bingmapsv8samples.azurewebsites.net/\">必应地图 v8 引擎代码示例</a></li>\n\t<li><a href=\"http://www.bing.com/api/maps/sdkrelease/mapcontrol/isdk\">必应地图 V8 交互式 SDK</a></li>\n\t<li><a href=\"https://msdn.microsoft.com/en-us/library/mt712542.aspx\">必应地图的 v8 引擎的文档</a></li>\n</ul>"},{"Id":94,"Author":"Shashank Bansal [MSFT]1","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-09-04T16:01:02","Description":"When you are configuring continuous deployment pipelines for your team, it becomes essential to keep the team members informed about the progress of releases and the related action items. We had started preview of the release notifications feature that integrates the configuration of release related notifications with the default notification settings experience in Visual Studio... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/\"> Read More</a>","LastUpdateTime":"2017-09-04T16:01:02","Link":"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Managing Release Notifications","Type":1,"TitleCn":"管理发布通知","Content":"当你正在为你的团队配置连续部署管道时，就必须在保持团队成员了解发布和相关的行动项目的进展。我们已开始释放通知功能，整合的发布配置预览相关通知与在 Visual Studio 中的默认通知设置经验......<a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/04/managing-release-notifications/\">阅读更多</a>"},{"Id":93,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-09-01T20:55:24","Description":"MSTest V2 has crossed 1 Million downloads. Congratulations! Hats off to the community! MSTest V2 is seeing robust usage. We ourselves use it heavily. If you are still using an earlier version of the MSTest framework, we encourage you to upgrade. We have looked at the uptake of MSTest V2 from the perspective of two... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/\"> Read More</a>","LastUpdateTime":"2017-09-01T20:55:24","Link":"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Upgrade to MSTest V2!","Type":1,"TitleCn":"升级到 MSTest V2 ！","Content":"MSTest V2 已经越过了 100 万的下载。祝贺你 ！向社区脱帽致敬 ！MSTest V2 看到鲁棒的用法。我们大量使用了它。如果你还在使用早期版本的 MSTest 框架，我们鼓励您进行升级。我们有从两个角度来看 MSTest V2 的吸收......<a href=\"https://blogs.msdn.microsoft.com/devops/2017/09/01/upgrade-to-mstest-v2/\">阅读更多</a>"},{"Id":92,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-09-01T00:00:43","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%20for%20Mac%20version%207.2%20beta%20preview%2C%20and%20hands-on%20with%20containers%20and%20serverless\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>This week we released the second alpha of Visual Studio for Mac version 7.2, as well as some hands-on labs to try out some of the new features.</p>\n<h2>Visual Studio for Mac 7.2 Alpha</h2>\n<p>The alpha version of our next Visual Studio for Mac release includes new features such as:</p>\n<ul><li><b>Docker Containers</b> &ndash; Join the microservices revolution, by testing and deploying your ASP.NET Core web apps to Docker containers. Visual Studio for Mac&rsquo;s Docker support lets you easily deploy to a container as well as debug projects across multiple containers. Check out the hands-on-lab below to get started!</li>\n<li><b>Xamarin Live Player</b> &ndash; Get started building Xamarin mobile applications in minutes! Visit <a href=\"https://xamarin.com/live\">xamarin.com/live</a> to learn how easy it is to try out mobile app development with your existing iOS or Android device and Visual Studio for Mac.</li>\n<li><b>Azure Functions</b> &ndash; Build and deploy serverless code in the cloud. Functions can be accessed by mobile or server apps, scheduled or triggered, and you only pay for the time they run. Follow the hands-on-lab below to write your first Azure Function.</li>\n<li><b>IoT projects</b> &ndash; Build, test, and deploy apps for Internet of Things devices. You can write IoT apps using C#, and deploy them to a Raspberry Pi, following our <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/IoT/Getting-Started\">simple instructions</a>.</li>\n</ul><p>To try out these features, <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">download Visual Studio for Mac</a> and switch to the <a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">alpha channel</a> in the IDE.</p>\n<h2>More Hands-On Labs</h2>\n<p>Our latest hands-on labs for <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio for Mac</a> will help you get started with new features available in the 7.2 alpha. Visit the <a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac labs GitHub repo</a> for past weeks&rsquo; projects using the Unity 3D game engine, Internet of Things devices, ASP.NET Core web sites, and Xamarin for mobile app development.</p>\n<p>Today we&rsquo;ve published two additional labs using: Docker Container support and Azure Functions projects.</p>\n<h2>Lab 5: Deploying ASP.NET Core to a Docker Container</h2>\n<p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Web/Getting-Started\">Lab 3</a> demonstrated how to build, test, and debug an ASP.NET Core website on your Mac. This lab will show you how to run and debug an ASP.NET web site and web API in Docker containers, by completing these 4 tasks:</p>\n<ol><li>Create a Docker-enabled ASP.NET Core web site</li>\n<li>Create a Docker-enabled ASP.NET Core web API</li>\n<li>Integrate two container apps</li>\n<li>Debug multi-container solutions</li>\n</ol><p>Follow the <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Docker/Getting-Started\">complete instructions</a> to set up the two ASP.NET Core projects, make them work together, and debug them simultaneously.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" rel=\"noopener noreferrer\"><img title=\"Deploying ASP.NET Core to a Docker Container\" alt=\"Deploying ASP.NET Core to a Docker Container\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" width=\"700\" height=\"522\"></a></p>\n<h2>Lab 6: Serverless computing with Azure Functions</h2>\n<p>&ldquo;Serverless computing&rdquo; is a new type of cloud feature where you can host a &ldquo;function&rdquo; without having to worry about setting up a server, or even an application, to run it in. Simply build and deploy your Azure Function, and it will be automatically hosted and scaled as required. You only pay for the time the function is running, it can respond to application requests, you can set up triggers, and it can access many different Azure services.</p>\n<p>To build your first Azure Function and get started with serverless computing, follow these 5 steps:</p>\n<ol><li>Create an Azure Functions project</li>\n<li>Create an Azure Storage account</li>\n<li>Create and Debug an Azure Function</li>\n<li>Work with function.json</li>\n<li>Work with Azure Tables</li>\n</ol><p>The <a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Azure-Functions/Getting-Started\">hands-on-lab instructions</a> will walk you through creating the Azure Functions project in Visual Studio for Mac, deploying it to Azure, and persisting data with Azure Tables. This feature is so new it is only available in the <a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">Alpha channel</a> release of Visual Studio for Mac. You&rsquo;ll need to install an extension for Azure Functions, which the instructions will help you with.</p>\n<h2>Get Started</h2>\n<p><a href=\"https://www.visualstudio.com/downloads/\">Download Visual Studio for Mac</a> today, and visit the <a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac labs repo on GitHub</a>. Both this week&rsquo;s labs just scratch the surface of the capabilities being demonstrated: Docker support enables new testing and deployment options, and Azure Functions opens up a new, easier way to interact with powerful Azure services.</p>\n<p>With the Visual Studio Community edition it is easy and free to get started. <a href=\"https://docs.microsoft.com/visualstudio/mac/\">Check out the docs</a> for more in-depth information on Visual Studio for Mac, and leave a comment below to suggest additional hands-on-labs you&rsquo;d like to see.</p>\n<table width=\"600\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td valign=\"top\"><img width=\"299\" height=\"301\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Craig-Dunn.jpg\"></td>\n<td valign=\"top\"><strong>Craig Dunn</strong>, Principal Program Manager<br><a target=\"_blank\" href=\"http://@conceptdev/\" rel=\"noopener noreferrer\">@conceptdev</a>\n<p>Craig works on the Mobile Developer Tools documentation team, where he enjoys writing cross-platform code for iOS, Android, Mac, and Windows platforms with Visual Studio and Xamarin.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-09-01T00:00:43","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/31/hands-on-with-visual-studio-for-mac-containers-serverless-code-in-the-cloud/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Getting hands on with Visual Studio for Mac, containers, and serverless code in the cloud","Type":1,"TitleCn":"让手与 Visual Studio 为 Mac、 容器和无服务器代码在云中","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%20for%20Mac%20version%207.2%20beta%20preview%2C%20and%20hands-on%20with%20containers%20and%20serverless\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>本周我们发布 Visual Studio 为 Mac 版本 7.2，第二个字母，以及一些动手实验来尝试了一些新的功能。</p>\n<h2>视觉工作室为 Mac 7.2 阿尔法的</h2>\n<p>我们下一个 Visual Studio 为 Mac 版本的 alpha 版本包含以下新功能：</p>\n<ul><li><b>码头集装箱</b>— — 联接 microservices 革命，通过测试和将 ASP.NET 核心 web 应用程序部署到码头集装箱。Mac 的码头工人支持 visual Studio 可以让你轻松地部署到容器以及调试项目跨多个容器。查阅实操-上-实验室下面即可开始 ！</li>\n<li><b>Xamarin 活玩家</b>— — 开始在几分钟内生成 Xamarin 移动应用程序 ！访问<a href=\"https://xamarin.com/live\">xamarin.com/live</a>了解到它是多么容易尝试与您现有的 iOS 或 Android 设备和 Visual Studio mac 的移动应用程序开发</li>\n<li><b>Azure 功能</b>— — 构建和部署在云无服务器代码。函数可以通过手机或服务器应用程序访问、 预定或触发，和你只付他们运行的时间。按照掌握-上-实验室下面写你第一次的 Azure 函数。</li>\n<li><b>物联网项目</b>— — 构建、 测试和部署应用程序对于物联网的设备。你可以写物联网应用程序在使用 C# 中，并将它们部署到树莓派，我们<a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/IoT/Getting-Started\">简单的指令</a>。</li>\n</ul><p>尝试这些功能， <a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio 为 Mac 下载</a>并切换到<a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">alpha 通道</a>在 IDE 中。</p>\n<h2>更多动手实验室</h2>\n<p><a href=\"https://www.visualstudio.com/vs/visual-studio-mac/\">Visual Studio 为 Mac</a>我们最新的动手实验将帮助您开始使用新功能可用在 7.2 阿尔法。<a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac 实验室 GitHub 回购</a>过去几周的项目，并为移动应用程序开发应用统一的 3D 游戏引擎、 物联网设备、 ASP.NET 核心网站和 Xamarin 的访问。</p>\n<p>今天我们已经发表了两个额外的实验室使用： 码头容器支持和 Azure 功能项目。</p>\n<h2>实验室 5： 部署 ASP.NET 核心到码头集装箱</h2>\n<p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Web/Getting-Started\">实验室 3</a>展示了如何构建、 测试和调试 ASP.NET 核心网站上您的 mac。这个实验室将向你展示如何运行和调试 ASP.NET web 站点和 web API 在码头容器中，通过完成这些 4 项任务：</p>\n<ol><li>创建一个码头启用 ASP.NET 核心 web 站点</li>\n<li>创建一个码头启用 ASP.NET 核心网络 API</li>\n<li>整合两个容器应用程序</li>\n<li>调试多个容器解决方案</li>\n</ol><p>按照<a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Docker/Getting-Started\">说明完成</a>设置了两个 ASP.NET 核心项目，让他们一起工作，和他们同时调试。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" rel=\"noopener noreferrer\"><img title=\"Deploying ASP.NET Core to a Docker Container\" alt=\"Deploying ASP.NET Core to a Docker Container\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Deploying-ASP.NET-Core-to-a-Docker-Container.png\" width=\"700\" height=\"522\"></a></p>\n<h2>实验室 6： 无服务器计算与 Azure 功能</h2>\n<p>\"无服务器计算\"是一种新型的在那里你可以承载\"函数\"的云功能而无需担心设置的服务器，或甚至是应用程序，在运行它。简单地生成和部署您的 Azure 函数，它将自动主办和缩放的要求。你只需支付在函数运行一次，它可以响应到应用程序的请求，您可以设置触发器，并且它可以访问许多不同的 Azure 服务。</p>\n<p>若要生成您第一次的 Azure 功能和入门无服务器计算，请按照这 5 个步骤：</p>\n<ol><li>创建 Azure 功能项目</li>\n<li>创建一个 Azure 存储帐户</li>\n<li>创建和调试蔚蓝的功能</li>\n<li>工作与 function.json</li>\n<li>工作与 Azure 表</li>\n</ol><p><a href=\"https://github.com/Microsoft/vs4mac-labs/tree/master/Azure-Functions/Getting-Started\">掌握上实验室指示</a>将引导您完成为 Mac 在 Visual Studio 中创建 Azure 功能项目，将其部署到 Azure，和持久化数据与 Azure 表。此功能是如此之新，它是唯一可在 mac 的 Visual Studio<a href=\"https://docs.microsoft.com/en-us/visualstudio/mac/update#changing-the-updater-channel\">阿尔法频道</a>发布的版本你需要为 Azure 功能，说明将帮助您进行安装的扩展。</p>\n<h2>入门</h2>\n<p>今天，<a href=\"https://www.visualstudio.com/downloads/\">下载 Visual Studio 为 Mac</a>和访问<a href=\"https://github.com/Microsoft/vs4mac-labs\">VS4Mac 实验室回购在 GitHub 上</a>。这周的实验室只是划伤表面所演示的功能： 码头工人支持使新的测试和部署选项，和 Azure 功能开辟了新的、 更容易的途径，与强大的 Azure 服务进行交互。</p>\n<p>与 Visual Studio 社区版很容易和免费入门。<a href=\"https://docs.microsoft.com/visualstudio/mac/\">签出文档</a>的 Mac 和下面的评论去建议额外掌握上实验室对 Visual Studio 更深入信息你想看到。</p>\n<table width=\"600\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td valign=\"top\"><img width=\"299\" height=\"301\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Craig-Dunn.jpg\"></td>\n<td valign=\"top\"><strong>克雷格 · 邓恩</strong>，首席项目经理<br><a target=\"_blank\" href=\"http://@conceptdev/\" rel=\"noopener noreferrer\">@conceptdev</a>\n<p>克雷格在哪里他喜欢写跨平台代码为 iOS、 Android、 Mac 和 Windows 平台与 Visual Studio 和 Xamarin 的移动开发人员工具文档团队工作。</p></td>\n</tr></tbody></table>"},{"Id":91,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-31T00:30:22","Description":"<p>At //BUILD 2017, we shipped an update to the <a href=\"http://aka.ms/CD4VS\">Continuous Delivery Tools for Visual Studio</a>. This update has support for configuring a Continuous Integration and Continuous Delivery pipeline for <a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a> projects with <a href=\"https://www.docker.com/what-container\">container support</a> to an existing <a href=\"https://azure.microsoft.com/en-us/services/service-fabric/\">Azure Service Fabric cluster</a> directly from <a href=\"https://www.visualstudio.com/downloads/\">Visual Studio 2017</a>.</p>\n<p>To configure continuous delivery to a Service Fabric cluster, first you need <a href=\"https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-tutorial-create-cluster-azure-ps\">to create a preview version Service Fabric cluster</a>. Start by creating a security certificate to secure administrative access to the cluster. Open a PowerShell console, login to Azure and select the Azure subscription that you want to deploy the cluster in then create and encrypt a password for the certificate used by Service Fabric to secure access to your cluster by running the following commands:</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>Login-AzureRmAccount</span></span></span><span></span>\n\n<span><span><span>Select-AzureRmSubscription</span></span></span><span><span><span> -SubscriptionId</span></span><span> &lt;</span><span><span>subscription-id</span></span></span><span><span>&gt;</span></span>\n\n<span><span><span>$pwd</span></span></span><span><span> = </span><span><span>\"&lt;your password&gt;\"</span></span><span> | </span><span><span>ConvertTo-SecureString</span></span></span><span><span><span> -AsPlainText -Force</span></span></span><span></span></pre>\n</div>\n<p><span></span></p>\n<p>Keep your PowerShell console running and download the <a href=\"https://aka.ms/securepreviewonelineclustertemplate\">Azure Resource Management Template for Service Fabric</a> azuredeploy.json and the sample azuredeploy.parameters.json locally. Edit the parameters file to name, size and secure your cluster as well as set its location. Ensure that the <i>clusterCodeVersion</i> is set to the preview version <b>255.255.5718.255</b>. Once your configuration files are ready, create the cluster by running the following commands:</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>New-AzureRmServiceFabricCluster</span></span></span><span></span>\n\n<span><span> </span></span><span><span><span>-TemplateFile</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span>azuredeploy.json `</span></span>\n\n<span><span> </span></span><span><span><span>-ParameterFile</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span>azuredeploy.parameters.json `</span></span>\n\n<span><span> </span></span><span><span><span>-CertificateOutputFolder</span></span></span><span><span> C:<span>&lt;your_working_folder&gt;</span> `</span></span>\n\n<span><span><span> -CertificatePassword</span></span></span><span><span> <span>$pwd</span> `</span></span>\n\n<span><span><span> -CertificateSubjectName </span></span></span><span><span><span>\"<span>&lt;your_cluster_name&gt;</span>.<span>&lt;cluster_location&gt;</span>.cloudapp.azure.com\"</span></span></span><span><span> `</span></span>\n\n<span><span> </span></span><span><span><span>-ResourceGroupName</span></span></span><span><span> </span><span><span>&lt;your_cluster_RGname&gt;</span></span></span></pre>\n</div>\n<p><span></span></p>\n<p>Once the Service Fabric creation is completed, the command will output cluster information to the console window and copy the security certificate to your working folder. Double click on the certificate to import it to the current user certificate store. Remember to <b>mark the certificate key as exportable</b> in the private key protection step and complete the import wizard. This will allow the Configure Continuous Delivery experience to export the key while configuring your release definition.</p>\n<p>With a preview version of the Service Fabric Cluster, you can now configure Continuous Delivery from Visual Studio 2017 with the latest version of the Continuous Delivery Tools for Visual Studio extension. Create or open an existing solution with an ASP.NET or ASP.NET Core project. Add Docker support to the project and ensure that the solution is under version control on VSTS or GitHub. Right click on the solution in Solution Explorer and select Configure Continuous Delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" rel=\"noopener noreferrer\"><img title=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" alt=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" width=\"627\" height=\"332\"></a></p>\n<p>With Service Fabric Cluster as the Target Host type, select your newly created Serviced Fabric cluster to act as a target for continuous delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" width=\"630\" height=\"390\"></a></p>\n<p>Visual Studio will automatically pick up the cluster certificate from your user certificate store and verify the thumbprint. Enter the password for the certificate and select your Azure Container Registry then click OK. Once the configure continuous delivery completes, you will have a configured build and release pipeline for your project to your new Service Fabric Cluster.</p>\n<p>To expose your web service outside its container you need to enable port mapping for your container by modifying the docker-compose.yml file for that project to enable the port mapping for your service. If you have multiple services, you need to do that for each of them.</p>\n<pre><span><code>version: <span>'3'</span>\n\nservices:\n  &lt;your_service_name&gt;:\n    image: <span>&lt;your_image_name&gt;</span>\n    ports:\n   <span> -\t&ldquo;80:80&rdquo;</span>\n    build:\n      context: <span>./&lt;your_service_context&gt;</span>\n      dockerfile: <span>Dockerfile\n</span></code></span></pre>\n<p>To expose these services outside the Service Fabric Cluster, you need to configure your load balancer to do so for each service port. By default, the current sample ARM template and parameter files load balance traffic on port 80 and 8081 for the cluster. If you need to configure other ports you can do so by adding new entries in your ARM template</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"type\": \"int\",\n      \"defaultValue\": 80,\n      \"metadata\": {\n        \"description\": \"Input endpoint1 for the application to use. Replace it with what your application uses\"\n      }\n</pre>\n<p>and modifying the values in your parameters file.</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"value\": 80\n    },\n    \"loadBalancedAppPort2\": {\n      \"value\": 8081\n    },\n</pre>\n<h2>Please keep the feedback coming!</h2>\n<p>Thank you to everyone who has reached out and shared feedback and ideas so far. We&rsquo;re always looking for feedback on where to take this <a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs extension</a> next. There&rsquo;s a <a>Slack channel</a> and a team alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>Ahmed Metwally</strong>, Senior PM, Visual Studio<br><a href=\"https://twitter.com/cd4vs\">@cd4vs</a>\n<p>Ahmed is a Program Manager on the Visual Studio Platform team focused on improving team collaboration and application lifecycle management integration.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-31T00:30:22","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/30/create-a-cicd-pipeline-to-azure-service-fabric/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Create a CI/CD pipeline to Azure Service Fabric","Type":1,"TitleCn":"创建到 Azure 服务织物的 CI/CD 管道","Content":"<p>在 //BUILD 2017年，我们运到<a href=\"http://aka.ms/CD4VS\">Visual Studio 连续交付工具</a>的更新。此更新已支持配置<a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a>工程的持续集成和持续交付的管道与<a href=\"https://www.docker.com/what-container\">容器支持</a>到现有的<a href=\"https://azure.microsoft.com/en-us/services/service-fabric/\">Azure 服务织物群集</a>直接从<a href=\"https://www.visualstudio.com/downloads/\">视觉工作室 2017</a>.</p>\n<p>配置连续传递到服务织物群集，您首先需要<a href=\"https://docs.microsoft.com/en-us/azure/service-fabric/service-fabric-tutorial-create-cluster-azure-ps\">创建一个预览版本服务织物的群集</a>。首先创建一个安全证书，以确保对群集的管理访问。打开 PowerShell 控制台，登录到 Azure，并选择您想要部署在群集然后创建加密证书服务织物用于通过运行以下命令来获得您的群集的密码蔚蓝订阅：</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>登录 AzureRmAccount</span></span></span><span></span>\n\n<span><span><span>选择 AzureRmSubscription</span></span></span> <span> <span><span> -SubscriptionId</span></span> <span> &lt;</span><span><span>订阅 id</span></span></span><span><span>&gt;</span></span>\n\n<span><span><span>$pwd</span></span></span><span><span></span><span><span>\"&lt; 密码 &gt;\"</span></span><span><span><span></span></span></span>信仰 SecureString</span> <span><span><span> -AsPlainText-力</span></span></span><span></span></pre>\n</div>\n<p><span></span></p>\n<p>保持你的 PowerShell 控制台运行并下载<a href=\"https://aka.ms/securepreviewonelineclustertemplate\">服务织物 Azure 资源管理模板</a>azuredeploy.json 和样品 azuredeploy.parameters.json 本地。编辑的参数文件名称、 大小和确保您的群集，以及设置其位置。确保将<i>clusterCodeVersion</i>设置为预览版本<b>255.255.5718.255</b>。一旦您的配置文件已准备就绪，创建群集通过运行以下命令：</p>\n<p><span></span></p>\n<div>\n<pre><span><span><span>新 AzureRmServiceFabricCluster</span></span></span><span></span>\n\n<span><span></span></span><span><span><span>-TemplateFile</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span>azuredeploy.json '</span></span>\n\n<span><span></span></span><span><span><span>-ParameterFile</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span>azuredeploy.parameters.json '</span></span>\n\n<span><span></span></span><span><span><span>-CertificateOutputFolder</span></span></span> <span><span> c:<span>&lt; your_working_folder &gt;</span> '</span></span>\n\n<span><span><span> -CertificatePassword</span></span></span><span><span><span>$pwd</span>'</span></span>\n\n<span><span><span></span></span></span><span><span><span>\"<span>&lt; your_cluster_name &gt;</span>。<span>&lt; cluster_location &gt;</span>.cloudapp.azure.com\"</span></span></span> <span><span> '</span></span>\n\n<span><span></span></span><span><span><span>-ResourceGroupName</span></span></span><span><span><span><span></span></span></span>&lt; your_cluster_RGname &gt;</span></pre>\n</div>\n<p><span></span></p>\n<p>一旦服务织物创建完成后，该命令将群集信息输出到控制台窗口，并将安全证书复制到您的工作文件夹。双击要导入到当前用户证书存储区的证书。记得到<b>标记为可导出的证书密钥</b>的私钥保护一步和完成导入向导。这将允许配置持续交付经验来配置您的发布定义时导出的密钥。</p>\n<p>与群集服务的织物预览版本，现在您可以配置从 Visual Studio 2017 年开始持续交付与最新版本的 Visual Studio 扩展连续交付工具。创建或打开一个现有的解决方案与 ASP.NET 或 ASP.NET 核心的项目。向项目中添加码头工人支持并确保解决方案在 VSTS 或 GitHub 上的版本控制之下。右键单击解决方案资源管理器中的解决方案并选择配置持续交付。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" rel=\"noopener noreferrer\"><img title=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" alt=\"Select Configure Continuous Delivery in Solution Explorer Cropped\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Select-Configure-Continuous-Delivery-in-Solution-Explorer-Cropped.png\" width=\"627\" height=\"332\"></a></p>\n<p>与群集服务的织物作为目标主机类型，请选择您新创建的服务织物群集作为持续交付的目标。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-Azure-Service-Fabric-Configure-Continuous-Delivery-Dialog.png\" width=\"630\" height=\"390\"></a></p>\n<p>Visual Studio 将自动拿起您的用户证书存储区中的群集证书和验证指纹。输入证书的密码并选择您的 Azure 容器注册表然后单击确定。一旦配置连续传递完成后，你将有一个已配置的生成和释放管道为您的项目给你新面料群集服务的。</p>\n<p>使您的 web 服务在其容器外，您需要通过修改该项目，以使您的服务的端口映射的码头工人 compose.yml 文件来启用端口映射为您的容器。如果您有多个服务，您需要为他们每个人都这样做。</p>\n<pre><span><code><span>'3'</span>\n\nservices:\n  &lt;your_service_name&gt;:\n    <span>&lt;your_image_name&gt;</span>\n    ports:\n   <span> -\t&ldquo;80:80&rdquo;</span>\n    build:\n      <span>./&lt;your_service_context&gt;</span>\n      <span>Dockerfile\n</span></code></span></pre>\n<p>若要公开这些织物群集服务之外的服务，您需要配置您的负载平衡器，这样做的每个服务端口。默认情况下，当前的样品臂模板和参数文件负载平衡通信量在端口 80 和 8081 为群集上。如果您需要配置其他端口，你可以在你手臂模板中添加新条目</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"类型\":\"int\"\n      \"默认值\": 80，\n      \"元数据\": {\n        \"说明\":\"输入 endpoint1，应用程序才能使用。它替换为您的应用程序使用\"\n      }\n</pre>\n<p>和修改您的参数文件中的值。</p>\n<pre>\"loadBalancedAppPort1\": {\n      \"价值\": 80\n    }，\n    \"loadBalancedAppPort2\": {\n      \"价值\": 8081\n    }，\n</pre>\n<h2>请保持反馈来 ！</h2>\n<p>谢谢大家有伸出和共享反馈和想法到目前为止。我们一直在寻找反馈在哪里下, 一步采取此<a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs 扩展名</a>。有一种<a>松弛的通道</a>和团队别名<a>vsdevops@microsoft.com</a>在那里你可以伸出，团队和其他人在社区分享关于这一主题的想法。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>艾哈迈德 Metwally</strong>，高级 PM 视觉工作室<br><a href=\"https://twitter.com/cd4vs\">@cd4vs</a>\n<p>艾哈迈德是在 Visual Studio 平台团队专注于改善团队协作和应用程序生命周期管理集成的项目经理。</p></td>\n</tr></tbody></table>"},{"Id":81,"Author":"Andrew Pardoe [MSFT]","Categories":"Visual C++ Team Blog","CreateTime":"2017-08-26T07:50:51","Description":"<p>A new update of C++/WinRT is available on <a href=\"https://github.com/microsoft/cppwinrt\">GitHub</a>! C++/WinRT is a standard C++ language projection for the Windows Runtime, implemented solely in header files.</p>\n<p>The C++/WinRT team has been quiet since their announcements at <a href=\"https://cppcon.org/\">CppCon</a> 2016. They&rsquo;ve made a lot of progress in this update, leading up to the first public release of the CppWinRT compiler. You can read the <a href=\"https://moderncpp.com/2017/08/25/cppwinrt-2017/\">announcement on the ModernCpp website</a>.</p>\n<p>We on the Visual C++ team find C++/WinRT to be one of the best test cases for our compiler as <a href=\"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/c-standards-conformance-from-microsoft/\">MSVC approaches conformance with the C++ Standard</a>. As you try new, standards-conforming features out in MSVC, please be sure to give us your feedback. We can be reached via the comments below, via email (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) and you can provide feedback via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Help &gt; Report A Problem in the product</a>, or via <a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">Developer Community</a>. You can also find us on Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) and Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>).</p>","LastUpdateTime":"2017-08-26T07:50:51","Link":"https://blogs.msdn.microsoft.com/vcblog/2017/08/25/a-new-cwinrt-update-is-available/","MobileContent":null,"PublishId":0,"Status":1,"Title":"A new C++/WinRT update is available","Type":1,"TitleCn":"新的 C + + /cli WinRT 更新是可用","Content":"<p>新更新的 C + + /cli WinRT 是可用在<a href=\"https://github.com/microsoft/cppwinrt\">GitHub</a>上 ！C + + /cli WinRT 是一个标准的 c + + 语言投影为 Windows 运行时，只在头文件中实现。</p>\n<p>C + + /cli WinRT 团队安静以来，他们在<a href=\"https://cppcon.org/\">CppCon</a> 2016 的公告。他们在此更新取得很大的进步，导致第一次公开发布的 CppWinRT 编译器。你可以阅读<a href=\"https://moderncpp.com/2017/08/25/cppwinrt-2017/\">在 ModernCpp 网站上的公告</a>。</p>\n<p>我们在 Visual c + + 团队找到 C + + / WinRT 是我们作为<a href=\"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/c-standards-conformance-from-microsoft/\">MSVC 方法符合 c + + 标准</a>的编译器最佳测试用例之一。当你在 MSVC 尝试新的、 符合标准的特点，请务必给我们您的反馈意见。我们可以通过下面，通过电子邮件 (<a href=\"mailto:visualcpp@microsoft.com\">visualcpp@microsoft.com</a>) 的评论，你可以提供反馈通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">帮助 &gt; 报告一个问题在产品</a>，或通过<a href=\"https://developercommunity.visualstudio.com/topics/C%2B%2B.html\">开发者社区</a>。你也可以找到我们在 Twitter (<a href=\"https://twitter.com/visualc\">@VisualC</a>) 和 Facebook (<a href=\"https://www.facebook.com/msftvisualcpp\">msftvisualcpp</a>) 上。</p>"},{"Id":89,"Author":"Immo Landwerth [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-26T05:00:11","Description":"<p>Today, we<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">released the first Preview of Visual Studio 2017 version 15.4</a>. This includes an update to the UWP tooling that supports .NET Standard 2.0. In this post, I&rsquo;ll outline what this means for UWP development with .NET.</p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#prerequisites\"></a>Prerequisites</h2>\n<p>In order to use .NET Standard 2.0 in UWP, you need to target Fall Creators Update (FCU) as the minimum version of your UWP project. That&rsquo;s because .NET Standard 2.0 contains many APIs that require FCU to make them work in the context of the UWP execution environment, specifically AppContainer.</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\" alt=\"\" width=\"869\" height=\"354\"></a></p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#whats-new-with-net-standard-20\"></a>What&rsquo;s new with .NET Standard 2.0?</h2>\n<p>.NET Standard is a specification of APIs that all .NET implementations have to implement. UWP is now adding support for .NET Standard 2.0.</p>\n<p>The key advantage of<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET Standard 2.0</a><span>&nbsp;</span>is that it makes .NET implementations of .NET Standard much more similar to .NET Framework. With .NET Standard 2.0,<span>&nbsp;</span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">about 20,000 more APIs</a><span>&nbsp;</span>become available compared to .NET Standard 1.6. The vast majority of them are existing .NET Framework APIs, which includes missing reflection APIs, non-generic collections,<span>&nbsp;</span><code>DataSet</code>, binary serialization, XML Schema, and many more. For a full list, take a look at the<span>&nbsp;</span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">diff between .NET Standard 2.0 and .NET Standard 1.6</a>.</p>\n<p>This makes it much easier to port existing .NET Framework code to UWP. This includes both, copy &amp; pasting existing code, but also extends to referencing existing .NET Framework binaries, via the compatibility mode. Here is an example of using<span>&nbsp;</span><code>DataSet</code><span>&nbsp;</span>inside a UWP application:</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\" alt=\"\" width=\"2155\" height=\"1340\"></a></p>\n<p>For more details, check out my<span>&nbsp;</span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">blog post on .NET Standard 2.0</a>.</p>\n<p></p>\n<h2>Summary</h2>\n<p><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">Visual Studio 2017 version 15.4 Preview 1</a><span>&nbsp;</span>adds support for .NET Standard 2.0 in UWP projects that require Fall Creators Update (FCU). Please give it a spin and tell us what you think!</p>","LastUpdateTime":"2017-08-26T05:00:11","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/uwp-net-standard-2-0-preview/","MobileContent":null,"PublishId":0,"Status":1,"Title":"UWP &#038; .NET Standard 2.0: A preview is now available!","Type":1,"TitleCn":"UWP &.NET 标准 2.0: 预览是现在可用 ！","Content":"<p>今天，我们<span></span><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">发布第一个预览的视觉工作室 2017 15.4 版本</a>。这包括对支持.NET 标准 2.0 UWP 工具的更新。在这篇文章，我将概述这对.NET UWP 发展意味着什么。</p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#prerequisites\"></a>系统必备组件</h2>\n<p>为了在 UWP 中使用.NET 标准 2.0，您需要将秋天创作者更新 (FCU) 作为您的 UWP 项目的最低版本。这是因为.NET 标准 2.0 包含了很多的 Api，需要风机盘管，使他们工作在 UWP 执行环境，特别是 AppContainer 的上下文。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-01-sdk.png\" alt=\"\" width=\"869\" height=\"354\"></a></p>\n<h2><a href=\"https://github.com/terrajobst/dotnet-blog/blob/ff9b4776d54f721be912d48a8c4e10da3c433ae7/2017/08-Aug/netstandard20-uwp/netstandard20-uwp.md#whats-new-with-net-standard-20\"></a>新的.NET 2.0 标准是什么？</h2>\n<p>.NET 标准版是一种规范的所有.NET 实现都一定要实现的 Api。UWP 现在添加对.NET 标准 2.0 的支持。</p>\n<p>关键优势<span></span> <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET 标准 2.0</a> <span> </span>，是它让.NET 实现.NET 标准有更多类似到.NET 框架。与.NET 标准 2.0<span> </span><a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">约 20,000 更多的 Api</a> <span></span>成为可用相比.NET 标准 1.6。其中绝大多数都现有的.NET 框架 Api，包括失踪的反射 Api，非泛型集合，<span> </span> <code>DataSet</code> ，二进制序列化、 XML 架构和更多。有关完整列表，看看<span></span> <a href=\"https://github.com/dotnet/standard/blob/master/docs/versions/netstandard2.0.md\">.NET 标准 2.0 和.NET 标准 1.6 之间的差异</a>。</p>\n<p>这使它更易于港口现有的.NET 框架代码到 UWP。这包括两个，复制和粘贴现有的代码，但也延伸到引用现有的.NET 框架二进制文件，通过兼容性模式。下面是一个示例使用<span></span> <code>DataSet</code> <span> </span>UWP 应用程序内：</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/netstandard20-uwp-02-dataset.png\" alt=\"\" width=\"2155\" height=\"1340\"></a></p>\n<p>更多详细信息，请查阅我<span></span><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">博客上.NET 标准 2.0</a>。</p>\n<p>\n<h2>摘要</h2>\n<p><a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/08/25/visual-studio-2017-version-15-4-preview/\">Visual Studio 2017 版本 15.4 预览 1</a><span> </span>UWP 项目需要秋天创作者更新 (FCU) 中添加.NET 标准 2.0 支持。请让它旋转，并告诉我们你的想法 ！</p>"},{"Id":83,"Author":"Steve Dower [MSFT]","Categories":"Python Engineering at Microsoft","CreateTime":"2017-08-26T04:00:31","Description":"<p>It's been a while since we last posted, and we've been hard at work on new features for Python in Visual Studio 2017. Today, the first preview of the next update has been released, which you can install from <a href=\"https://visualstudio.com/vs/preview\" target=\"_blank\">visualstudio.com</a> or by updating your existing Preview install. </p>\n<p>In this post, we'll briefly discuss the new features in this preview, including the secret tricks and exclusive downloads you will need to enable some of them. </p>\n<h1>Ctrl+Click Go To Definition</h1>\n<p>Over the new update you should see this feature coming to most languages in Visual Studio, but we are excited that Python is one of the first to get it. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver-300x127.png\" alt=\"Ctrl+Click Go To Definition turns identifiers into hyperlinks when you hover over them\" width=\"300\" height=\"127\"></a></p>\n<p>You are probably familiar with the Go To Definition feature, either through the editor context menu or the F12 shortcut key, but we have added a new way to use it. While holding the Control key down, the identifier you have the mouse over will turn into a hyperlink if it has definitions you can go to. Clicking on the item will then take you directly to the definition. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options-300x203.png\" alt=\"Options dialog showing settings that can be changed for Ctrl+Click Go To Definition\" width=\"300\" height=\"203\"></a></p>\n<div>If you would prefer to use a key other than Control, the Text Editor options page will let you select an alternative. You can also choose to \"peek\" the definition rather than going to it, which will open a smaller editor window embedded within the current one.</div>\n<p>(Unfortunately, it seems that peek does not work for Python code in this first preview. We're <a href=\"https://github.com/Microsoft/PTVS/issues/2916\" target=\"_blank\">fixing it</a> for preview 2!)</p>\n<h1>Debugging in the Windows Subsystem for Linux</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties-300x189.png\" alt=\"Selecting the WSL launcher from a Python project's properties window\" width=\"300\" height=\"189\"></a></p>\n<p>The <a href=\"https://msdn.microsoft.com/commandline/wsl\" target=\"_blank\">Windows Subsystem for Linux</a> (WSL) is an exciting new technology that lets you use a full Linux distribution on your Windows machine. This is not a virtual machine, but a subsystem similar to the way that 32-bit processes are supported on 64-bit Windows. Follow the link for instructions on how to set it up. </p>\n<p>For this preview, we are releasing a separate extension that enables debugging in WSL. After installing this extension, you can select a new debug launcher in Python project properties. Now, when you press F5, your project will launch under WSL using the most compatible version of Python available (for example, a project using Python 3.6 will try to launch with <tt>python3.6</tt> and then <tt>python3</tt> before returning an error). </p>\n<p>Once running, the debugger will automatically attach, providing the great experience you are used to getting with local or remote debugging.</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint-1024x624.png\" alt=\"Visual Studio stopped at a breakpoint in Python code running in WSL\" width=\"1024\" height=\"624\"></a></p>\n<p>One known issue is that you may see an error dialog appear as well as the Bash shell, but your project does not start. In most cases, attempting to launch again should succeed, so please try that before reporting a problem. Also note that native code debugging is not supported with WSL, even though the checkbox for it appears.</p>\n<p>You can download the extension from here: <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Wsl.VS2017.vsix\">Microsoft.PythonTools.Wsl.VS2017.vsix</a> (64 kB) </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental extension, and we're releasing it separately because we may change it dramatically when fully integrated into Visual Studio, or we may decide not to integrate it at all. You may need to manually uninstall the extension before installing future Visual Studio updates. While this extension is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This download will only be available for a limited time and is only compatible with Visual Studio 15.4 Preview 1.</p></blockquote>\n<h1>Debug C++ project with Python</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug-300x183.png\" alt=\"Debugging Python hosted in a C++ executable\" width=\"300\" height=\"183\"></a></p>\n<p>If you develop native Python extensions, you are likely familiar with our support for <a href=\"https://docs.microsoft.com/visualstudio/python/debugging-mixed-mode\" target=\"_blank\">mixed C/Python debugging</a>. Currently, you can only enable this on a Python project, which meant that if you were developing a C++ project that <a href=\"https://blogs.msdn.microsoft.com/pythonengineering/2016/04/26/cpython-embeddable-zip-file/\" target=\"_blank\">embeds</a> Python, you could not use it. </p>\n<p>Today we are releasing a standalone extension that adds a new debugging option to C++ projects: Python native debugging. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties-300x168.png\" alt=\"Configuring C++ project properties to launch with Python debugging enabled\" width=\"300\" height=\"168\"></a></p>\n<p>Selecting this debugger for your C++ project will launch with support for viewing Python types and stack frames, giving you the best experience for debugging your application. </p>\n<p>You can download the extension from here: <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix\">Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix</a> (331 kB) </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental extension, and we're releasing it separately because we may change it dramatically when fully integrated into Visual Studio, or we may decide not to integrate it at all. You may need to manually uninstall the extension before installing future Visual Studio updates, and you may require administrative privileges to install and remove it. While this extension is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This download will only be available for a limited time and is only compatible with Visual Studio 15.4 Preview 1.</p></blockquote>\n<h1>Disable the completion database</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense-300x185.png\" alt=\"Completions and documentation for pandas without using a completion DB\" width=\"300\" height=\"185\"></a></p>\n<p>Remember when you installed Anaconda and we made you wait hours before giving you IntelliSense? Yeah, we aren't proud of that. Our IntelliSense is based on some really intense static analysis that infers types for every possible variable, and it takes time to get those results. But in many cases, very simple syntax analysis can provide results that will keep you productive, especially when combined with your own expertise. </p>\n<p>So we've been working on a brand new approach that does not rely on generating a completion DB. This means that when you install a new environment or a new package, we will give you great IntelliSense immediately, without having to run the background process at all.   </p>\n<p>This new approach is very experimental right now, and we are actively working on improving the experience. It is included in the current Visual Studio 2017 Preview but disabled by default. You can tell when it is enabled because the IntelliSense dropdown will be missing from the Python Environments window. </p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments-300x183.png\" alt=\"Python Environments window before and after disabling the completion DB\" width=\"300\" height=\"183\"></a></p>\n<p>To enable this feature, use registry editor to create a key <tt>HKEY_CURRENT_USERSoftwareMicrosoftPythonToolsExperimental</tt> and add a <tt>DWORD</tt> value named <tt>NoDatabaseFactory</tt> and set its value to 1. Then restart Visual Studio. </p>\n<blockquote><p><strong>Warnings:</strong> This is a highly experimental feature, and we do not recommend enabling it in production environments. While Visual Studio is completely unsupported, we would love to hear your feedback on <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>. This registry key is only compatible with Visual Studio 15.4 Preview 1, and newer versions may have alternate.</p></blockquote>\n<h1>Enjoy</h1>\n<p>As usual, feedback is welcome at our <a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a> page, and while we don't recommend using previews in production it is <a href=\"https://www.visualstudio.com/vs/preview/#7fed63a0b27bb7fa0\" target=\"_blank\">easy to install both the current preview and the current release</a> of Visual Studio 2017 on the same machine. </p>\n<p>We hope you enjoy these early previews of our current work. We're excited about a future with better C++ integration and no IntelliSense database, and we hope you are too. Thanks for being a Visual Studio user! </p>","LastUpdateTime":"2017-08-26T04:00:31","Link":"https://blogs.msdn.microsoft.com/pythonengineering/2017/08/25/python-updates-in-visual-studio-15-4-preview-1/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Python updates in Visual Studio 15.4 Preview 1","Type":1,"TitleCn":"在 Visual Studio 15.4 预览 1 Python 更新","Content":"<p>自从我们上次张贴，和我们一直努力工作的新特点为 Python 视觉工作室 2017 年，已经有段时间了。今天下, 一次更新的第一个预览已被释放，你可以从<a href=\"https://visualstudio.com/vs/preview\" target=\"_blank\">visualstudio.com</a>安装或通过更新你现有的预览安装。</p>\n<p>在这篇文章，我们将简要讨论此预览，包括秘密技巧和您将需要启用其中一些独家下载中的新功能。</p>\n<h1>Ctrl + 单击转到定义</h1>\n<p>在新的更新，您应该看到大多数语言在 Visual Studio 中，来到此功能，但我们还是兴奋 Python 是第一个获得它。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_MouseOver-300x127.png\" alt=\"Ctrl+Click Go To Definition turns identifiers into hyperlinks when you hover over them\" width=\"300\" height=\"127\"></a></p>\n<p>您可能熟悉转到定义功能，通过编辑器上下文菜单或 f12 键的快捷键，但是我们增加了新的方式来使用它。同时按住 Control 键，你有鼠标的标识符会变成超链接，如果它有的定义你可以去。点击项目然后将带你直接去定义。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CCGTD_Options-300x203.png\" alt=\"Options dialog showing settings that can be changed for Ctrl+Click Go To Definition\" width=\"300\" height=\"203\"></a></p>\n<div>如果您愿意使用非控制的关键，文本编辑器选项页会让你选择一种替代。您也可以选择\"偷看\"定义，而不是去它，它将打开一个小的编辑器窗口嵌入在当前。</div>\n<p>（不幸的是，它似乎，聚醚醚酮并不适用于在此第一次的预览中的 Python 代码。我们<a href=\"https://github.com/Microsoft/PTVS/issues/2916\" target=\"_blank\">搞定它</a>的预览 2 ！）</p>\n<h1>对于 Linux 调试 Windows 子系统中</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_ProjectProperties-300x189.png\" alt=\"Selecting the WSL launcher from a Python project's properties window\" width=\"300\" height=\"189\"></a></p>\n<p><a href=\"https://msdn.microsoft.com/commandline/wsl\" target=\"_blank\">Linux 的 Windows 子系统</a>（荣通证券） 是令人兴奋的新技术，让您在您的 Windows 计算机上使用一个完整的 Linux 发行。这不是一个虚拟机，而类似的方式，在 64 位 Windows 上支持 32 位进程中的一个子系统。有关如何将它设置为指示链接。</p>\n<p>对于这个预览，我们发布启用调试在荣通证券的一个独立扩展。后安装此扩展，您可以选择一个新的调试发射器在 Python 项目属性中。现在，当您按 f5 键，您的项目将推出根据荣通证券使用的 Python 提供最兼容的版本 （例如，使用 Python 3.6 项目将尝试启动<tt>python3.6</tt> ，然后<tt>python3</tt>返回错误之前）。</p>\n<p>一次运行时，调试器将自动连接，提供了大量的经验，你习惯了与本地或远程调试。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/WSL_Breakpoint-1024x624.png\" alt=\"Visual Studio stopped at a breakpoint in Python code running in WSL\" width=\"1024\" height=\"624\"></a></p>\n<p>一个已知的问题是，您可能会看到错误对话框出现以及 Bash shell 中，但您的项目不能启动。在大多数情况下，尝试启动再应该成功，这样请尝试，之前报告的问题。此外注意到与 — — WSL，不支持本机代码调试即使它的复选框出现。</p>\n<p>你可以从这里下载扩展： <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Wsl.VS2017.vsix\">Microsoft.PythonTools.Wsl.VS2017.vsix</a> (64 kB)</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的扩展，和我们分开就会发布它，因为我们可能会改变它大大时完全集成到 Visual Studio 中，或者我们可能决定不将它集成在所有。您可能需要手动安装 Visual Studio 的未来更新之前卸载扩展。虽然这个扩展是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此下载只会在有限的时间，只是与 Visual Studio 15.4 预览 1 兼容。</p></blockquote>\n<h1>调试与 Python c + + 项目</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Debug-300x183.png\" alt=\"Debugging Python hosted in a C++ executable\" width=\"300\" height=\"183\"></a></p>\n<p>如果您开发原生 Python 扩展，你可能已经非常了解我们对<a href=\"https://docs.microsoft.com/visualstudio/python/debugging-mixed-mode\" target=\"_blank\">混合的 C/Python 调试</a>的支持。目前，您只能启用这一个 Python 项目，这就意味着，如果您在开发一个 c + + 项目，<a href=\"https://blogs.msdn.microsoft.com/pythonengineering/2016/04/26/cpython-embeddable-zip-file/\" target=\"_blank\">嵌入</a>Python，你不能使用它。</p>\n<p>今天，我们正在推出一个独立的扩展，将一个新的调试选项添加到 c + + 项目： Python 本机调试。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/VCLauncher_Properties-300x168.png\" alt=\"Configuring C++ project properties to launch with Python debugging enabled\" width=\"300\" height=\"168\"></a></p>\n<p>选择此调试器为您的 c + + 项目将推出支持查看 Python 类型和堆栈帧，给你最好的体验为调试您的应用程序。</p>\n<p>你可以从这里下载扩展： <a href=\"https://ptvs.azureedge.net/download/Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix\">Microsoft.PythonTools.Debugger.VCLauncher.VS2017.vsix</a> (331 kB)</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的扩展，和我们分开就会发布它，因为我们可能会改变它大大时完全集成到 Visual Studio 中，或者我们可能决定不将它集成在所有。您可能需要手动卸载扩展安装将来的 Visual Studio 更新之前，您可能需要管理权限才能安装和删除它。虽然这个扩展是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此下载只会在有限的时间，只是与 Visual Studio 15.4 预览 1 兼容。</p></blockquote>\n<h1>禁用完成数据库</h1>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Pandas_IntelliSense-300x185.png\" alt=\"Completions and documentation for pandas without using a completion DB\" width=\"300\" height=\"185\"></a></p>\n<p>还记得当你安装水蟒，我们让你等前给你智能感知小时吗？是的我们不是骄傲。我们的智能感知基于一些真的很激烈的静态分析，推断类型为每个可能的变量，和它的时间来获得结果。但在许多情况下，很简单的语法分析可以提供时，会注意你生产，特别是结合自己的专业知识的结果。</p>\n<p>所以我们一直在不依赖于生成完成 DB 的全新方法。这意味着，当你安装一个新的环境或一个新的包，我们将立即给你伟大的智能感知，而不必在所有运行的后台进程。</p>\n<p>现在，这种新方法是非常实验，我们正在积极地改善经验。它是包含在当前的 Visual Studio 2017 预览，但默认情况下禁用。你可以告诉它启用时因为从 Python 环境窗口智能感知下拉列表将会丢失。</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments.png\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/08/NoIntellisenseEnvironments-300x183.png\" alt=\"Python Environments window before and after disabling the completion DB\" width=\"300\" height=\"183\"></a></p>\n<p>若要启用此功能，请使用注册表编辑器创建一个密钥<tt>HKEY_CURRENT_USERSoftwareMicrosoftPythonToolsExperimental</tt>并添加一个<tt>DWORD</tt>值，命名为<tt>NoDatabaseFactory</tt> ，并将其值设置为 1。然后重新启动 Visual Studio。</p>\n<blockquote><p><strong>警告：</strong>这是一个高度实验性的功能，和我们不推荐在生产环境中启用它。虽然 Visual Studio 是完全不支持的我们很乐意听到您在<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>上的反馈。此注册表项仅与视觉工作室 15.4 预览 1，兼容，较新的版本可能有备用。</p></blockquote>\n<h1>享受</h1>\n<p>像往常一样，反馈是在我们<a href=\"https://github.com/Microsoft/PTVS/issues\" target=\"_blank\">GitHub</a>页，欢迎和我们不建议在生产中使用预览时很<a href=\"https://www.visualstudio.com/vs/preview/#7fed63a0b27bb7fa0\" target=\"_blank\">容易安装当前预览和当前版本</a>的 Visual Studio 2017 同一台计算机上。</p>\n<p>我们希望你喜欢我们目前的工作这些早期预览。我们对未来有更好的 c + + 集成，没有智能感知数据库，感到兴奋，我们希望你也是。谢谢你的 Visual Studio 用户 ！</p>"},{"Id":85,"Author":"Cesar de la Torre [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-26T00:30:50","Description":"<p><img width=\"2355\" height=\"257\" alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/07/Xamarin-Patterns-Banner.png\"></p>\n<p>As part of the series of posts announced at this initial blog post (<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/26/the-new-net-application-architecture-guidance/\">.NET Application Architecture Guidance</a>) that explores each of the&nbsp;architecture areas currently covered by our team,&nbsp;this current blog post focuses on &ldquo;<strong>Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance</strong>&ldquo;.</p>\n<p>Just as a reminder, the four introductory blog posts of this series are (or will be as of today)&nbsp;the following:&nbsp; <span><br></span></p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/?p=13546\">Microservices and Docker containers: Architecture, Patterns and Development guidance</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/09/web-apps-aspnetcore-architecture-guidance/\">Web Applications with ASP.NET Core Architecture and Patterns guidance</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\">Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance</a></li>\n<li>Production Ready Cloud applications with Azure Architecture guidance</li>\n</ul><p><span><span>There are many issues that must be resolved when creating an enterprise mobile app. These include: </span><span><br></span></span></p>\n<ul><li><span>Deciding how to provide a clean separation of concerns between the user interface controls and their logic. </span></li>\n<li><span>Deciding whether to use a dependency injection container. </span></li>\n<li><span>Choosing how components that are inconvenient to link by object and type references can communicate. </span></li>\n<li><span>Deciding how to navigate between pages, including how to invoke navigation and where navigation logic should reside. </span></li>\n<li><span>Deciding how to validate user input for correctness. The decision must include how to validate user input and how to notify the user about validation errors. </span></li>\n<li><span>Deciding how to perform authentication and how to protect resources with authorization. </span></li>\n<li><span>Deciding how to access remote data from web services, including how to reliably retrieve data and how to cache data. </span></li>\n<li><span>Deciding how to unit test the app.</span><span><br></span></li>\n</ul><h3>Introducing the &lsquo;Enterprise Application Patterns using Xamarin.Forms&rsquo; Guide/eBook</h3>\n<p><span>You can download this eBook that offers guidance on core patterns and architectural guidance for developing Xamarin.Forms enterprise apps that are easier to test, maintain, and evolve. Guidance is provided on how to implement the Model-View-ViewModel (MVVM) pattern, dependency injection, navigation, validation, and configuration management, while maintaining loose coupling. In addition, there&rsquo;s also guidance on performing authentication and authorization with IdentityServer, accessing remote data from containerized microservices, and unit testing.<br></span></p>\n<p><span>Free download:<br></span></p>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>http://aka.ms/XamarinPatternsEbook</span></a><span><br></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp16.png\"><span><br></span></p>\n<p><span>The eBook comes with source code for the <strong>eShopOnContainers Xamarin.Forms mobile app</strong>, which is a mobile app that extends the eShopOnContainers microservice/containers scenario. This mobile app includes the following functionality:<br></span></p>\n<ul><li>Authenticating and authorizing with a backend service.</li>\n<li>Browsing a catalog of shirts, coffee mugs, and other marketing items.</li>\n<li>Filtering the catalog.</li>\n<li>Ordering items from the catalog.</li>\n<li>Viewing the user&rsquo;s order history.</li>\n<li>Configuring settings.</li>\n</ul><h3>Who should use this guide</h3>\n<p><span>We wrote this guide for mobile app developers and solution architects who are new to Xamarin.Forms while looking to learn and adopt proven enterprise architectural/design patterns and best development practices for Xamarin.Forms apps.<br></span></p>\n<h3>Related sample mobile Xamarin.Forms app</h3>\n<p><span><span>The eBook focuses on building cross-platform enterprise apps using Xamarin.Forms and uses the <a href=\"http://aka.ms/MicroservicesArchitecture\">eShopOnContainers mobile app</a> as an example. The following diagram shows the pages from the eShopOnContainers mobile app that provide the functionality outlined earlier: </span><span><br></span></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp17.png\"><span><br></span></p>\n<p><span><span>The mobile app consumes the backend services provided by the containerized microservices. However, it can also be configured to consume data from mock services for those who wish to avoid deploying the backend services and just want purely explorer the Xamarin.Forms mobile app without the hassle of deploying a microservice-based backend. </span><span><br></span></span></p>\n<h3>Wrapping up &ndash; Xamarin.Forms Patterns guidance</h3>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>Enterprise Application Patterns using Xamarin.Forms</span></a><span><span> focuses on core patterns and architectural guidance for developing Xamarin.Forms enterprise apps that are easier to test, maintain, and evolve. Guidance is provided on how to implement MVVM, dependency injection, navigation, validation, and configuration management while maintaining loose coupling. In addition, there&rsquo;s also guidance on performing authentication and authorization with IdentityServer, accessing remote data from containerized microservices, and unit testing.&nbsp;</span></span></p>\n<h3>Visit the .NET Application Architecture Center and grab it all!</h3>\n<p>Remember that this&nbsp;<em>&lsquo;Web Applications with ASP.NET Core Architecture and Patterns guidance&rsquo; </em>explained at this blog post is part of a broader .NET Architecture guidance which covers additional subjects and you can&nbsp;<a href=\"http://dot.net/architecture\">check out at the .NET Application Architecture Center page</a>&nbsp;where you can&nbsp;download the multiple eBooks/Guides and visit the reference applications from there, and of course, feel free to provide feedback by dropping a note below or on the feedback form at the architecture page.</p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp2.png\"></p>\n<p>Happy coding from the .NET team!</p>\n<p>Cesar de la Torre</p>\n<p>.NET&nbsp;Product Group</p>\n<p>Twitter:&nbsp;<a href=\"https://twitter.com/cesardelatorre\">@cesardelatorre</a></p>","LastUpdateTime":"2017-08-26T00:30:50","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Mobile Apps with Xamarin.Forms: Architecture and Patterns guidance","Type":1,"TitleCn":"移动应用程序与 Xamarin.Forms： 体系结构和模式的指导","Content":"<p><img width=\"2355\" height=\"257\" alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/07/Xamarin-Patterns-Banner.png\"></p>\n<p>作为系列文章宣布在这个初始博客帖子 （<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/26/the-new-net-application-architecture-guidance/\">.NET 应用程序体系结构指导</a>），探讨了目前我们的团队所涵盖的建筑领域的一部分，这个当前的博客文章侧重于\"<strong>与 Xamarin.Forms 的移动应用程序： 体系结构和模式指导</strong>\"。</p>\n<p>只是作为一个提醒，这一系列的四个介绍性博客 （或者将从今天起） 以下：<span><br></span></p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/?p=13546\">Microservices 和码头集装箱： 体系结构、 模式和发展指导</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/09/web-apps-aspnetcore-architecture-guidance/\">Web 应用程序的 ASP.NET 核心体系结构和模式的指导</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/25/xamarin-patterns/\">移动应用程序与 Xamarin.Forms： 体系结构和模式的指导</a></li>\n<li>生产准备好了云应用程序与 Azure 体系结构指导</li>\n</ul><p><span><span>有创建企业移动应用程序时必须解决的许多问题。这些措施包括：</span><span><br></span></span></p>\n<ul><li><span>决定如何提供干净的用户界面控件和它们的逻辑关系上的分离。</span></li>\n<li><span>决定是否使用依赖注入容器。</span></li>\n<li><span>选择如何沟通不便要链接的对象和类型引用的组件。</span></li>\n<li><span>决定如何导航之间的页面，包括如何调用导航和导航逻辑应存放。</span></li>\n<li><span>决定如何验证用户输入的正确性。这一决定必须包括如何验证用户输入以及如何通知用户有关验证错误。</span></li>\n<li><span>决定如何执行身份验证，以及如何保护资源与授权。</span></li>\n<li><span>决定如何从 web 访问远程数据服务，包括如何可靠地检索数据以及如何缓存数据。</span></li>\n<li><span>决定如何向单元测试应用程序。</span><span><br></span></li>\n</ul><h3>引入企业应用程序模式使用 Xamarin.Forms' 指南/电子书</h3>\n<p><span>您可以下载这本电子书，提供指导意见的核心模式和建筑指导发展 Xamarin.Forms 企业应用程序，更易于测试、 维护和发展。提供了有关如何实现模型-视图-模型 (MVVM) 模式、 依赖注入、 导航、 验证和配置管理，同时保持松散耦合的指导。此外，还指导上有执行身份验证和授权与 IdentityServer，从集装箱的 microservices 和单元测试访问远程数据。<br></span></p>\n<p><span>免费下载：<br></span></p>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>http://aka.ms/XamarinPatternsEbook</span></a><span><br></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp16.png\"><span><br></span></p>\n<p><span>电子书带有源代码为<strong>eShopOnContainers Xamarin.Forms 的手机应用程序</strong>，这是一个扩展 eShopOnContainers microservice/容器场景的移动应用程序。这手机的应用程序包括以下功能：<br></span></p>\n<ul><li>身份验证和授权与后端服务。</li>\n<li>浏览目录的衬衫，咖啡杯和其他营销项目。</li>\n<li>筛选目录。</li>\n<li>订购目录中的项目。</li>\n<li>查看用户的订单历史记录。</li>\n<li>配置设置。</li>\n</ul><h3>谁应该使用本指南</h3>\n<p><span>我们写了本指南为移动应用程序开发人员和解决方案架构师，是新的 Xamarin.Forms 一边寻找学习和采用经验证的企业建筑/设计模式和 Xamarin.Forms 应用程序开发的最佳做法。<br></span></p>\n<h3>相关的示例移动的 Xamarin.Forms 应用程序</h3>\n<p><span><span>电子书可以致力于构建跨平台企业应用程序在使用 Xamarin.Forms 和使用<a href=\"http://aka.ms/MicroservicesArchitecture\">eShopOnContainers 的手机应用程序</a>为例。下面的关系图显示的页面从 eShopOnContainers 移动应用程序提供功能较早时提出：</span><span><br></span></span></p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp17.png\"><span><br></span></p>\n<p><span><span>移动应用程序消耗集装箱 microservices 所提供的后端服务。然而，它也可以配置为使用 mock 服务为那些想要避免部署后端服务的数据，只是想纯粹是资源管理器中 Xamarin.Forms 移动应用程序的部署一个基于 microservice 的后端，免去。</span><span><br></span></span></p>\n<h3>结束了 — — Xamarin.Forms 模式指导</h3>\n<p><a href=\"http://aka.ms/XamarinPatternsEbook\"><span>企业应用程序模式使用 Xamarin.Forms</span></a><span><span>重点的核心模式和建筑指导发展 Xamarin.Forms 企业应用程序，更易于测试、 维护和发展。提供了有关如何实现 MVVM、 依赖注入、 导航、 验证和配置管理，同时保持松散耦合的指导。此外，还指导上有执行身份验证和授权与 IdentityServer，从集装箱的 microservices 和单元测试访问远程数据。</span></span></p>\n<h3>访问.NET 应用程序体系结构中心，并抓住它所有 ！</h3>\n<p>记得这<em>'Web 应用程序与 ASP.NET 核心体系结构和模式指导'</em>解释在这篇博客是一部分的更广泛的.NET 体系结构指导，涵盖更多的议题，你可以<a href=\"http://dot.net/architecture\">查阅在.NET 应用程序体系结构中心页面</a>在哪里可以下载多个电子书或指南和访问参考应用程序从那里，当然，随时提供反馈通过删除下面的注释或反馈窗体在体系结构页上。</p>\n<p><img alt=\"\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/062217_2209_ThenewNETAp2.png\"></p>\n<p>快乐的编码从.NET 团队 ！</p>\n<p>塞萨尔 · 德拉托雷</p>\n<p>.NET 产品组</p>\n<p>推特： <a href=\"https://twitter.com/cesardelatorre\">@cesardelatorre</a></p>"},{"Id":86,"Author":"Guest Blogger","Categories":"Revolutions","CreateTime":"2017-08-25T00:14:10","Description":"<p><em>by <a href=\"https://www.linkedin.com/in/b%C5%82a%C5%BCej-moska-9a316113a/\">B&#322;a&#380;ej Moska</a>, computer science student and data science intern</em>&nbsp;</p>\n<p>Suppose that we have performed clustering K-means clustering in R and are satisfied with our results, but later we realize that it would also be useful to have a membership matrix. Of course it would be easier to repeat clustering using one of the fuzzy kmeans functions available in R (like <a href=\"https://www.rdocumentation.org/packages/cluster/versions/2.0.6/topics/fanny\"><code>fanny</code></a>, for example), but since it is slightly different implementation the results could also be different and for some reasons we don&rsquo;t want them to be changed. Knowing the equation we can construct this matrix on our own, after using the <a href=\"https://www.rdocumentation.org/packages/stats/versions/3.4.1/topics/kmeans\"><code>kmeans</code></a> function. The equation is defined as follows (source: <a href=\"https://en.wikipedia.org/wiki/Fuzzy_clustering\">Wikipedia</a>):</p>\n<p>$$w_{ij} = frac{1}{ sum_ {k=1}^c ( frac{ | x_{i} - c_{j} | }{ | x_{i} - c_{k} | }) ^{ frac{2}{m-1} } } $$</p>\n<p>(w_{ij}) denotes to what extent the (i)th object belongs to the (j)th cluster. So the total number of rows of this matrix equals number of observation and total number of columns equals number of variables included in clustering. (m) is a parameter, typically set to (m=2). (w_{ij}) values range between 0 and 1 so they are easy and convenient to compare. In this example I will use (m = 2) so the Euclidean distance will be calculated.</p>\n<p>To make computations faster I also used the&nbsp;<a href=\"http://adv-r.had.co.nz/Rcpp.html\">Rcpp package</a>, then I compared speed of execution of function written in R with this written in C++.</p>\n<p>In implementations <code>for</code> loops were used, although it is not a commonly used method in R (see <a href=\"http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html\">this blog post</a> for more information and alternatives), but in this case I find it more convenient.</p>\n<h3>Rcpp (C++ version)</h3>\n<div>\n<pre><span>#include &lt;Rcpp.h&gt;</span>\n<span>#include &lt;math.h&gt;</span>\n<span>using</span> <span>namespace</span> Rcpp;\n\n<span>// [[Rcpp::export]]</span>\nNumericMatrix <span>fuzzyClustering</span>(NumericMatrix data, NumericMatrix centers, <span>int</span> m) {  \n<span>/* data is a matrix with observations(rows) and variables, </span>\n<span>   centers is a matrix with cluster centers coordinates, </span>\n<span>   m is a parameter of equation, c is a number of clusters</span>\n<span>*/</span>\n  \n  <span>int</span> c<span>=</span>centers.rows();\n  <span>int</span> rows <span>=</span> data.rows();\n  <span>int</span> cols <span>=</span> data.cols(); <span>/*number of columns equals number of variables, the same as is in centers matrix*/</span>\n  <span>double</span> tempDist<span>=</span><span>0</span>;        <span>/*dist and tempDist are variables storing temporary euclidean distances */</span>\n  <span>double</span> dist<span>=</span><span>0</span>;      \n  <span>double</span> denominator<span>=</span><span>0</span>;    <span>//denominator of &ldquo;main&rdquo; equation</span>\n  \n  NumericMatrix result(rows,c);    <span>//declaration of matrix of results</span>\n  \n  <span>for</span>(<span>int</span> i<span>=</span><span>0</span>;i<span>&lt;</span>rows;i<span>++</span>){\n    <span>for</span>(<span>int</span> j<span>=</span><span>0</span>;j<span>&lt;</span>c;j<span>++</span>){\n      <span>for</span>(<span>int</span> k<span>=</span><span>0</span>;k<span>&lt;</span>c;k<span>++</span>){\n        <span>for</span>(<span>int</span> p<span>=</span><span>0</span>;p<span>&lt;</span>cols;p<span>++</span>){\n          tempDist <span>=</span> tempDist<span>+</span>pow(centers(j,p)<span>-</span>data(i,p),<span>2</span>);      \n         <span>//in innermost loop an euclidean distance is calculated.</span>\n          dist <span>=</span> dist <span>+</span> pow(centers(k,p)<span>-</span>data(i,p),<span>2</span>);              \n<span>/*tempDist is nominator inside the sum operator in the equation, dist is the denominator inside the sum operator in the equation*/</span>\n        }\n        tempDist <span>=</span> sqrt(tempDist);\n        dist <span>=</span> sqrt(dist);\n        denominator <span>=</span> denominator<span>+</span>pow((tempDist<span>/</span>dist),(<span>2</span><span>/</span>(m<span>-</span><span>1</span>)));\n        tempDist <span>=</span> <span>0</span>;\n        dist <span>=</span> <span>0</span>;\n      }\n      result(i,j) <span>=</span> <span>1</span><span>/</span>denominator;    \n<span>// nominator/denominator in the  main equation</span>\n      denominator <span>=</span> <span>0</span>;                           \n    }\n  }\n  <span>return</span> result;\n}\n</pre>\n</div>\n<p>We can save this in a file with .cpp extension. To compile it from R we can write:</p>\n<pre>sourceCpp(\"path_to_cpp_file\")\n</pre>\n<p>If everything goes right our function <code>fuzzyClustering</code> will then be available from R.</p>\n<h3>R version</h3>\n<div>\n<pre>fuzzyClustering<span>=</span><span>function</span>(data,centers,m){\n\n  c <span>&lt;-</span> nrow(centers)\n  rows <span>&lt;-</span> nrow(data)\n  cols <span>&lt;-</span> ncol(data)\n  result <span>&lt;-</span> matrix(<span>0</span>,nrow<span>=</span>rows,ncol<span>=</span>c)  <span>#defining membership matrix</span>\n  denominator <span>&lt;-</span> <span>0</span>\n  \n  <span>for</span>(i <span>in</span> <span>1</span><span>:</span>rows){\n    <span>for</span>(j <span>in</span> <span>1</span><span>:</span>c){\n      tempDist <span>&lt;-</span> sqrt(sum((centers[j,]<span>-</span>data[i,])<span>^</span><span>2</span>))  <span>#euclidean distance, nominator inside a sum operator </span>\n      <span>for</span>(k <span>in</span> <span>1</span><span>:</span>c){\n        Dist <span>&lt;-</span> sqrt(sum((centers[k,]<span>-</span>data[i,])<span>^</span><span>2</span>))    <span>#euclidean distance, denominator inside a sum operator </span>\n        denominator <span>&lt;-</span> denominator <span>+</span>((tempDist<span>/</span>Dist)<span>^</span>(<span>2</span><span>/</span>(m<span>-1</span>))) <span>#denominator of an equation </span>\n      }    \n      result[i,j] <span>&lt;-</span> <span>1</span><span>/</span>denominator    <span>#inserting value into membership matrix</span>\n      denominator <span>&lt;-</span> <span>0</span>           \n    }\n  }\n  <span>return</span>(result);\n}\n</pre>\n</div>\n<p>Result looks as follows. Columns are cluster numbers (in this case 10 clusters were created), rows are our objects (observations). Values were rounded to the third decimal place, so the sums of rows can be slightly different than 1:</p>\n<pre>          1     2     3     4     5     6     7     8     9    10  \n [1,] 0.063 0.038 0.304 0.116 0.098 0.039 0.025 0.104 0.025 0.188  \n [2,] 0.109 0.028 0.116 0.221 0.229 0.080 0.035 0.116 0.017 0.051  \n [3,] 0.067 0.037 0.348 0.173 0.104 0.066 0.031 0.095 0.018 0.062  \n [4,] 0.016 0.015 0.811 0.049 0.022 0.017 0.009 0.023 0.007 0.031  \n [5,] 0.063 0.048 0.328 0.169 0.083 0.126 0.041 0.079 0.018 0.045  \n [6,] 0.069 0.039 0.266 0.226 0.102 0.111 0.037 0.084 0.017 0.048  \n [7,] 0.045 0.039 0.569 0.083 0.060 0.046 0.025 0.071 0.015 0.046  \n [8,] 0.070 0.052 0.399 0.091 0.093 0.054 0.034 0.125 0.022 0.062  \n [9,] 0.095 0.037 0.198 0.192 0.157 0.088 0.038 0.121 0.019 0.055 \n[10,] 0.072 0.024 0.132 0.375 0.148 0.059 0.025 0.081 0.015 0.067\n</pre>\n<h3>Performance comparison</h3>\n<p>Shown below is the output of <code>Sys.time</code> for the C++ and R versions, running against a&nbsp;simulated matrix with 30000 observations, 3 variables and 10 clusters. <br>The hardware I used was a low-cost notebook Asus R556L with Intel Core i3-5010 2.1 GHz processor and 8 GB DDR3 1600 MHz RAM memory.</p>\n<p>C++ version:</p>\n<pre>  user    system  elapsed\n  0.32    0.00    0.33 \n</pre>\n<p>R version:</p>\n<pre>  user    system  elapsed\n  15.75    0.02     15.94 <br></pre>\n<p>In this example, the function written in C++ executed about 50 times faster than the equivalent function written in pure R.</p>","LastUpdateTime":"2017-08-25T00:14:10","Link":"http://blog.revolutionanalytics.com/2017/08/kmeans-r-rcpp.html","MobileContent":null,"PublishId":0,"Status":1,"Title":"Calculating a fuzzy kmeans membership matrix with R and Rcpp","Type":1,"TitleCn":"计算 R 与 Rcpp kmeans 模糊隶属度矩阵","Content":"<p><em>由<a href=\"https://www.linkedin.com/in/b%C5%82a%C5%BCej-moska-9a316113a/\">Błażej 沦为</a>，计算机科学专业的学生和数据科学实习生</em></p>\n<p>假设，我们进行聚类 K-均值聚类在 R 和满意与我们的结果，但后来我们意识到，它也是有用的隶属度矩阵。当然它会容易重复聚类使用 R 中可用的模糊均值比率函数之一 (像<a href=\"https://www.rdocumentation.org/packages/cluster/versions/2.0.6/topics/fanny\"> <code>fanny</code> </a>，举个例子)，但由于它是略有不同的实现结果也可能不同，因为某些原因，我们不希望它们发生更改。知道该方程我们可以构造这个矩阵对我们自己，之后使用<a href=\"https://www.rdocumentation.org/packages/stats/versions/3.4.1/topics/kmeans\"> <code>kmeans</code> </a>函数。方程的定义如下 (来源：<a href=\"https://en.wikipedia.org/wiki/Fuzzy_clustering\">维基百科</a>):</p>\n<p>$$ w_ {ij} = 压裂 {1} {sum_ {k = 1} ^ c (压裂 {| x_ {i}-c_ {j} |}{| x_ {i}-c_ {k} |})^ {压裂 {2} {m-1}}} $$</p>\n<p>(w_ {ij}) 表示到什么程度 (i) th 对象属于 (j) th 群集。所以这个矩阵行的总数等于观察数和总数目列等于包括聚类中的变量。(m) 是一个参数，通常设置为 (m = 2)。(w_ {ij}) 值介于 0 和 1，所以他们很容易和方便比较。在此示例中将 (m = 2) 因此将计算欧氏距离。</p>\n<p>为了使计算速度更快，也使用<a href=\"http://adv-r.had.co.nz/Rcpp.html\">Rcpp 软件包</a>，然后我比较在 R 用这个写在 c + + 编写的函数的执行速度。</p>\n<p>在实现 <code>for</code> 循环使用了，虽然它不是常用的方法，在 R （请看<a href=\"http://www.noamross.net/blog/2014/4/16/vectorization-in-r--why.html\">这篇博客</a>更多的信息和备选方案），但是在这种情况下我发现它更方便。</p>\n<h3>Rcpp （c + + 版本）</h3>\n<div>\n<pre><span>#include &lt; Rcpp.h &gt;</span>\n<span>#include 就是 &lt; math.h &gt;</span>\n<span>使用</span><span>命名空间</span>Rcpp;\n\n<span>/ / [[Rcpp::export]]</span>\n<span>fuzzyClustering</span><span>int</span> m) {  \n<span></span>\n<span>   </span>\n<span>   m 是方程参数，c 是簇数目</span>\n<span>* /</span>\n  \n  <span>int</span> c<span>=</span>centers.rows();\n  <span>int</span><span>=</span> data.rows();\n  <span>int</span><span>=</span><span>/ * 列等于数的变量，一样是在中心矩阵 * /</span>\n  <span>双</span>tempDist<span>=</span><span>0</span>;        <span>/ * dist 和 tempDist 是变量存储临时的欧几里得距离 * /</span>\n  <span>双</span>dist<span>=</span><span>0</span>;      \n  <span>双</span>分母<span>=</span><span>0</span>;    <span>\"主要\"方程 //denominator</span>\n  \n  NumericMatrix result(rows,c);    <span>矩阵的结果 //declaration</span>\n  \n  <span>为</span>(<span>int</span> i<span>=</span><span>0</span>; i<span>&lt;</span>行; 我<span>+ +</span>){\n    <span>为</span>（<span>int</span> j<span>=</span><span>0</span>; j<span>&lt;</span>c; j<span>+ +</span>） {\n      <span>为</span>（<span>int</span> k<span>=</span><span>0</span>; k<span>&lt;</span>c; k<span>+ +</span>） {\n        <span>为</span>（<span>int</span> <span>=</span>p<span>0</span>; p<span>&lt;</span>cols; p<span>+ +</span>） {\n          <span>=</span> tempDist<span>+</span>pow(centers(j,p)<span>-</span>data(i,p)，<span>2</span>);      \n         <span>//in 内层循环计算欧氏距离。</span>\n          <span>=</span><span>+</span> pow(centers(k,p)<span>-</span>data(i,p)，<span>2</span>);              \n<span>/ * tempDist 是提名人里面求和算子方程中，dist 是分母内 sum 运算符在方程 * /</span>\n        }\n        <span>=</span> sqrt(tempDist);\n        <span>=</span> sqrt(dist);\n        <span>=</span>分母<span>+</span>战俘 ((tempDist<span>/</span>dist)，(<span>2</span><span>/</span>(<span>-</span>m<span>1</span>)));\n        <span>=</span><span>0</span>;\n        <span>=</span><span>0</span>;\n      }\n      <span>=</span><span>1</span><span>/</span>分母;    \n<span>/ / 提名人或分母在  主要方程</span>\n      <span>=</span><span>0</span>;                           \n    }\n  }\n  <span>返回</span>的结果;\n}\n</pre>\n</div>\n<p>我们可以将它保存在.cpp 扩展名的文件。若要编译它从 R 我们可以编写：</p>\n<pre>sourceCpp(\"path_to_cpp_file\")\n</pre>\n<p>如果一切顺利我们的函数 <code>fuzzyClustering</code> 然后可从。</p>\n<h3>R 版本</h3>\n<div>\n<pre>fuzzyClustering<span>=</span><span>function</span>(data,centers,m){\n\n  <span>&lt;-</span> nrow(centers)\n  <span>&lt;-</span> nrow(data)\n  <span>&lt;-</span> ncol(data)\n  <span>&lt;-</span> matrix(<span>0</span>,nrow<span>=</span>rows,ncol<span>=</span>c)  <span>#defining membership matrix</span>\n  <span>&lt;-</span><span>0</span>\n  \n  <span>for</span><span>in</span><span>1</span><span>:</span>rows){\n    <span>for</span><span>in</span><span>1</span><span>:</span>c){\n      <span>&lt;-</span> sqrt(sum((centers[j,]<span>-</span>data[i,])<span>^</span><span>2</span>))  <span></span>\n      <span>for</span><span>in</span><span>1</span><span>:</span>c){\n        <span>&lt;-</span> sqrt(sum((centers[k,]<span>-</span>data[i,])<span>^</span><span>2</span>))    <span></span>\n        <span>&lt;-</span><span>+</span>((tempDist<span>/</span>Dist)<span>^</span>(<span>2</span><span>/</span>(m<span>-1</span><span> </span>\n      }    \n      <span>&lt;-</span><span>1</span><span>/</span>分母    <span>#inserting 值到隶属度矩阵</span>\n      <span>&lt;-</span><span>0</span>           \n    }\n  }\n  <span>返回</span>（结果）;\n}\n</pre>\n</div>\n<p>结果如下所示。列是的群集数量 （在这种情况下 10 集群创建），行是我们的对象 （意见）。值被舍入到小数第三位，所以行的款项可以比 1 略有不同：</p>\n<pre>          1     2     3     4     5     6     7     8     9    10  \n [1，] 0.063 0.038 0.304 0.116 0.098 0.039 0.025 0.104 0.025 0.188  \n [2，] 0.109 0.028 0.116 0.221 0.229 0.080 0.035 0.116 0.017 为 0.051  \n [3，] 0.067 0.037 0.348 0.173 0.104 0.066 天文 0.031 0.095 0.018 0.062 个  \n [4，] 0.016 0.015 0.811 0.049 0.022 0.017 0.009 0.023 0.007 0.031  \n [5，] 0.063 0.048 0.328 0.169 0.083 0.126 0.041 0.079 0.018 0.045  \n [6，] 0.069 0.039 0.266 0.226 0.102 0.111 0.037 0.084 0.017 0.048  \n [7，] 0.045 0.039 0.569 0.083 0.060 0.046 0.025 0.071 0.015 0.046  \n [8，] 0.070 0.052 0.399 0.091 0.093 按 0.054 0.034 0.125 0.022 0.062 个  \n [9，] 0.095 0.037 0.198 0.192 0.157 0.088 0.038 0.121 0.019 0.055 \n[10，] 0.072 0.024 0.132 0.375 0.148 0.059 0.025 0.081 0.015 0.067\n</pre>\n<h3>性能比较</h3>\n<p>如下图所示是输出的 <code>Sys.time</code> c + + 和 R 版本，针对一个模拟矩阵与 30000 意见、 3 个变量和 10 集群运行。<br>我使用的硬件是一个低成本笔记本 Asus R556L 与英特尔酷睿 i3 5010 2.1 GHz 处理器和 8 GB DDR3 1600 MHz 内存。</p>\n<p>C + + 版本：</p>\n<pre>  用户    系统  经过\n  0.32    0.00    0.33 \n</pre>\n<p>R 版本：</p>\n<pre>  用户    系统  经过\n  15.75    0.02     <br></pre>\n<p>在此示例中，函数写在 c + + 编写的纯 R.等效函数比快执行约 50 倍</p>"},{"Id":87,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-08-24T15:34:55","Description":"Having executed a test &ndash; at a minimum &ndash; we want to know the outcome. But beyond that, we may want to know more. Data collectors and loggers are the key extension mechanisms intended to provide this and other such details for rich reporting. Data collectors and loggers generate information based on listening to events... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/\"> Read More</a>","LastUpdateTime":"2017-08-24T15:34:55","Link":"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Visual Studio Test Platform – upcoming changes to data collectors","Type":1,"TitleCn":"视觉工作室测试平台 — — 即将更改为数据收集器","Content":"在执行测试 — — 至少 — — 我们想要知道结果。但除此之外，我们可能想要知道更多。数据收集器和记录器是旨在为这和其他此类细节丰富报告的关键扩展机制。数据收集器和记录器生成基于侦听事件信息...<a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/24/visual-studio-test-platform-upcoming-changes-to-data-collectors/\">阅读更多</a>"},{"Id":63,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-24T02:00:20","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%202017%20Version%2015.4%20Preview\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>I&rsquo;m happy to announce that the first Preview of Visual Studio 2017 version 15.4 is now available! You can either <a href=\"https://www.visualstudio.com/vs/preview/\">download it from here</a>, or if you already have Preview installed, you&rsquo;ll receive a notification that the update is available. This latest Preview contains new tools and features in several key workloads such as Universal Windows Platform (UWP) development, .NET desktop development, and Mobile and Game development. It also continues our drive to improve and polish the fundamentals such as productivity and reliability and address customer-reported bugs. Read the feature highlight summary below, and check out the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">Visual Studio 2017 version 15.4 Preview Release notes</a> for a detailed description of the new functionality contained in this Preview.</p>\n<h2>Universal Windows Platform Development &ndash; Windows Fall Creators Update</h2>\n<p>First, Visual Studio 2017 version 15.4 brings first class support for UWP developers targeting the upcoming Windows Fall Creators Update. To start building apps against this new Windows update, first, make sure you are enrolled in the <a href=\"https://insider.windows.com/en-us/\">Windows Insider Program</a>. Once you are enrolled, install the latest pre-release version of the <a href=\"https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK\">Windows Insider Preview SDK</a>.</p>\n<h3>.NET Standard 2.0 Support</h3>\n<p>With the release of the Windows Fall Creators Update, you will be able to leverage the power of <a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET Standard 2.0</a> when building UWP applications. .NET Standard 2.0 brings an additional 20,000+ .NET APIs to Windows 10 UWP developers &ndash; many of which will be familiar to Windows Desktop (WPF, Windows Forms, etc&hellip;) developers. .NET Standard 2.0 also allows for easier sharing of code between various .NET project types as project-to-project references, or as NuGet packages. We are starting to see a variety of NuGet packages show up on NuGet.org with support for .NET Standard 2.0, all of which will be available for consumption inside UWP projects.</p>\n<p>To build UWP apps using the new .NET Standard 2.0 APIs, make sure you have the Windows Fall Creators Update Insider SDK Preview installed, and set the <b>minimum</b> version of your project to this version of the SDK.</p>\n<h3>Windows Application Packaging Project</h3>\n<p>In Visual Studio 2017 version 15.4 Preview, you will get the first peek at a <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">new project template</a> that enables Classic Windows Desktop apps created with .NET or C++ to be packaged inside an .appx package for easier distribution via side-loading or submission to the Windows Store. These templates work for both new Classic Windows Desktop projects, as well as for existing projects.</p>\n<h3>XAML Edit &amp; Continue Improvements</h3>\n<p>You can edit or remove XAML resources using XAML Edit &amp; Continue. In addition, you can also add ControlTemplates to your XAML while using XAML Edit &amp; Continue. To leverage these new features, make sure you are running the Windows Fall Creators Update Preview.</p>\n<h2>Mobile and Game Development</h2>\n<h3>Unity</h3>\n<p>In Visual Studio 2017 version 15.4 Preview we have made improvements and bugfixes in the tooling for Unity. There is better support for the latest released Unity 2017.1 runtime. This Preview also supports <a href=\"https://forum.unity3d.com/threads/example-project-assembly-definition-files.482313/\">user-defined managed assemblies</a>, a feature coming in Unity 2017.2 that helps to drastically minimize script compilation times of projects. To help with debugging, you can now &ldquo;Set Instruction Pointer&rdquo;, which allows you to which moves the execution point and sets the next statement of code to be executed.</p>\n<h3>Xamarin</h3>\n<p>The <a href=\"https://www.xamarin.com/live\">Xamarin Live Player</a> is also included in Visual Studio 2017 version 15.4 Preview. This enables developers to develop, test, and debug mobile apps directly on their iOS and Android devices using only Visual Studio and a device. It&rsquo;s meant to simplify getting started with mobile development. For instructions on how to try it out, please refer to the <a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">Preview Release Notes</a> and, of course, please <a href=\"https://developercommunity.visualstudio.com/\">tell us what you think</a>!</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image0011.gif\"><img width=\"800\" height=\"486\" title=\"Xamarin Live Player\" alt=\"Xamarin Live Player\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image001_thumb1.gif\"></a></p>\n<h2>The Fundamentals</h2>\n<h3>Installer Behavior and Acquisition Experience.</h3>\n<p>Visual Studio 2017 version 15.4 Preview contains some notable install experience improvements. For example, if you encounter any installation errors, we now provide better assistance in discovering solutions. If some component fails to install and someone else had already reported a similar issue, then the installer error message will link back to the <a href=\"https://developercommunity.visualstudio.com/spaces/8/index.html\">Visual Studio Developer Community</a> and point you to info that should help you diagnose and resolve the problem.</p>\n<h3>Productivity Improvements</h3>\n<p>There are a handful of new productivity features that will help you be more efficient and effective as you develop your code. For example, with this Preview, if you&rsquo;re a C#, VB, or Python developer, you can navigate around your project faster because Ctrl+Click will now Go To Definition. We&rsquo;ve continued to improve performance and memory usage as compared to earlier releases. Lastly, we&rsquo;ve refined <a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/03/09/live-unit-testing-in-visual-studio-2017-enterprise/\">Live Unit Testing</a> by making it easier to initiate with a start command in the right click context menu as well as in the Team Explorer window. Live Unit Testing is better integrated with MSTest for use in manual mode. <b></b></p>\n<h3>C++ Development</h3>\n<p>You can now use <a href=\"https://aka.ms/vslinuxcmake\">CMake for Linux C++ development in Visual Studio</a>, which allows you to use CMake based projects that target Windows, Linux, or both. Simply open a folder with your CMake project, select Linux as your target and upon connecting to your Linux machine your sources are synchronized for you. Once the CMake cache generation is complete you&rsquo;ll have full IntelliSense for your project and targets for building, running and debugging within Visual Studio.</p>\n<p>In addition to CMake support for Linux C++ development, with Visual Studio 2017 version 15.4 Preview you can now benefit from CMake version 3.9 and improved support for projects with multiple CMakeLists.</p>\n<h2>Data Science Tooling</h2>\n<p>If you&rsquo;re a Data Scientist using R, we&rsquo;ve added some great new features to Visual Studio 2017 version 15.4 Preview. Now you can use the full power of Visual Studio to connect to an R session running on a remote computer that is running on Linux or Windows. We support running against on-premise and cloud (Azure) computers as well. In the IDE, we&rsquo;ve added error squiggles (inline underlines) that will highlight places where you can improve your R code. Finally, we&rsquo;ve added Live RMarkdown editing, which gives you a live preview of your markdown edits as you<i> </i>type.</p>\n<h2>Try it out today!</h2>\n<p>If you&rsquo;re not familiar with Visual Studio Previews, take a moment to read the <a href=\"https://www.visualstudio.com/en-us/productinfo/vs2017-release-rhythm\">Visual Studio 2017 Release Rhythm</a>. Remember that Visual Studio 2017 Previews will install <em>side by side</em> with released bits, so they should not impact your machine. Previews provide an opportunity for you to receive fixes faster and try out upcoming functionality before it becomes mainstream. Similarly, the Previews enable the Visual Studio Engineering team to validate usage, incorporate suggestions, and detect flaws earlier in the development process. We are highly responsive to feedback coming in through the Previews and look forward to hearing from you.</p>\n<p>Please <a href=\"https://www.visualstudio.com/vs/preview/\">Install the Visual Studio 2017 Preview today</a>, exercise your favorite workloads, and tell us what you think. You can report issues or send feedback to us via <a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">Report a Problem in the IDE</a> or you can share a suggestion on <a href=\"https://visualstudio.uservoice.com/forums/121579\">UserVoice</a>. You can also track your bugs, learn from others, and receive helpful information on the <a href=\"https://developercommunity.visualstudio.com/\">developer community portal</a>.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"357\" height=\"410\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Christine-Ruana-e1498715608219.jpg\"></td>\n<td valign=\"top\" width=\"450\"><strong>Christine Ruana</strong>, Principal Program Manager, Visual Studio\n<p>Christine is on the Visual Studio release engineering team and is responsible for making Visual Studio releases available to our customers around the world.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-24T02:00:20","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/23/visual-studio-2017-version-15-4-preview/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Visual Studio 2017 Version 15.4 Preview","Type":1,"TitleCn":"视觉工作室 2017年版本 15.4 预览","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Visual%20Studio%202017%20Version%2015.4%20Preview\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>我很高兴地宣布，第一个预览的视觉工作室 2017 15.4 版本现已可用 ！您可以<a href=\"https://www.visualstudio.com/vs/preview/\">下载它从这里</a>要么，或如果您已经安装的预览，您会收到通知有可用的更新。这个新的预览包含新的工具和功能在几个关键工作量普遍 Windows 平台 (UWP) 发展、.NET 桌面开发，和手机和游戏开发等。它还继续我们的驱动器，以改善和提高生产力和可靠性和地址客户报告的 bug 等基本面。阅读功能突出显示摘要如下，并检查了<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">视觉工作室 2017年版本 15.4 预览发行说明</a>的详细说明，此预览中包含的新功能。</p>\n<h2>通用的 Windows 平台开发 — — Windows 下跌创作者更新</h2>\n<p>第一，视觉工作室 2017 版本 15.4 UWP 开发人员针对即将到来的 Windows 秋天创作者更新带来第一类的支持。要开始构建应用程序对此新的 Windows 更新，首先，请确保您注册的<a href=\"https://insider.windows.com/en-us/\">Windows 内幕交易程序</a>。一旦你被录取，安装最新的预发布版本的<a href=\"https://www.microsoft.com/en-us/software-download/windowsinsiderpreviewSDK\">Windows 内幕预览 SDK</a>。</p>\n<h3>.NET 标准 2.0 支持</h3>\n<p>随着 Windows 秋天创作者更新的发布，您将能够利用<a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/14/announcing-net-standard-2-0/\">.NET 标准 2.0</a>的力量，构建 UWP 应用程序时。.NET 2.0 标准 Windows 10 UWP 开发人员 — — 其中许多将熟悉的 Windows 桌面 （WPF 中，Windows 窗体，等等） 开发人员带来了 20000 多.NET Api。.NET 标准 2.0 还允许各种.NET 项目类型作为项目到项目的引用，或作为 NuGet 程序包之间的代码共享更加方便。我们开始看到各种各样 NuGet 程序包的显示在 NuGet.org 与.NET 2.0 标准，支持所有的一切都将供 UWP 项目内部消费。</p>\n<p>若要生成 UWP 应用程序在使用新的.NET 标准 2.0 Api，确保你有 Windows 秋天创作者更新内幕 SDK 预览安装，并将您的项目的<b>最低</b>版本设置为此版本的 SDK。</p>\n<h3>Windows 应用程序包装项目</h3>\n<p>在 Visual Studio 2017 年版本 15.4 预览，你会得到第一的聚醚醚酮在启用经典 Windows 桌面应用程序使用.NET 或 c + + 包装简化分发通过侧加载或提交到 Windows 应用商店.appx 包内创建<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">新的项目模板</a>。这些模板致力为这两个新的经典 Windows 桌面项目，以及现有的项目。</p>\n<h3>XAML 编辑和继续改善</h3>\n<p>您可以编辑或删除 XAML 资源使用 XAML 编辑和继续。此外，您还可以添加 ControlTemplates 您的 xaml 同时使用 XAML 编辑和继续。要利用这些新的功能，请确保您正在运行 Windows 秋天创作者更新预览。</p>\n<h2>移动和游戏开发</h2>\n<h3>团结</h3>\n<p>在 Visual Studio 2017 年版本 15.4 预览在统一的工具而进行了改进和错误修正。还有更好的最新公布的统一 2017.1年运行时支持。此预览还支持<a href=\"https://forum.unity3d.com/threads/example-project-assembly-definition-files.482313/\">用户定义的托管程序集</a>，有助于大幅减少项目脚本编译时间的统一 2017.2年进来的功能。为了帮助调试，您可以现在\"设置指令指针\"，它允许你到哪移动执行点和设置要执行的代码的下一个语句。</p>\n<h3>Xamarin</h3>\n<p><a href=\"https://www.xamarin.com/live\">Xamarin 住球员</a>还包括在 Visual Studio 2017 年版本 15.4 预览。这使开发人员能够开发、 测试和调试手机应用程序直接在他们的 iOS 和 Android 设备只使用 Visual Studio 和设备上。这意味着为了简化移动开发入门。有关如何试试看说明，请参阅<a href=\"https://www.visualstudio.com/en-us/news/releasenotes/vs2017-preview-relnotes\">预览发行说明</a>，而且，当然，请<a href=\"https://developercommunity.visualstudio.com/\">告诉我们你的想法</a>！</p>\n<p><a href=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image0011.gif\"><img width=\"800\" height=\"486\" title=\"Xamarin Live Player\" alt=\"Xamarin Live Player\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/clip_image001_thumb1.gif\"></a></p>\n<h2>基本面</h2>\n<h3>安装程序行为和习得经验。</h3>\n<p>视觉工作室 2017年版本 15.4 预览包含一些显著的安装体验的改进。例如，如果你遇到任何安装错误，我们现在提供更好的援助，在发现解决方案。如果某些组件安装失败，其他人已经报告了类似的问题，然后安装程序错误消息将链接回<a href=\"https://developercommunity.visualstudio.com/spaces/8/index.html\">Visual Studio 开发人员社区</a>和点你到信息应该可以帮助您诊断和解决问题。</p>\n<h3>生产力的提高</h3>\n<p>有少量的新的生产力功能，将帮助你更有效地为您开发您的代码。例如，这个预览，如果你是一个 C#、 VB，或者 Python 的开发人员，您可以导航与围绕您的项目更快因为 Ctrl + 单击将现在转到定义。我们一直以提高性能和内存使用情况与早期版本相比。最后，我们已经<a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/03/09/live-unit-testing-in-visual-studio-2017-enterprise/\">生活单元测试</a>精制而成使它更容易着手在右键单击上下文菜单在团队资源管理器窗口中启动命令。单元测试是更好地配合 MSTest 在手动模式下使用。<b></b></p>\n<h3>C + + 开发</h3>\n<p>您现在可以使用<a href=\"https://aka.ms/vslinuxcmake\">Visual Studio 中的 Linux c + + 开发的 CMake</a>，它允许您使用针对 Windows、 Linux，或两者的 CMake 基础项目。只需打开一个文件夹与您的 CMake 项目、 选择 Linux 作为你的目标并连接到您的 Linux 机器你源同步为您。CMake 缓存生成完成后你得为您的项目的完整智能感知和生成、 运行和调试 Visual Studio 中的目标。</p>\n<p>除了 Linux c + + 开发的 CMake 支持，与视觉工作室 2017年 15.4 预览你的版本现在可以受益于 CMake 版本 3.9 和改进对于具有多个 CMakeLists 项目的支持。</p>\n<h2>数据科学工具</h2>\n<p>如果你是一名使用 R 的数据科学家，我们已经添加一些伟大的新功能到 Visual Studio 2017 版本 15.4 预览。现在你可以使用 Visual Studio 的全部力量来连接到运行在 Linux 或 Windows 的远程计算机上运行的 R 会话。我们支持针对运行的前提和云 (Azure) 计算机以及。在 IDE 中，我们已经添加了错误的花体字 （内联下划线），将突出在哪里你可以提高你 R 代码的地方。最后，我们添加了住 RMarkdown 编辑，让你有你降价编辑作为你的实时预览<i></i>类型。</p>\n<h2>今天试一下 ！</h2>\n<p>如果你不熟悉 Visual Studio 预览，花时间来阅读<a href=\"https://www.visualstudio.com/en-us/productinfo/vs2017-release-rhythm\">视觉工作室 2017年释放节奏</a>。还记得视觉工作室 2017年预览将释放位，安装<em>肩并肩</em>，所以他们应该不会影响您的机器。预览提供机会让你更快地获得补丁程序，尝试一下即将到来的功能之前它成为主流。同样，预览启用视觉工作室工程团队验证用法，采纳建议，并找出不足，早些时候在发展过程中。我们高度响应反馈通过预览进来，期待着你的听力。</p>\n<p>请<a href=\"https://www.visualstudio.com/vs/preview/\">安装 Visual Studio 2017 预览今天</a>，行使您最喜欢的工作负载，并告诉我们你的想法。您可以报告问题或通过<a href=\"https://docs.microsoft.com/en-us/visualstudio/ide/how-to-report-a-problem-with-visual-studio-2017\">报告在 IDE 中的问题</a>向我们发送反馈您可以共享<a href=\"https://visualstudio.uservoice.com/forums/121579\">UserVoice</a>建议。此外可以跟踪您的 bug、 向他人学习，和得到有用的信息，<a href=\"https://developercommunity.visualstudio.com/\">开发人员社区门户</a>上。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img width=\"357\" height=\"410\" src=\"https://msdnshared.blob.core.windows.net/media/2017/06/Christine-Ruana-e1498715608219.jpg\"></td>\n<td valign=\"top\" width=\"450\"><strong>陆恭 Ruana</strong>，首席项目经理，视觉工作室<p>克里斯蒂娜在 Visual Studio 的版本工程学团队并负责使我们世界各地的客户可以使用 Visual Studio 的版本。</p></td>\n</tr></tbody></table>"},{"Id":57,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-23T00:30:15","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Create%20a%20CI%2FCD%20pipeline%20for%20containerized%20ASP.NET%20Core%20projects\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>At //BUILD 2017, we <a href=\"http://aka.ms/cd4vsblog4\">shipped</a> an update to the <a href=\"http://aka.ms/CD4VS\">Continuous Delivery Tools for Visual Studio</a> with support for configuring a Continuous Integration and Continuous Delivery pipeline for <a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET Core</a> projects with <a href=\"https://www.docker.com/what-container\">container support</a> to an existing <a href=\"https://docs.microsoft.com/en-us/azure/app-service-web/app-service-linux-intro\">Azure App Service on Linux</a> directly from <a href=\"https://www.visualstudio.com/downloads/\">Visual Studio 2017</a>. With the latest update to the extension we introduced the ability to create a new Azure App Service On Linux while configuring continuous delivery.</p>\n<p>To configure continuous delivery to App Service on Linux, create or open an existing solution with an ASP.NET Core project. Add Docker support to the project and ensure that the solution is under version control on VSTS or GitHub. Right click on the solution in Solution Explorer and select Configure Continuous Delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\" rel=\"noopener noreferrer\"><img width=\"612\" height=\"616\" title=\"Select Configure Continuous Delivery in Solution Explorer\" alt=\"Select Configure Continuous Delivery in Solution Explorer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\"></a></p>\n<p>Then, select App Service (Linux) as the Target Host type and use the default newly created app service or select an existing Azure App Service to act as a target for continuous delivery.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img width=\"780\" height=\"492\" title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\"></a></p>\n<p>You can click the &ldquo;Edit&hellip;&rdquo; link beside the App Service field to edit the new App Service configuration. You can change the Location, Resource Group, App Service Plan and Service Plan size using the &ldquo;Edit App Service&rdquo; dialog.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\" rel=\"noopener noreferrer\"><img width=\"549\" height=\"327\" title=\"Edit App Service Dialog\" alt=\"Edit App Service Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\"></a></p>\n<p>If you are not using an existing App Service as your target host, the registry settings for that App Service should match your selected container registry as the VSTS release definition only updates the image name and tag, not the full container registry settings. With the latest update to the extension, you now get an error that the container registry settings must change for continuous delivery to work successfully.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\" rel=\"noopener noreferrer\"><img width=\"744\" height=\"430\" title=\"Warning for container registry settings\" alt=\"Warning for container registry settings\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\"></a></p>\n<p>Clicking &ldquo;Allow App Service settings change to a private registry&rdquo;, will enable the Configure Continuous Delivery Dialog to update the selected App Service settings when you click OK to configure continuous delivery</p>\n<h3>Please keep the feedback coming!</h3>\n<p>Thank you to everyone who has reached out and shared feedback and ideas so far. We&rsquo;re always looking for feedback on where to take this <a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs extension</a> next. There&rsquo;s a <a>Slack channel</a> and a team alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>Ahmed Metwally</strong>, Senior PM, Visual Studio<br>\n@cd4vs (<a href=\"https://twitter.com/cd4vs)\">https://twitter.com/cd4vs)</a>\n<p>Ahmed is a Program Manager on the Visual Studio Platform team focused on improving team collaboration and application lifecycle management integration.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-23T00:30:15","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/22/create-a-cicd-pipeline-for-containerized-asp-net-core-projects/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Create a CI/CD pipeline for containerized ASP.NET Core projects","Type":1,"TitleCn":"创建一个 CI/CD 管道集装箱 ASP.NET Core 项目","Content":"<p><em>我们正在改善您的体验视觉工作室博客上。如果你能分享您的反馈意见通过这个时间应少于 2 分钟的<a href=\"https://www.research.net/r/M7GZL9D?title=Create%20a%20CI%2FCD%20pipeline%20for%20containerized%20ASP.NET%20Core%20projects\">简短的调查</a>，它会很有帮助。谢谢你 ！</em></p>\n<p>在 //BUILD 2017 年，我们<a href=\"http://aka.ms/cd4vsblog4\">运</a>到<a href=\"http://aka.ms/CD4VS\">Visual Studio 连续交付工具</a>与支持配置<a href=\"https://docs.microsoft.com/en-us/aspnet/core/\">ASP.NET 核心</a>持续集成和持续交付管道更新项目<a href=\"https://www.docker.com/what-container\">容器支持</a>到现有的<a href=\"https://docs.microsoft.com/en-us/azure/app-service-web/app-service-linux-intro\">Azure 应用程序服务在 Linux 上</a>直接从<a href=\"https://www.visualstudio.com/downloads/\">2017 年开始工作室视觉</a>。与最新的更新到扩展我们介绍了配置持续交付时创建一个新 Azure 应用程序服务对 Linux 的能力。</p>\n<p>在 Linux 上配置连续传递到应用程序服务，请创建或打开一个现有的解决方案与 ASP.NET 核心项目。向项目中添加码头工人支持并确保解决方案在 VSTS 或 GitHub 上的版本控制之下。右键单击解决方案资源管理器中的解决方案并选择配置持续交付。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\" rel=\"noopener noreferrer\"><img width=\"612\" height=\"616\" title=\"Select Configure Continuous Delivery in Solution Explorer\" alt=\"Select Configure Continuous Delivery in Solution Explorer\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Select-Configure-Continuous-Delivery-in-Solution-Explorer.png\"></a></p>\n<p>然后，选择应用程序服务 (Linux) 作为目标主机类型和使用新创建的应用程序服务的默认值或选择现有的 Azure 应用程序服务，作为持续交付的目标。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\" rel=\"noopener noreferrer\"><img width=\"780\" height=\"492\" title=\"Configure Continuous Delivery Dialog\" alt=\"Configure Continuous Delivery Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Configure-Continuous-Delivery-Dialog.png\"></a></p>\n<p>您可以单击要编辑的新的应用程序服务配置的应用程序服务字段旁边的\"编辑...\"链接。您可以更改位置、 资源组、 应用程序服务计划和服务计划的大小，使用\"编辑应用程序服务\"对话框。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\" rel=\"noopener noreferrer\"><img width=\"549\" height=\"327\" title=\"Edit App Service Dialog\" alt=\"Edit App Service Dialog\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Edit-App-Service.png\"></a></p>\n<p>如果您不使用现有的应用程序服务作为您的注册表设置，应用程序服务应与匹配的目标主机您选定的容器注册表 VSTS 释放定义只会更新图像名称和标记、 不完整的集装箱注册表设置。随着延长至最新的更新，你现在得到的容器注册表设置必须更改为持续的交付工作成功的错误。</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\" rel=\"noopener noreferrer\"><img width=\"744\" height=\"430\" title=\"Warning for container registry settings\" alt=\"Warning for container registry settings\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/CICD-pipeline-for-containerized-ASP.NET-Core-projects-Warning-for-container-registry-settings.png\"></a></p>\n<p>单击\"允许应用程序服务设置更改到私有注册中心\"，将启用配置连续交付对话框以更新所选的应用程序服务设置，当您单击确定以配置连续传递</p>\n<h3>请保持反馈来 ！</h3>\n<p>谢谢大家有伸出和共享反馈和想法到目前为止。我们一直在寻找反馈在哪里下, 一步采取此<a href=\"https://blogs.msdn.microsoft.com/somasegar/2013/02/19/the-evolution-of-devlabs/\">Microsoft DevLabs 扩展名</a>。有一种<a>松弛的通道</a>和团队别名<a>vsdevops@microsoft.com</a>在那里你可以伸出，团队和其他人在社区分享关于这一主题的想法。</p>\n<table cellspacing=\"0\" cellpadding=\"2\" width=\"600\" border=\"0\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2017/02/Ahmed-Metwally1.jpg\" width=\"127\" height=\"190\"></td>\n<td valign=\"top\" width=\"450\"><strong>艾哈迈德 Metwally</strong>，高级 PM 视觉工作室<br>@cd4vs (<a href=\"https://twitter.com/cd4vs)\">https://twitter.com/cd4vs)</a>\n<p>艾哈迈德是在 Visual Studio 平台团队专注于改善团队协作和应用程序生命周期管理集成的项目经理。</p></td>\n</tr></tbody></table>"},{"Id":35,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-22T02:30:04","Description":"<p><em>We are looking to improve your experience on the Visual Studio Blog. It would be very helpful if you could share your feedback via this<a href=\"https://www.research.net/r/M7GZL9D?title=Committing%20with%20Confidence%3A%20Commit%20Time%20Code%20Quality%20Information%20Updated\"> short survey</a> that should take less than 2 minutes. Thanks!</em></p>\n<p>In the earlier post <a href=\"https://blogs.msdn.microsoft.com/visualstudio/2017/05/22/committing-with-confidence-getting-code-quality-information-at-commit-time/\">&ldquo;Committing with Confidence: Getting Code Quality Information at Commit Time&rdquo;</a> , we introduced the new Build and Code Analysis Results panel, which gives you a heads-up reminder at commit-time of issues detected by any code analysis tool that puts results in the error list. This means you can take care of those issues before they propagate into your team&rsquo;s CI/CD process, and commit with confidence.</p>\n<p>The panel shows results both for live edit-time analysis (e.g. C#/VB Analyzers) and, via the Refresh Analysis button, for batch-style static analysis (e.g. C++ Static Analysis tools). It is supported on Visual Studio 2017 Enterprise. At present it supports code being committed to a Git Repo.</p>\n<h2>Focus on the issues that relate to your changed files</h2>\n<p>In response to your feedback, we have just released a new version of the <a href=\"http://aka.ms/cd4vs\">Continuous Delivery Tools for Visual Studio</a> extension which updates the panel to show issue counts <b>only for files that are changed in the set of files you are committing</b>, so that you can focus only on the issues related to your changes.</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Team-Explorer.png\" rel=\"noopener noreferrer\"><img title=\"Commit Time Code Quality Information Updated - Team Explorer \" alt=\"Commit Time Code Quality Information Updated - Team Explorer \" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Team-Explorer.png\" width=\"403\" height=\"430\"></a></p>\n<p>The View Issues link will take you straight to a view of the Error List filtered to just the changed files too:</p>\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Focus-on-issues-related-to-changed-files.png\" rel=\"noopener noreferrer\"><img title=\"Commit Time Code Quality Information Updated - Focus on issues related to changed files\" alt=\"Commit Time Code Quality Information Updated - Focus on issues related to changed files\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Commit-Time-Code-Quality-Information-Updated-Focus-on-issues-related-to-changed-files.png\"></a></p>\n<h3>Please continue to share your feedback!</h3>\n<p>Please download and try the <a href=\"http://aka.ms/cd4vs\">Continuous Delivery Tools for Visual Studio</a> extension, try out the updated Build and Code Analysis Results panel and let us know what you think of the change, as well as the overall experience.</p>\n<p>Tell us more about what you think about this by filling out a short <a href=\"https://aka.ms/vs2017cqcigeneral\">survey</a></p>\n<p>We&rsquo;re always looking for feedback on where to take this Microsoft DevLabs extension next; features from the extension have already been refined using that feedback and incorporated into the core Visual Studio product in updates. There&rsquo;s a <a href=\"https://aka.ms/cd4vs_slack\">Slack channel</a> and a team email alias <a>vsdevops@microsoft.com</a> where you can reach out to the team and others in the community sharing ideas on this topic.</p>\n<table border=\"1\" cellspacing=\"0\" cellpadding=\"2\" width=\"650\"><tbody><tr><td valign=\"top\" width=\"150\"><img src=\"https://msdnshared.blob.core.windows.net/media/2016/11/Mark-Wilson-Thomas.jpg\"></td>\n<td valign=\"top\" width=\"400\"><strong>Mark Wilson-Thomas</strong>, Senior Program Manager, Visual Studio IDE Team<br><a target=\"_blank\" href=\"https://twitter.com/MarkPavWT\" rel=\"noopener noreferrer\">@MarkPavWT</a>\n<p>Mark is a Program Manager on the Visual Studio IDE team, where he&rsquo;s been building developer tools for nearly 10 years. He currently looks after the Visual Studio Editor. Prior to that, he worked on tools for Office, SQL, WPF and Silverlight.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-22T02:30:04","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/21/committing-with-confidence-commit-time-code-quality-information-updated/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Committing with Confidence: Commit Time Code Quality Information Updated","Type":1,"TitleCn":null,"Content":null},{"Id":59,"Author":"Visual Studio Blog","Categories":"The Visual Studio Blog","CreateTime":"2017-08-22T00:30:06","Description":"<p>You may have heard the industry buzzword &ldquo;serverless computing.&rdquo; Whether you are already a serverless ninja, or still on the fence about the bizarre name, read on! How does it work? Why should you care? Is it just a fad, or a real trend in computing?</p>\n<h2>Serverless computing defined</h2>\n<p>Serverless computing generally encompasses three things: 1) abstraction of servers, 2) event-driven scale and 3) micro-billing.</p>\n<ol><li><b>Abstraction of servers.</b> Serverless computing is fully managed. Users never explicitly reserve server instances; this is handled by the platform. Each function execution could run on a different compute instance, and this is completely transparent to your code.</li>\n<li><b>Event-driven scale. </b>Serverless is an excellent fit for workloads that respond to incoming events. Events include timers (e.g., run this function everyday at 10 am), HTTP (API and WebHook scenarios), queues (e.g., order processing), and much more. Instead of writing an entire application, you author a &ldquo;function,&rdquo; which contains both code and metadata about its triggers and bindings. The platform automatically schedules your function to run and scales the number of compute instances based on the rate of incoming events. Triggers define how a function is invoked. <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings\">Input and output bindings</a> provide a declarative way to connect to services from within your code. For example, suppose you want to write a new file to Azure Blob Storage every five minutes. You would use a <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-scheduled-function\">Timer trigger</a> and a <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob\">blob output binding</a>:\n<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\" rel=\"noopener noreferrer\"><img title=\"Azure Functions for DotNet Developers - Event Driven Scale\" alt=\"Azure Functions for DotNet Developers - Event Driven Scale\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\"></a></p>\n</li>\n<li><b>Micro-billing. </b>In traditional computing, there is a notion of per-second billing, but that&rsquo;s often not as useful as it sounds. Even if you have a website that gets only 1 hit a day, you must still pay for a full day&rsquo;s worth of availability. With serverless, you pay only when your code is executing. If there are no active function executions, you are not charged. For example, if your code runs once a day for 2 minutes, you are charged for 1 execution and 2 minutes of computing. For more details on billing, see <a href=\"https://azure.microsoft.com/en-us/pricing/details/functions/\">Azure Functions pricing</a>.</li>\n</ol><p>Together, these features enable you to focus on apps, not servers. That means you&rsquo;ll have reduced DevOps and a more productive computing environment. Customers have found that they are able to deploy solutions much more quickly than before. <a href=\"https://customers.microsoft.com/en-us/story/fujifilm-software-co-ltd\">Projects can now be completed in days or weeks, rather than months</a>.</p>\n<p>Azure Functions is Microsoft&rsquo;s serverless computing platform. Serverless involves more than just computing; it includes databases, messaging, and workflows. To learn more about the entire Azure serverless platform, see <a href=\"https://azure.com/serverless\">azure.com/serverless</a>.</p>\n<h2>Why serverless matters</h2>\n<p>More so than any other cloud computing paradigm, serverless frees you from managing infrastructure and enables you to focus on your business problem. Though serverless is still in its infancy, there are now many vendors who offer serverless platforms.</p>\n<p>Serverless is not just a fad or buzzword. Rather, serverless represents a dramatic shift in how developers think about cloud computing. With serverless, you need only worry about your code and how it is triggered. The platform takes care of the rest.</p>\n<h2>Serverless and tooling</h2>\n<p>When most cloud vendors launched their serverless offerings, there were many barriers to developer productivity. There was no support for debugging, there was no local development experience, and monitoring functions was hard. Despite this, the new programming model was so productive that serverless become a popular trend.</p>\n<p>As you might expect, Azure Functions included productivity features from the start. We have a tooling and local development experience that is unique among vendors. You can run the Azure Functions runtime on your local machine. Aside from the scale-out, it&rsquo;s the same runtime as in the cloud. You can even trigger off events in Azure, enabling a hybrid debugging experience.</p>\n<p>For monitoring, Azure Functions provides <a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2017/04/06/azure-functions-application-insights/\">Azure Application Insights integration</a>, an unparalleled monitoring experience. You can connect to a live event stream, see runtime metrics, and log your own custom metrics. Application Insights supports a rich query language, and you can create automated alerts.</p>\n<h2>.NET support on Azure Functions</h2>\n<p>Since its initial preview, Azure Functions has had first-class C# support. We now support <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-csharp\">C#</a> and <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-fsharp\">F# scripting</a> as well as <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library\">C# class libraries</a>. The Function portal focuses on the scripting experience, while the Visual Studio tooling is based on class libraries.</p>\n<p><a>The Visual Studio Functions project is a regular .NET class library that references the Functions NuGet package </a><a href=\"https://www.nuget.org/packages/Microsoft.NET.Sdk.Functions\">Microsoft.NET.Sdk.Functions</a>. All standard Visual Studio features are supported, such as unit testing, debugging, and publishing to Azure.</p>\n<p>Azure Functions also supports other languages, such as JavaScript, PowerShell, and Python.</p>\n<h2>Try it out</h2>\n<p>We&rsquo;ve recently released the RTW version of the Azure Functions tools in Visual Studio 2017 Update 3. Azure Functions tooling is included in the <a href=\"https://docs.microsoft.com/visualstudio/install/install-visual-studio#install-workloads\">Azure workload</a>. Follow this tutorial to get started in 5 minutes: <a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-your-first-function-visual-studio\">Create your first function using Visual Studio</a>.</p>\n<h2>Learn more</h2>\n<p>Check out the following videos:</p>\n<ul><li><a href=\"https://channel9.msdn.com/Shows/Cloud+Cover/Episode-231-Azure-Functions-Local-Debugging-and-More-with-Donna-Malayeri\">Cloud Cover: Azure Functions Local Debugging and More</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/XamarinShow/Episode-28-Azure-Functions-for-Mobile-Apps-with-Donna-Malayeri\">The Xamarin Show: Azure Functions for Mobile Apps</a></li>\n<li><a href=\"https://channel9.msdn.com/Blogs/Azure/Build-apps-faster-with-Azure-Serverless?term=azure%20functions\">Microsoft Mechanics: Build apps faster with Azure Serverless</a></li>\n<li><a href=\"https://channel9.msdn.com/events/Build/2017/T6003?term=donna%20malayeri\">BUILD 2017: A day in the life of an Azure serverless developer</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/Tuesdays-With-Corey/Tuesdays-with-Cory-Azure-Functions-Proxies-extravaganza?term=donna%20malayeri\">Tuesdays with Cory: Azure Functions Proxies extravaganza</a></li>\n</ul><p>Connect with us:</p>\n<ul><li>For product news, follow <a href=\"https://twitter.com/AzureFunctions\">@AzureFunctions</a>.</li>\n<li>For technical questions, post on the <a href=\"https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=azurefunctions\">MSDN forums</a> or <a href=\"https://stackoverflow.com/questions/tagged/azure-functions\">StackOverflow</a>. The entire Functions engineering team monitors these questions, so you&rsquo;re sure to get an expert answer.</li>\n<li>To report bugs or file feature requests, open an issue on the <a href=\"https://github.com/Azure/Azure-Functions\">Azure-Functions</a> GitHub repo. Include &ldquo;Visual Studio&rdquo; in the issue title.</li>\n</ul><table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td width=\"150\" valign=\"top\"><img width=\"350\" height=\"350\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Donna-Malayeri.jpg\"></td>\n<td width=\"500\" valign=\"top\">Donna Malayeri, Program Manager, Azure Functions<br><a target=\"_blank\" href=\"https://twitter.com/lindydonna\" rel=\"noopener noreferrer\">@lindydonna</a>\n<p>Donna Malayeri is a program manager on the Azure Functions team, where she is responsible for the developer experience and the Visual Studio tooling. She previously worked on products such as Azure Mobile Services, Reactive Extensions (Rx), Visual F#, and Scala. She holds a PhD in programming languages from Carnegie Mellon University.</p></td>\n</tr></tbody></table>","LastUpdateTime":"2017-08-22T00:30:06","Link":"https://blogs.msdn.microsoft.com/visualstudio/2017/08/21/why-you-should-care-about-serverless-computing/","MobileContent":null,"PublishId":0,"Status":1,"Title":"Why you should care about serverless computing","Type":1,"TitleCn":"为什么你要关心无服务器计算","Content":"<p>你可能听说过行业的时髦\"无服务器计算\"。你已经是一个无服务器的忍者，还是仍在犹豫奇怪的名字，请继续阅读 ！它是如何工作的？你为什么要在乎？它只是一种时尚或在计算一个真正的趋势？</p>\n<h2>无服务器计算定义</h2>\n<p>无服务器计算一般包括三件事： 1） 服务器、 2） 事件驱动的规模和 3） 微计费的抽象。</p>\n<ol><li><b>服务器抽象。</b>无服务器计算是完全托管的。用户从未明确保留服务器实例;这是由平台处理。每个函数执行可以在不同的计算实例上运行，这是对您的代码完全透明。</li>\n<li><b>事件驱动规模。</b>无服务器是为响应传入事件的工作负载非常适合这个职位。事件包括计时器 （例如，运行此功能每天在 10 上午），HTTP （API 和 WebHook 方案），队列 （例如，订单处理），和更多。而不是编写整个应用程序，您创作\"功能，\"包含代码和其触发器和绑定有关的元数据。平台自动安排你去运行这个函数和扩展的基于传入的事件发生率的计算实例数。触发器定义如何调用函数。<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-triggers-bindings\">的输入和输出绑定</a>提供的声明性方式连接到您的代码中的服务。例如，假设您想要写一个新的文件到 Azure Blob 存储每隔五分钟。您将使用一个<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-scheduled-function\">计时器触发</a>和<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-bindings-storage-blob\">blob 输出绑定</a>：<p><a target=\"_blank\" href=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\" rel=\"noopener noreferrer\"><img title=\"Azure Functions for DotNet Developers - Event Driven Scale\" alt=\"Azure Functions for DotNet Developers - Event Driven Scale\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Azure-Functions-for-DotNet-Developers-Event-Driven-Scale.png\"></a></p>\n</li>\n<li><b>微计费。</b>在传统计算中，是有概念的每秒计费，但这往往不是像它听起来的那么有用。甚至如果你有一个网站，获取只有 1 打一天，你仍然必须支付一整天的价值的可用性。与无服务器，你支付只有当您的代码执行。如果没有积极的函数的执行，你都不收费。例如，如果您的代码运行 2 分钟一天一次，你被指控为 1 执行和 2 分钟的计算。在帐单上的更多详细信息，请参阅<a href=\"https://azure.microsoft.com/en-us/pricing/details/functions/\">Azure 功能定价</a>。</li>\n</ol><p>在一起，这些功能使您能够专注于应用程序，不是服务器。这意味着你会减少了 DevOps 和更有效率的计算环境。客户发现，他们能够比以前更快地部署解决方案。<a href=\"https://customers.microsoft.com/en-us/story/fujifilm-software-co-ltd\">项目现在可以在天或数周，而不是几个月中完成</a>。</p>\n<p>蔚蓝的功能是微软的无服务器的计算平台。无服务器涉及到不仅仅计算;它包括数据库、 消息传递和工作流。要了解整个 Azure 无服务器平台的更多信息，请参阅<a href=\"https://azure.com/serverless\">azure.com/serverless</a>。</p>\n<h2>为什么无服务器问题</h2>\n<p>更多比任何其他云无服务器的计算范例，可以让你免于管理基础设施，使您可以专注于您的业务问题。虽无服务器仍然处于起步阶段，现在有许多供应商提供无服务器平台。</p>\n<p>无服务器是不只是时尚或流行词。相反，无服务器代表了戏剧性的在开发人员如何看待云计算。与无服务器，你需要只担心你的代码和它的触发方式。该平台照顾的休息。</p>\n<h2>无服务器和工具</h2>\n<p>当大多数的云供应商推出了其无服务器的服务时，那里有许多的障碍，开发人员的生产力。没有用于调试的支持，有了没有地方发展经验，和监测职能很难。尽管这样，新的编程模型是生产效率非常高，无服务器成为一种流行趋势。</p>\n<p>正如你可能期望，Azure 职能包括生产力功能从一开始。我们有供应商中是独一无二的模具和地方发展经验。您可以在本地计算机上运行 Azure 函数运行时。除了规模进行，它是同一运行时如云。你甚至可以触发事件在 Azure，使混合调试经验。</p>\n<p>监测，Azure 功能提供了<a href=\"https://blogs.msdn.microsoft.com/appserviceteam/2017/04/06/azure-functions-application-insights/\">Azure 应用程序见解一体化</a>，无与伦比的监测经验。你可以连接到现场的事件流，看到运行时的度量，并登录您自己自定义的度量标准。应用的见解支持一种丰富的查询语言，并且您可以创建自动发出警报。</p>\n<h2>Azure 函数的.NET 支持</h2>\n<p>自其初始的预览，Azure 功能已经有一流的 C# 支持。我们现在支持<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-csharp\">C#</a>和<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-reference-fsharp\">F # 脚本</a>，以及<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-dotnet-class-library\">C# 类库</a>。功能门户侧重于脚本的经验，而 Visual Studio 工具基于类库。</p>\n<p><a>Visual Studio 功能项目是一个普通的.NET 类库引用函数 NuGet 包</a><a href=\"https://www.nuget.org/packages/Microsoft.NET.Sdk.Functions\">Microsoft.NET.Sdk.Functions</a>.支持所有标准的 Visual Studio 功能，如单元测试、 调试和发布到 Azure。</p>\n<p>蔚蓝的功能还支持其他语言，如 JavaScript、 PowerShell 和 Python。</p>\n<h2>试试看</h2>\n<p>我们最近已经发布在 Visual Studio 2017 更新 3 Azure 功能工具的 RTW 版本。模具的蔚蓝职能列入<a href=\"https://docs.microsoft.com/visualstudio/install/install-visual-studio#install-workloads\">蔚蓝的工作量</a>。本教程要在 5 分钟内开始：<a href=\"https://docs.microsoft.com/en-us/azure/azure-functions/functions-create-your-first-function-visual-studio\">创建您的第一个函数使用 Visual Studio</a>。</p>\n<h2>了解更多信息</h2>\n<p>看看下面的视频：</p>\n<ul><li><a href=\"https://channel9.msdn.com/Shows/Cloud+Cover/Episode-231-Azure-Functions-Local-Debugging-and-More-with-Donna-Malayeri\">云量： 蔚蓝功能本地调试和更多</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/XamarinShow/Episode-28-Azure-Functions-for-Mobile-Apps-with-Donna-Malayeri\">Xamarin 显示： 蔚蓝功能为移动应用程序的</a></li>\n<li><a href=\"https://channel9.msdn.com/Blogs/Azure/Build-apps-faster-with-Azure-Serverless?term=azure%20functions\">微软力学： 与 Azure 无服务器更快地构建应用程序</a></li>\n<li><a href=\"https://channel9.msdn.com/events/Build/2017/T6003?term=donna%20malayeri\">生成 2017: 蔚蓝无服务器开发人员的生活中的一天</a></li>\n<li><a href=\"https://channel9.msdn.com/Shows/Tuesdays-With-Corey/Tuesdays-with-Cory-Azure-Functions-Proxies-extravaganza?term=donna%20malayeri\">科里 · 相约： 蔚蓝功能代理盛会</a></li>\n</ul><p>与我们连接：</p>\n<ul><li>产品新闻，请按照<a href=\"https://twitter.com/AzureFunctions\">@AzureFunctions</a>。</li>\n<li>由于技术问题，在<a href=\"https://social.msdn.microsoft.com/Forums/azure/en-US/home?forum=azurefunctions\">MSDN 论坛</a>或<a href=\"https://stackoverflow.com/questions/tagged/azure-functions\">计算器</a>上张贴。整个功能工程团队监测这些问题，所以你一定要得到专家的解答。</li>\n<li>若要报告 bug 或文件功能请求，请打开<a href=\"https://github.com/Azure/Azure-Functions\">Azure 功能</a>GitHub 回购问题。包括问题标题中的\"Visual Studio\"。</li>\n</ul><table width=\"650\" border=\"0\" cellspacing=\"0\" cellpadding=\"2\"><tbody><tr><td width=\"150\" valign=\"top\"><img width=\"350\" height=\"350\" src=\"https://msdnshared.blob.core.windows.net/media/2017/08/Donna-Malayeri.jpg\"></td>\n<td width=\"500\" valign=\"top\">唐娜马拉耶里，项目经理，Azure 功能<br><a target=\"_blank\" href=\"https://twitter.com/lindydonna\" rel=\"noopener noreferrer\">@lindydonna</a>\n<p>唐娜马拉耶里是 Azure 职能团队，项目经理，她负责为开发人员的体验和 Visual Studio 工具。她曾 Azure 移动服务、 无功扩展 (Rx)、 Visual F #，和 Scala 等产品。她在编程语言从卡内基 · 梅隆大学博士学位。</p></td>\n</tr></tbody></table>"},{"Id":47,"Author":"Rich Lander [MSFT]","Categories":".NET Blog","CreateTime":"2017-08-19T05:38:29","Description":"<p>A new update for .NET Framework is now available for the <a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext class</a>. The behavior of the AppContext class was recently regressed. The update returns the class to the correct behavior. This update affects the .NET Framework 4.6 and later. The update is not required on Windows 10.</p>\n<p>The <a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext class</a> was introduced in the <a href=\"https://blogs.msdn.microsoft.com/dotnet/2015/07/20/announcing-net-framework-4-6/#appcontext\">.NET Framework 4.6</a>. It&rsquo;s primary use is to enable developers to opt into new behavior in the .NET Framework that is not enabled by default. The regression prevents developers from opting into new behavior.</p>\n<p>You are only encouraged to install this update if you have used the AppContext class directly and are experiencing problems. Otherwise, you will&nbsp;get this update in one of&nbsp;the regular broader releases over the next one to two months.</p>\n<h2><a href=\"https://blogs.msdn.microsoft.com/dotnet#getting-the-update\"></a>Getting the Update</h2>\n<p>This update is available via the Microsoft Update Catalog.</p>\n<h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#downloading-kbs-from-microsoft-update-catalog\"></a>Downloading KBs from Microsoft Update Catalog</h3>\n<p>You can download patches from the table below. See <a href=\"https://blogs.msdn.microsoft.com/dotnet/2016/10/11/net-framework-monthly-rollups-explained/\">.NET Framework Monthly Rollups Explained</a> for an explanation on how to use this table to download patches from Microsoft Update Catalog.</p>\n<table><thead><tr><th>Product Version</th>\n<th>Preview of Quality Rollup KB</th>\n</tr></thead><tbody><tr><td><strong>Windows 8.1<br>\nWindows RT 8.1<br>\nWindows Server 2012 R2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038922\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></td>\n</tr><tr><td><strong>Windows Server 2012</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038921\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></td>\n</tr><tr><td><strong>Windows 7<br>\nWindows Server 2008 R2 SP1</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr><td>.NET Framework 4.6, 4.6.1, 4.6.2, 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr><tr><td><strong>Windows Server 2008 SP2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">Catalog</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr></tr><tr><td>.NET Framework 4.6</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr></tbody></table><h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#previous-rollups-and-updates\"></a>Previous Rollups and Updates</h3>\n<p>The last few .NET Framework Monthly updates are listed below for your convenience:</p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\">August 2017 Preview of Quality Rollup</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/08/net-framework-august-2017-security-and-quality-rollup/\">August 2017 Security and Quality Rollup</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/01/net-framework-july-2017-cumulative-quality-update-for-windows-10/\">July 2017 Cumulative Quality Update for Windows 10</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/25/net-framework-july-2017-quality-update\">July 2017 Quality Update for WPF</a></li>\n</ul>","LastUpdateTime":"2017-08-19T05:38:29","Link":"https://blogs.msdn.microsoft.com/dotnet/2017/08/18/net-framework-update-for-appcontext/","MobileContent":null,"PublishId":0,"Status":1,"Title":".NET Framework Update for AppContext","Type":1,"TitleCn":".NET 框架更新为 AppContext 的","Content":"<p>.NET 框架的新更新现供<a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext 类</a>。AppContext 类的行为，最近回归。更新返回到正确的行为的类。此更新影响 4.6 及更高版本的.NET 框架。更新不是需要 Windows 10。</p>\n<p>在<a href=\"https://blogs.msdn.microsoft.com/dotnet/2015/07/20/announcing-net-framework-4-6/#appcontext\">.NET 框架 4.6</a>介绍了<a href=\"https://docs.microsoft.com/dotnet/api/system.appcontext\">AppContext 类</a>。它的主要用途是使开发人员可以选择在默认情况下不启用.NET 框架的新行为。回归防止开发人员选择到新的行为。</p>\n<p>你只是鼓励要安装此更新，如果你有直接使用 AppContext 类和遇到的问题。否则，你会得到此更新在未来的一到两个月的定期更广泛版本之一。</p>\n<h2><a href=\"https://blogs.msdn.microsoft.com/dotnet#getting-the-update\"></a>获取更新</h2>\n<p>此更新程序可通过 Microsoft 更新目录。</p>\n<h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#downloading-kbs-from-microsoft-update-catalog\"></a>从微软更新目录下载 KBs</h3>\n<p>您可以从下面的表下载修补程序。解释如何使用此表可从 Microsoft Update 目录下载修补程序，请参阅<a href=\"https://blogs.msdn.microsoft.com/dotnet/2016/10/11/net-framework-monthly-rollups-explained/\">.NET 框架每月汇总解释</a>。</p>\n<table><thead><tr><th>产品版本</th>\n<th>预览质量汇总 KB</th>\n</tr></thead><tbody><tr><td><strong>Windows 8.1<br>Windows RT 8.1<br>Windows 服务器 2012 R2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038922\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038922\">4038922</a></td>\n</tr><tr><td><strong>Windows 服务器 2012</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038921\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038921\">4038921</a></td>\n</tr><tr><td><strong>Windows 7<br>了 Windows Server 2008 R2 SP1</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr><td>.NET 框架 4.6，4.6.1、 4.6.2、 4.7</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr><tr><td><strong>Windows 服务器 2008 SP2</strong></td>\n<td><strong><a href=\"http://www.catalog.update.microsoft.com/Search.aspx?q=4038923\">目录</a><br><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></strong></td>\n</tr><tr></tr><tr><td>.NET 框架 4.6</td>\n<td><a href=\"https://support.microsoft.com/kb/4038923\">4038923</a></td>\n</tr></tbody></table><h3><a href=\"https://blogs.msdn.microsoft.com/dotnet#previous-rollups-and-updates\"></a>以前的汇总和更新</h3>\n<p>下面列出了最后几个.NET 框架每月更新，为您提供便利：</p>\n<ul><li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/16/net-framework-august-2017-preview-of-quality-rollup/\">质量汇总 8 月 2017年预览</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/08/net-framework-august-2017-security-and-quality-rollup/\">8 月 2017年安全和质量汇总</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/08/01/net-framework-july-2017-cumulative-quality-update-for-windows-10/\">7 月 2017年累积质量更新为 Windows 10 的</a></li>\n<li><a href=\"https://blogs.msdn.microsoft.com/dotnet/2017/07/25/net-framework-july-2017-quality-update\">WPF 的 7 月 2017年质量更新</a></li>\n</ul>"},{"Id":44,"Author":"Pratap Lakshman [MSFT]","Categories":"Microsoft Application Lifecycle Management","CreateTime":"2017-08-18T22:13:59","Description":"Updating off pre-RTM bits once RTM ships ought to be routine. But if you have not already done so in the case of the .NET Core based Test projects, let me give you a reason to do so. vstest delegates discovery and execution of tests to test-framework-specific adapters. Adapters indicate the kind of test containers... <a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/\"> Read More</a>","LastUpdateTime":"2017-08-18T22:13:59","Link":"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/","MobileContent":null,"PublishId":0,"Status":1,"Title":"The TestContainer Capability","Type":1,"TitleCn":"容器的能力","Content":"更新了预 RTM 位一旦 RTM 船应该是常规。但如果你不已经在基于.NET 核心的情况下测试项目，让我给你个理由这样做。vstest 代表的发现和执行测试的测试框架特定适配器。适配器指示类型的测试容器...<a href=\"https://blogs.msdn.microsoft.com/devops/2017/08/18/the-testcontainer-capability/\">阅读更多</a>"}]
