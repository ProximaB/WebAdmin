@{
    ViewBag.Title = "任务";

}
<head>
    <style>
        .consoleWindow {
            max-height: 480px;
            overflow-y: scroll;
        }
    </style>
</head>

<div class="row">
    <div class="col-md-2">
        <h4>任务列表:</h4>
        <ul class="nav nav-pills nav-stacked">
            <li>
                资讯更新
                <ul class="nav nav-pills nav-stacked">
                    <li>
                        <a class="cursor-point"
                           data-bind="click:runTask.bind($data,'bingnews')">
                            更新必应新闻
                        </a>
                    </li>
                    <li>
                        <a class="cursor-point" data-bind="click:runTask.bind($data,'devblogs')">
                            官方博客
                        </a>
                    </li>
                </ul>
            </li>
            <li>
                视频更新
                <ul class="nav nav-pills nav-stacked">
                    <li>
                        <a class="cursor-point"
                           data-bind="click:runTask.bind($data,'c9article')">
                            更新C9列表
                        </a>
                    </li>
                    <li>
                        <a class="cursor-point"
                           data-bind="click:runTask.bind($data,'mvavideos')">
                            更新MvaVideos
                        </a>

                    </li>
                    <li>
                        <a class="cursor-point"
                           data-bind="click:runTask.bind($data,'mvadetails')">
                            更新mva详情
                        </a>
                    </li>
                </ul>
            </li>
        </ul>
    </div>

    <div class="col-md-10">
        <h4>执行输出:</h4>

        <div class="panel">
            <pre><code data-bind="html:consoleInformation" class="consoleWindow"></code></pre>
        </div>

    </div>
</div>

@section Scripts
    {
    <script>
        $(document).ready(function () {
            const scheme = document.location.protocol === "https:" ? "wss" : "ws";
            const port = document.location.port ? (`:${document.location.port}`) : "";
            const url = `${scheme}://${document.location.hostname}${port}/task/runtask`;
            let socket = new WebSocket(url);
            let consolemsg = "";


            var viewModel = {
                consoleInformation: ko.observable(),
                runTask: function (type) {

                    consolemsg = "";
                    if (!socket ||  socket.readyState === WebSocket.CLOSED) {
                        socket = new WebSocket(url);
                    }
                    console.log(type);
                    socket.send(type);
                    consolemsg = "Task running..." + '\r';
                    this.consoleInformation(consolemsg);

                }
            }
            ko.applyBindings(viewModel);

            socket.onmessage = function (e) {
                if (e.data === "Done") {
                    //socket.close(1000, "done");
                    console.log("done");
                }
                consolemsg += e.data + '\r';
                viewModel.consoleInformation(consolemsg);
            }
        });

    </script>
}



